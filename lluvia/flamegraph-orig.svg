<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1078" onload="init(evt)" viewBox="0 0 1200 1078" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1078" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1061.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1061.00"> </text><svg id="frames" x="10" width="1180" total_samples="5396"><g><title>calculate_sigpending (1 samples, 0.02%)</title><rect x="0.0000%" y="949" width="0.0185%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="959.50"></text></g><g><title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="0.0000%" y="933" width="0.0185%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="943.50"></text></g><g><title>ret_from_fork (6 samples, 0.11%)</title><rect x="0.0000%" y="981" width="0.1112%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="6"/><text x="0.2500%" y="991.50"></text></g><g><title>schedule_tail (6 samples, 0.11%)</title><rect x="0.0000%" y="965" width="0.1112%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="6"/><text x="0.2500%" y="975.50"></text></g><g><title>finish_task_switch (5 samples, 0.09%)</title><rect x="0.0185%" y="949" width="0.0927%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="5"/><text x="0.2685%" y="959.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.09%)</title><rect x="0.0185%" y="933" width="0.0927%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="5"/><text x="0.2685%" y="943.50"></text></g><g><title>perf_pmu_enable.part.0 (5 samples, 0.09%)</title><rect x="0.0185%" y="917" width="0.0927%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="5"/><text x="0.2685%" y="927.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.09%)</title><rect x="0.0185%" y="901" width="0.0927%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="5"/><text x="0.2685%" y="911.50"></text></g><g><title>__GI___clone (7 samples, 0.13%)</title><rect x="0.0000%" y="997" width="0.1297%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="7"/><text x="0.2500%" y="1007.50"></text></g><g><title>start_thread (1 samples, 0.02%)</title><rect x="0.1112%" y="981" width="0.0185%" height="15" fill="rgb(220,122,19)" fg:x="6" fg:w="1"/><text x="0.3612%" y="991.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.02%)</title><rect x="0.1112%" y="965" width="0.0185%" height="15" fill="rgb(250,228,42)" fg:x="6" fg:w="1"/><text x="0.3612%" y="975.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (1 samples, 0.02%)</title><rect x="0.1112%" y="949" width="0.0185%" height="15" fill="rgb(240,193,28)" fg:x="6" fg:w="1"/><text x="0.3612%" y="959.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (1 samples, 0.02%)</title><rect x="0.1112%" y="933" width="0.0185%" height="15" fill="rgb(216,20,37)" fg:x="6" fg:w="1"/><text x="0.3612%" y="943.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (1 samples, 0.02%)</title><rect x="0.1112%" y="917" width="0.0185%" height="15" fill="rgb(206,188,39)" fg:x="6" fg:w="1"/><text x="0.3612%" y="927.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (1 samples, 0.02%)</title><rect x="0.1112%" y="901" width="0.0185%" height="15" fill="rgb(217,207,13)" fg:x="6" fg:w="1"/><text x="0.3612%" y="911.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.02%)</title><rect x="0.1112%" y="885" width="0.0185%" height="15" fill="rgb(231,73,38)" fg:x="6" fg:w="1"/><text x="0.3612%" y="895.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="0.1112%" y="869" width="0.0185%" height="15" fill="rgb(225,20,46)" fg:x="6" fg:w="1"/><text x="0.3612%" y="879.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="0.1112%" y="853" width="0.0185%" height="15" fill="rgb(210,31,41)" fg:x="6" fg:w="1"/><text x="0.3612%" y="863.50"></text></g><g><title>__x64_sys_mmap (1 samples, 0.02%)</title><rect x="0.1112%" y="837" width="0.0185%" height="15" fill="rgb(221,200,47)" fg:x="6" fg:w="1"/><text x="0.3612%" y="847.50"></text></g><g><title>ksys_mmap_pgoff (1 samples, 0.02%)</title><rect x="0.1112%" y="821" width="0.0185%" height="15" fill="rgb(226,26,5)" fg:x="6" fg:w="1"/><text x="0.3612%" y="831.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.02%)</title><rect x="0.1112%" y="805" width="0.0185%" height="15" fill="rgb(249,33,26)" fg:x="6" fg:w="1"/><text x="0.3612%" y="815.50"></text></g><g><title>do_mmap (1 samples, 0.02%)</title><rect x="0.1112%" y="789" width="0.0185%" height="15" fill="rgb(235,183,28)" fg:x="6" fg:w="1"/><text x="0.3612%" y="799.50"></text></g><g><title>mmap_region (1 samples, 0.02%)</title><rect x="0.1112%" y="773" width="0.0185%" height="15" fill="rgb(221,5,38)" fg:x="6" fg:w="1"/><text x="0.3612%" y="783.50"></text></g><g><title>perf_event_mmap (1 samples, 0.02%)</title><rect x="0.1112%" y="757" width="0.0185%" height="15" fill="rgb(247,18,42)" fg:x="6" fg:w="1"/><text x="0.3612%" y="767.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.02%)</title><rect x="0.1112%" y="741" width="0.0185%" height="15" fill="rgb(241,131,45)" fg:x="6" fg:w="1"/><text x="0.3612%" y="751.50"></text></g><g><title>__libc_start_main (1 samples, 0.02%)</title><rect x="0.1297%" y="981" width="0.0185%" height="15" fill="rgb(249,31,29)" fg:x="7" fg:w="1"/><text x="0.3797%" y="991.50"></text></g><g><title>main (1 samples, 0.02%)</title><rect x="0.1297%" y="965" width="0.0185%" height="15" fill="rgb(225,111,53)" fg:x="7" fg:w="1"/><text x="0.3797%" y="975.50"></text></g><g><title>std::rt::lang_start_internal (1 samples, 0.02%)</title><rect x="0.1297%" y="949" width="0.0185%" height="15" fill="rgb(238,160,17)" fg:x="7" fg:w="1"/><text x="0.3797%" y="959.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.02%)</title><rect x="0.1297%" y="933" width="0.0185%" height="15" fill="rgb(214,148,48)" fg:x="7" fg:w="1"/><text x="0.3797%" y="943.50"></text></g><g><title>std::panicking::try (1 samples, 0.02%)</title><rect x="0.1297%" y="917" width="0.0185%" height="15" fill="rgb(232,36,49)" fg:x="7" fg:w="1"/><text x="0.3797%" y="927.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.02%)</title><rect x="0.1297%" y="901" width="0.0185%" height="15" fill="rgb(209,103,24)" fg:x="7" fg:w="1"/><text x="0.3797%" y="911.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (1 samples, 0.02%)</title><rect x="0.1297%" y="885" width="0.0185%" height="15" fill="rgb(229,88,8)" fg:x="7" fg:w="1"/><text x="0.3797%" y="895.50"></text></g><g><title>std::rt::init (1 samples, 0.02%)</title><rect x="0.1297%" y="869" width="0.0185%" height="15" fill="rgb(213,181,19)" fg:x="7" fg:w="1"/><text x="0.3797%" y="879.50"></text></g><g><title>std::sys::unix::thread::guard::init (1 samples, 0.02%)</title><rect x="0.1297%" y="853" width="0.0185%" height="15" fill="rgb(254,191,54)" fg:x="7" fg:w="1"/><text x="0.3797%" y="863.50"></text></g><g><title>std::sys::unix::thread::guard::get_stack_start_aligned (1 samples, 0.02%)</title><rect x="0.1297%" y="837" width="0.0185%" height="15" fill="rgb(241,83,37)" fg:x="7" fg:w="1"/><text x="0.3797%" y="847.50"></text></g><g><title>std::sys::unix::thread::guard::get_stack_start (1 samples, 0.02%)</title><rect x="0.1297%" y="821" width="0.0185%" height="15" fill="rgb(233,36,39)" fg:x="7" fg:w="1"/><text x="0.3797%" y="831.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.02%)</title><rect x="0.1297%" y="805" width="0.0185%" height="15" fill="rgb(226,3,54)" fg:x="7" fg:w="1"/><text x="0.3797%" y="815.50"></text></g><g><title>[libpthread-2.31.so] (1 samples, 0.02%)</title><rect x="0.1297%" y="789" width="0.0185%" height="15" fill="rgb(245,192,40)" fg:x="7" fg:w="1"/><text x="0.3797%" y="799.50"></text></g><g><title>_start (2 samples, 0.04%)</title><rect x="0.1297%" y="997" width="0.0371%" height="15" fill="rgb(238,167,29)" fg:x="7" fg:w="2"/><text x="0.3797%" y="1007.50"></text></g><g><title>_dl_start (1 samples, 0.02%)</title><rect x="0.1483%" y="981" width="0.0185%" height="15" fill="rgb(232,182,51)" fg:x="8" fg:w="1"/><text x="0.3983%" y="991.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.02%)</title><rect x="0.1483%" y="965" width="0.0185%" height="15" fill="rgb(231,60,39)" fg:x="8" fg:w="1"/><text x="0.3983%" y="975.50"></text></g><g><title>dl_main (1 samples, 0.02%)</title><rect x="0.1483%" y="949" width="0.0185%" height="15" fill="rgb(208,69,12)" fg:x="8" fg:w="1"/><text x="0.3983%" y="959.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.02%)</title><rect x="0.1483%" y="933" width="0.0185%" height="15" fill="rgb(235,93,37)" fg:x="8" fg:w="1"/><text x="0.3983%" y="943.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.02%)</title><rect x="0.1483%" y="917" width="0.0185%" height="15" fill="rgb(213,116,39)" fg:x="8" fg:w="1"/><text x="0.3983%" y="927.50"></text></g><g><title>openaux (1 samples, 0.02%)</title><rect x="0.1483%" y="901" width="0.0185%" height="15" fill="rgb(222,207,29)" fg:x="8" fg:w="1"/><text x="0.3983%" y="911.50"></text></g><g><title>_dl_map_object (1 samples, 0.02%)</title><rect x="0.1483%" y="885" width="0.0185%" height="15" fill="rgb(206,96,30)" fg:x="8" fg:w="1"/><text x="0.3983%" y="895.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.02%)</title><rect x="0.1483%" y="869" width="0.0185%" height="15" fill="rgb(218,138,4)" fg:x="8" fg:w="1"/><text x="0.3983%" y="879.50"></text></g><g><title>__mmap (1 samples, 0.02%)</title><rect x="0.1483%" y="853" width="0.0185%" height="15" fill="rgb(250,191,14)" fg:x="8" fg:w="1"/><text x="0.3983%" y="863.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="0.1483%" y="837" width="0.0185%" height="15" fill="rgb(239,60,40)" fg:x="8" fg:w="1"/><text x="0.3983%" y="847.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="0.1483%" y="821" width="0.0185%" height="15" fill="rgb(206,27,48)" fg:x="8" fg:w="1"/><text x="0.3983%" y="831.50"></text></g><g><title>__x64_sys_mmap (1 samples, 0.02%)</title><rect x="0.1483%" y="805" width="0.0185%" height="15" fill="rgb(225,35,8)" fg:x="8" fg:w="1"/><text x="0.3983%" y="815.50"></text></g><g><title>ksys_mmap_pgoff (1 samples, 0.02%)</title><rect x="0.1483%" y="789" width="0.0185%" height="15" fill="rgb(250,213,24)" fg:x="8" fg:w="1"/><text x="0.3983%" y="799.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.02%)</title><rect x="0.1483%" y="773" width="0.0185%" height="15" fill="rgb(247,123,22)" fg:x="8" fg:w="1"/><text x="0.3983%" y="783.50"></text></g><g><title>do_mmap (1 samples, 0.02%)</title><rect x="0.1483%" y="757" width="0.0185%" height="15" fill="rgb(231,138,38)" fg:x="8" fg:w="1"/><text x="0.3983%" y="767.50"></text></g><g><title>mmap_region (1 samples, 0.02%)</title><rect x="0.1483%" y="741" width="0.0185%" height="15" fill="rgb(231,145,46)" fg:x="8" fg:w="1"/><text x="0.3983%" y="751.50"></text></g><g><title>__do_munmap (1 samples, 0.02%)</title><rect x="0.1483%" y="725" width="0.0185%" height="15" fill="rgb(251,118,11)" fg:x="8" fg:w="1"/><text x="0.3983%" y="735.50"></text></g><g><title>__split_vma (1 samples, 0.02%)</title><rect x="0.1483%" y="709" width="0.0185%" height="15" fill="rgb(217,147,25)" fg:x="8" fg:w="1"/><text x="0.3983%" y="719.50"></text></g><g><title>__vma_adjust (1 samples, 0.02%)</title><rect x="0.1483%" y="693" width="0.0185%" height="15" fill="rgb(247,81,37)" fg:x="8" fg:w="1"/><text x="0.3983%" y="703.50"></text></g><g><title>__vma_link_file (1 samples, 0.02%)</title><rect x="0.1483%" y="677" width="0.0185%" height="15" fill="rgb(209,12,38)" fg:x="8" fg:w="1"/><text x="0.3983%" y="687.50"></text></g><g><title>vma_interval_tree_insert (1 samples, 0.02%)</title><rect x="0.1483%" y="661" width="0.0185%" height="15" fill="rgb(227,1,9)" fg:x="8" fg:w="1"/><text x="0.3983%" y="671.50"></text></g><g><title>lluvia-10b24cec (10 samples, 0.19%)</title><rect x="0.0000%" y="1013" width="0.1853%" height="15" fill="rgb(248,47,43)" fg:x="0" fg:w="10"/><text x="0.2500%" y="1023.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="0.1668%" y="997" width="0.0185%" height="15" fill="rgb(221,10,30)" fg:x="9" fg:w="1"/><text x="0.4168%" y="1007.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="0.1668%" y="981" width="0.0185%" height="15" fill="rgb(210,229,1)" fg:x="9" fg:w="1"/><text x="0.4168%" y="991.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.02%)</title><rect x="0.1668%" y="965" width="0.0185%" height="15" fill="rgb(222,148,37)" fg:x="9" fg:w="1"/><text x="0.4168%" y="975.50"></text></g><g><title>do_execveat_common.isra.0 (1 samples, 0.02%)</title><rect x="0.1668%" y="949" width="0.0185%" height="15" fill="rgb(234,67,33)" fg:x="9" fg:w="1"/><text x="0.4168%" y="959.50"></text></g><g><title>bprm_execve (1 samples, 0.02%)</title><rect x="0.1668%" y="933" width="0.0185%" height="15" fill="rgb(247,98,35)" fg:x="9" fg:w="1"/><text x="0.4168%" y="943.50"></text></g><g><title>exec_binprm (1 samples, 0.02%)</title><rect x="0.1668%" y="917" width="0.0185%" height="15" fill="rgb(247,138,52)" fg:x="9" fg:w="1"/><text x="0.4168%" y="927.50"></text></g><g><title>load_elf_binary (1 samples, 0.02%)</title><rect x="0.1668%" y="901" width="0.0185%" height="15" fill="rgb(213,79,30)" fg:x="9" fg:w="1"/><text x="0.4168%" y="911.50"></text></g><g><title>elf_map (1 samples, 0.02%)</title><rect x="0.1668%" y="885" width="0.0185%" height="15" fill="rgb(246,177,23)" fg:x="9" fg:w="1"/><text x="0.4168%" y="895.50"></text></g><g><title>vm_mmap (1 samples, 0.02%)</title><rect x="0.1668%" y="869" width="0.0185%" height="15" fill="rgb(230,62,27)" fg:x="9" fg:w="1"/><text x="0.4168%" y="879.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.02%)</title><rect x="0.1668%" y="853" width="0.0185%" height="15" fill="rgb(216,154,8)" fg:x="9" fg:w="1"/><text x="0.4168%" y="863.50"></text></g><g><title>do_mmap (1 samples, 0.02%)</title><rect x="0.1668%" y="837" width="0.0185%" height="15" fill="rgb(244,35,45)" fg:x="9" fg:w="1"/><text x="0.4168%" y="847.50"></text></g><g><title>mmap_region (1 samples, 0.02%)</title><rect x="0.1668%" y="821" width="0.0185%" height="15" fill="rgb(251,115,12)" fg:x="9" fg:w="1"/><text x="0.4168%" y="831.50"></text></g><g><title>perf_event_mmap (1 samples, 0.02%)</title><rect x="0.1668%" y="805" width="0.0185%" height="15" fill="rgb(240,54,50)" fg:x="9" fg:w="1"/><text x="0.4168%" y="815.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.02%)</title><rect x="0.1668%" y="789" width="0.0185%" height="15" fill="rgb(233,84,52)" fg:x="9" fg:w="1"/><text x="0.4168%" y="799.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.02%)</title><rect x="0.1668%" y="773" width="0.0185%" height="15" fill="rgb(207,117,47)" fg:x="9" fg:w="1"/><text x="0.4168%" y="783.50"></text></g><g><title>perf_event_mmap_output (1 samples, 0.02%)</title><rect x="0.1668%" y="757" width="0.0185%" height="15" fill="rgb(249,43,39)" fg:x="9" fg:w="1"/><text x="0.4168%" y="767.50"></text></g><g><title>__perf_event_header__init_id.isra.0 (1 samples, 0.02%)</title><rect x="0.1668%" y="741" width="0.0185%" height="15" fill="rgb(209,38,44)" fg:x="9" fg:w="1"/><text x="0.4168%" y="751.50"></text></g><g><title>perf_event_pid_type (1 samples, 0.02%)</title><rect x="0.1668%" y="725" width="0.0185%" height="15" fill="rgb(236,212,23)" fg:x="9" fg:w="1"/><text x="0.4168%" y="735.50"></text></g><g><title>__task_pid_nr_ns (1 samples, 0.02%)</title><rect x="0.1668%" y="709" width="0.0185%" height="15" fill="rgb(242,79,21)" fg:x="9" fg:w="1"/><text x="0.4168%" y="719.50"></text></g><g><title>__set_task_comm (1 samples, 0.02%)</title><rect x="0.1853%" y="869" width="0.0185%" height="15" fill="rgb(211,96,35)" fg:x="10" fg:w="1"/><text x="0.4353%" y="879.50"></text></g><g><title>perf_event_comm (1 samples, 0.02%)</title><rect x="0.1853%" y="853" width="0.0185%" height="15" fill="rgb(253,215,40)" fg:x="10" fg:w="1"/><text x="0.4353%" y="863.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.02%)</title><rect x="0.1853%" y="837" width="0.0185%" height="15" fill="rgb(211,81,21)" fg:x="10" fg:w="1"/><text x="0.4353%" y="847.50"></text></g><g><title>perf-exec (7 samples, 0.13%)</title><rect x="0.1853%" y="1013" width="0.1297%" height="15" fill="rgb(208,190,38)" fg:x="10" fg:w="7"/><text x="0.4353%" y="1023.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.13%)</title><rect x="0.1853%" y="997" width="0.1297%" height="15" fill="rgb(235,213,38)" fg:x="10" fg:w="7"/><text x="0.4353%" y="1007.50"></text></g><g><title>do_syscall_64 (7 samples, 0.13%)</title><rect x="0.1853%" y="981" width="0.1297%" height="15" fill="rgb(237,122,38)" fg:x="10" fg:w="7"/><text x="0.4353%" y="991.50"></text></g><g><title>__x64_sys_execve (7 samples, 0.13%)</title><rect x="0.1853%" y="965" width="0.1297%" height="15" fill="rgb(244,218,35)" fg:x="10" fg:w="7"/><text x="0.4353%" y="975.50"></text></g><g><title>do_execveat_common.isra.0 (7 samples, 0.13%)</title><rect x="0.1853%" y="949" width="0.1297%" height="15" fill="rgb(240,68,47)" fg:x="10" fg:w="7"/><text x="0.4353%" y="959.50"></text></g><g><title>bprm_execve (7 samples, 0.13%)</title><rect x="0.1853%" y="933" width="0.1297%" height="15" fill="rgb(210,16,53)" fg:x="10" fg:w="7"/><text x="0.4353%" y="943.50"></text></g><g><title>exec_binprm (7 samples, 0.13%)</title><rect x="0.1853%" y="917" width="0.1297%" height="15" fill="rgb(235,124,12)" fg:x="10" fg:w="7"/><text x="0.4353%" y="927.50"></text></g><g><title>load_elf_binary (7 samples, 0.13%)</title><rect x="0.1853%" y="901" width="0.1297%" height="15" fill="rgb(224,169,11)" fg:x="10" fg:w="7"/><text x="0.4353%" y="911.50"></text></g><g><title>begin_new_exec (7 samples, 0.13%)</title><rect x="0.1853%" y="885" width="0.1297%" height="15" fill="rgb(250,166,2)" fg:x="10" fg:w="7"/><text x="0.4353%" y="895.50"></text></g><g><title>perf_ctx_unlock (6 samples, 0.11%)</title><rect x="0.2039%" y="869" width="0.1112%" height="15" fill="rgb(242,216,29)" fg:x="11" fg:w="6"/><text x="0.4539%" y="879.50"></text></g><g><title>&lt;lluvia::VecContainer&lt;T&gt; as lluvia::Container&lt;T&gt;&gt;::take (3 samples, 0.06%)</title><rect x="0.3150%" y="997" width="0.0556%" height="15" fill="rgb(230,116,27)" fg:x="17" fg:w="3"/><text x="0.5650%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="0.3706%" y="981" width="0.0185%" height="15" fill="rgb(228,99,48)" fg:x="20" fg:w="1"/><text x="0.6206%" y="991.50"></text></g><g><title>&lt;lluvia::ComponentIterator&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.46%)</title><rect x="0.3892%" y="981" width="0.4633%" height="15" fill="rgb(253,11,6)" fg:x="21" fg:w="25"/><text x="0.6392%" y="991.50"></text></g><g><title>&lt;lluvia::EntityInternal as core::ops::drop::Drop&gt;::drop (6 samples, 0.11%)</title><rect x="0.8525%" y="981" width="0.1112%" height="15" fill="rgb(247,143,39)" fg:x="46" fg:w="6"/><text x="1.1025%" y="991.50"></text></g><g><title>&lt;lluvia::Snapshot&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="0.9637%" y="981" width="0.0185%" height="15" fill="rgb(236,97,10)" fg:x="52" fg:w="1"/><text x="1.2137%" y="991.50"></text></g><g><title>&lt;lluvia::VecContainer&lt;T&gt; as lluvia::Container&lt;T&gt;&gt;::take (17 samples, 0.32%)</title><rect x="0.9822%" y="981" width="0.3150%" height="15" fill="rgb(233,208,19)" fg:x="53" fg:w="17"/><text x="1.2322%" y="991.50"></text></g><g><title>&lt;lluvia::EntityInternal as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="1.2973%" y="965" width="0.0556%" height="15" fill="rgb(216,164,2)" fg:x="70" fg:w="3"/><text x="1.5473%" y="975.50"></text></g><g><title>__GI___libc_free (2 samples, 0.04%)</title><rect x="1.3529%" y="965" width="0.0371%" height="15" fill="rgb(220,129,5)" fg:x="73" fg:w="2"/><text x="1.6029%" y="975.50"></text></g><g><title>[lluvia-10b24cec00b83c3d] (6 samples, 0.11%)</title><rect x="1.2973%" y="981" width="0.1112%" height="15" fill="rgb(242,17,10)" fg:x="70" fg:w="6"/><text x="1.5473%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::RawComponent&lt;&amp;str,lluvia::VecContainer&lt;&amp;str&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="1.3899%" y="965" width="0.0185%" height="15" fill="rgb(242,107,0)" fg:x="75" fg:w="1"/><text x="1.6399%" y="975.50"></text></g><g><title>__GI___libc_free (6 samples, 0.11%)</title><rect x="1.4085%" y="981" width="0.1112%" height="15" fill="rgb(251,28,31)" fg:x="76" fg:w="6"/><text x="1.6585%" y="991.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.07%)</title><rect x="1.5196%" y="981" width="0.0741%" height="15" fill="rgb(233,223,10)" fg:x="82" fg:w="4"/><text x="1.7696%" y="991.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="1.5938%" y="981" width="0.0185%" height="15" fill="rgb(215,21,27)" fg:x="86" fg:w="1"/><text x="1.8438%" y="991.50"></text></g><g><title>_int_free (36 samples, 0.67%)</title><rect x="1.6123%" y="981" width="0.6672%" height="15" fill="rgb(232,23,21)" fg:x="87" fg:w="36"/><text x="1.8623%" y="991.50"></text></g><g><title>_int_malloc (4 samples, 0.07%)</title><rect x="2.2795%" y="981" width="0.0741%" height="15" fill="rgb(244,5,23)" fg:x="123" fg:w="4"/><text x="2.5295%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.13%)</title><rect x="2.3536%" y="981" width="0.1297%" height="15" fill="rgb(226,81,46)" fg:x="127" fg:w="7"/><text x="2.6036%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.11%)</title><rect x="2.3721%" y="965" width="0.1112%" height="15" fill="rgb(247,70,30)" fg:x="128" fg:w="6"/><text x="2.6221%" y="975.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (3 samples, 0.06%)</title><rect x="2.4277%" y="949" width="0.0556%" height="15" fill="rgb(212,68,19)" fg:x="131" fg:w="3"/><text x="2.6777%" y="959.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (3 samples, 0.06%)</title><rect x="2.4277%" y="933" width="0.0556%" height="15" fill="rgb(240,187,13)" fg:x="131" fg:w="3"/><text x="2.6777%" y="943.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.22%)</title><rect x="2.4833%" y="981" width="0.2224%" height="15" fill="rgb(223,113,26)" fg:x="134" fg:w="12"/><text x="2.7333%" y="991.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (3 samples, 0.06%)</title><rect x="2.7057%" y="981" width="0.0556%" height="15" fill="rgb(206,192,2)" fg:x="146" fg:w="3"/><text x="2.9557%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLock&lt;lluvia::TableInternal&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;,lluvia::VecContainer&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt;&gt; (3 samples, 0.06%)</title><rect x="2.7057%" y="965" width="0.0556%" height="15" fill="rgb(241,108,4)" fg:x="146" fg:w="3"/><text x="2.9557%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;lluvia::TableInternal&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;,lluvia::VecContainer&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt;&gt; (3 samples, 0.06%)</title><rect x="2.7057%" y="949" width="0.0556%" height="15" fill="rgb(247,173,49)" fg:x="146" fg:w="3"/><text x="2.9557%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::TableInternal&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;,lluvia::VecContainer&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt; (3 samples, 0.06%)</title><rect x="2.7057%" y="933" width="0.0556%" height="15" fill="rgb(224,114,35)" fg:x="146" fg:w="3"/><text x="2.9557%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::VecContainer&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt; (3 samples, 0.06%)</title><rect x="2.7057%" y="917" width="0.0556%" height="15" fill="rgb(245,159,27)" fg:x="146" fg:w="3"/><text x="2.9557%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;lluvia::VCBlock&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt;&gt; (3 samples, 0.06%)</title><rect x="2.7057%" y="901" width="0.0556%" height="15" fill="rgb(245,172,44)" fg:x="146" fg:w="3"/><text x="2.9557%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="2.7057%" y="885" width="0.0556%" height="15" fill="rgb(236,23,11)" fg:x="146" fg:w="3"/><text x="2.9557%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;lluvia::VCBlock&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;]&gt; (3 samples, 0.06%)</title><rect x="2.7057%" y="869" width="0.0556%" height="15" fill="rgb(205,117,38)" fg:x="146" fg:w="3"/><text x="2.9557%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="2.7613%" y="965" width="0.0185%" height="15" fill="rgb(237,72,25)" fg:x="149" fg:w="1"/><text x="3.0113%" y="975.50"></text></g><g><title>__GI___libc_free (11 samples, 0.20%)</title><rect x="2.7798%" y="965" width="0.2039%" height="15" fill="rgb(244,70,9)" fg:x="150" fg:w="11"/><text x="3.0298%" y="975.50"></text></g><g><title>_int_free (11 samples, 0.20%)</title><rect x="2.9837%" y="965" width="0.2039%" height="15" fill="rgb(217,125,39)" fg:x="161" fg:w="11"/><text x="3.2337%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::Snapshot&lt;&amp;str&gt;&gt; (4 samples, 0.07%)</title><rect x="3.1875%" y="965" width="0.0741%" height="15" fill="rgb(235,36,10)" fg:x="172" fg:w="4"/><text x="3.4375%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;lluvia::RawComponent&lt;&amp;str,lluvia::VecContainer&lt;&amp;str&gt;&gt;&gt;&gt; (3 samples, 0.06%)</title><rect x="3.2061%" y="949" width="0.0556%" height="15" fill="rgb(251,123,47)" fg:x="173" fg:w="3"/><text x="3.4561%" y="959.50"></text></g><g><title>lluvia::RawComponent&lt;T,C&gt;::get (19 samples, 0.35%)</title><rect x="3.2617%" y="965" width="0.3521%" height="15" fill="rgb(221,13,13)" fg:x="176" fg:w="19"/><text x="3.5117%" y="975.50"></text></g><g><title>lluvia::Snapshot&lt;T&gt;::assert_alive (4 samples, 0.07%)</title><rect x="3.7250%" y="949" width="0.0741%" height="15" fill="rgb(238,131,9)" fg:x="201" fg:w="4"/><text x="3.9750%" y="959.50"></text></g><g><title>lluvia::Snapshot&lt;T&gt;::is_committed (4 samples, 0.07%)</title><rect x="3.7250%" y="933" width="0.0741%" height="15" fill="rgb(211,50,8)" fg:x="201" fg:w="4"/><text x="3.9750%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.07%)</title><rect x="3.7250%" y="917" width="0.0741%" height="15" fill="rgb(245,182,24)" fg:x="201" fg:w="4"/><text x="3.9750%" y="927.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (4 samples, 0.07%)</title><rect x="3.7250%" y="901" width="0.0741%" height="15" fill="rgb(242,14,37)" fg:x="201" fg:w="4"/><text x="3.9750%" y="911.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (4 samples, 0.07%)</title><rect x="3.7250%" y="885" width="0.0741%" height="15" fill="rgb(246,228,12)" fg:x="201" fg:w="4"/><text x="3.9750%" y="895.50"></text></g><g><title>lluvia::Snapshot&lt;T&gt;::get (14 samples, 0.26%)</title><rect x="3.6138%" y="965" width="0.2595%" height="15" fill="rgb(213,55,15)" fg:x="195" fg:w="14"/><text x="3.8638%" y="975.50"></text></g><g><title>lluvia::Snapshot&lt;T&gt;::is_id_in_snapshot (4 samples, 0.07%)</title><rect x="3.7991%" y="949" width="0.0741%" height="15" fill="rgb(209,9,3)" fg:x="205" fg:w="4"/><text x="4.0491%" y="959.50"></text></g><g><title>anon.e2a6da61a22c867629cc2fd8cc7cd33e.64.llvm.2292296395186354698 (63 samples, 1.17%)</title><rect x="2.7613%" y="981" width="1.1675%" height="15" fill="rgb(230,59,30)" fg:x="149" fg:w="63"/><text x="3.0113%" y="991.50"></text></g><g><title>lluvia::Snapshot&lt;T&gt;::snapshot (3 samples, 0.06%)</title><rect x="3.8732%" y="965" width="0.0556%" height="15" fill="rgb(209,121,21)" fg:x="209" fg:w="3"/><text x="4.1232%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;lluvia::VCBlock&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt; (5 samples, 0.09%)</title><rect x="3.9288%" y="981" width="0.0927%" height="15" fill="rgb(220,109,13)" fg:x="212" fg:w="5"/><text x="4.1788%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::VCBlock&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt; (4 samples, 0.07%)</title><rect x="3.9474%" y="965" width="0.0741%" height="15" fill="rgb(232,18,1)" fg:x="213" fg:w="4"/><text x="4.1974%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt; (4 samples, 0.07%)</title><rect x="3.9474%" y="949" width="0.0741%" height="15" fill="rgb(215,41,42)" fg:x="213" fg:w="4"/><text x="4.1974%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt; (4 samples, 0.07%)</title><rect x="3.9474%" y="933" width="0.0741%" height="15" fill="rgb(224,123,36)" fg:x="213" fg:w="4"/><text x="4.1974%" y="943.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.07%)</title><rect x="3.9474%" y="917" width="0.0741%" height="15" fill="rgb(240,125,3)" fg:x="213" fg:w="4"/><text x="4.1974%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.07%)</title><rect x="3.9474%" y="901" width="0.0741%" height="15" fill="rgb(205,98,50)" fg:x="213" fg:w="4"/><text x="4.1974%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.07%)</title><rect x="3.9474%" y="885" width="0.0741%" height="15" fill="rgb(205,185,37)" fg:x="213" fg:w="4"/><text x="4.1974%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::RawComponent&lt;&amp;str,lluvia::VecContainer&lt;&amp;str&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="4.0215%" y="981" width="0.0371%" height="15" fill="rgb(238,207,15)" fg:x="217" fg:w="2"/><text x="4.2715%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::RawComponent&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;,lluvia::VecContainer&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="4.0586%" y="981" width="0.0185%" height="15" fill="rgb(213,199,42)" fg:x="219" fg:w="1"/><text x="4.3086%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::Snapshot&lt;&amp;str&gt;&gt; (1 samples, 0.02%)</title><rect x="4.0771%" y="981" width="0.0185%" height="15" fill="rgb(235,201,11)" fg:x="220" fg:w="1"/><text x="4.3271%" y="991.50"></text></g><g><title>lluvia::Instance::id_is_valid (157 samples, 2.91%)</title><rect x="4.0956%" y="981" width="2.9096%" height="15" fill="rgb(207,46,11)" fg:x="221" fg:w="157"/><text x="4.3456%" y="991.50">ll..</text></g><g><title>lluvia::RawComponent&lt;T,C&gt;::get (47 samples, 0.87%)</title><rect x="7.0052%" y="981" width="0.8710%" height="15" fill="rgb(241,35,35)" fg:x="378" fg:w="47"/><text x="7.2552%" y="991.50"></text></g><g><title>lluvia::RawComponent&lt;T,C&gt;::set (37 samples, 0.69%)</title><rect x="7.8762%" y="981" width="0.6857%" height="15" fill="rgb(243,32,47)" fg:x="425" fg:w="37"/><text x="8.1262%" y="991.50"></text></g><g><title>&lt;lluvia::VecContainer&lt;T&gt; as lluvia::Container&lt;T&gt;&gt;::set (19 samples, 0.35%)</title><rect x="8.2098%" y="965" width="0.3521%" height="15" fill="rgb(247,202,23)" fg:x="443" fg:w="19"/><text x="8.4598%" y="975.50"></text></g><g><title>lluvia::RawComponent&lt;T,C&gt;::take (24 samples, 0.44%)</title><rect x="8.5619%" y="981" width="0.4448%" height="15" fill="rgb(219,102,11)" fg:x="462" fg:w="24"/><text x="8.8119%" y="991.50"></text></g><g><title>lluvia::Snapshot&lt;T&gt;::commit (7 samples, 0.13%)</title><rect x="9.0067%" y="981" width="0.1297%" height="15" fill="rgb(243,110,44)" fg:x="486" fg:w="7"/><text x="9.2567%" y="991.50"></text></g><g><title>lluvia::Snapshot&lt;T&gt;::get (3 samples, 0.06%)</title><rect x="9.1364%" y="981" width="0.0556%" height="15" fill="rgb(222,74,54)" fg:x="493" fg:w="3"/><text x="9.3864%" y="991.50"></text></g><g><title>lluvia::Snapshot&lt;T&gt;::assert_alive (3 samples, 0.06%)</title><rect x="9.1364%" y="965" width="0.0556%" height="15" fill="rgb(216,99,12)" fg:x="493" fg:w="3"/><text x="9.3864%" y="975.50"></text></g><g><title>lluvia::Snapshot&lt;T&gt;::is_committed (3 samples, 0.06%)</title><rect x="9.1364%" y="949" width="0.0556%" height="15" fill="rgb(226,22,26)" fg:x="493" fg:w="3"/><text x="9.3864%" y="959.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.06%)</title><rect x="9.1364%" y="933" width="0.0556%" height="15" fill="rgb(217,163,10)" fg:x="493" fg:w="3"/><text x="9.3864%" y="943.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (3 samples, 0.06%)</title><rect x="9.1364%" y="917" width="0.0556%" height="15" fill="rgb(213,25,53)" fg:x="493" fg:w="3"/><text x="9.3864%" y="927.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (3 samples, 0.06%)</title><rect x="9.1364%" y="901" width="0.0556%" height="15" fill="rgb(252,105,26)" fg:x="493" fg:w="3"/><text x="9.3864%" y="911.50"></text></g><g><title>lluvia::Snapshot&lt;T&gt;::new (6 samples, 0.11%)</title><rect x="9.1920%" y="981" width="0.1112%" height="15" fill="rgb(220,39,43)" fg:x="496" fg:w="6"/><text x="9.4420%" y="991.50"></text></g><g><title>lluvia::Table&lt;T,C&gt;::new (3 samples, 0.06%)</title><rect x="9.2476%" y="965" width="0.0556%" height="15" fill="rgb(229,68,48)" fg:x="499" fg:w="3"/><text x="9.4976%" y="975.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (3 samples, 0.06%)</title><rect x="9.2476%" y="949" width="0.0556%" height="15" fill="rgb(252,8,32)" fg:x="499" fg:w="3"/><text x="9.4976%" y="959.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3 samples, 0.06%)</title><rect x="9.2476%" y="933" width="0.0556%" height="15" fill="rgb(223,20,43)" fg:x="499" fg:w="3"/><text x="9.4976%" y="943.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.06%)</title><rect x="9.2476%" y="917" width="0.0556%" height="15" fill="rgb(229,81,49)" fg:x="499" fg:w="3"/><text x="9.4976%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.06%)</title><rect x="9.2476%" y="901" width="0.0556%" height="15" fill="rgb(236,28,36)" fg:x="499" fg:w="3"/><text x="9.4976%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.06%)</title><rect x="9.2476%" y="885" width="0.0556%" height="15" fill="rgb(249,185,26)" fg:x="499" fg:w="3"/><text x="9.4976%" y="895.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.06%)</title><rect x="9.2476%" y="869" width="0.0556%" height="15" fill="rgb(249,174,33)" fg:x="499" fg:w="3"/><text x="9.4976%" y="879.50"></text></g><g><title>lluvia::Snapshot&lt;T&gt;::reset (2 samples, 0.04%)</title><rect x="9.3032%" y="981" width="0.0371%" height="15" fill="rgb(233,201,37)" fg:x="502" fg:w="2"/><text x="9.5532%" y="991.50"></text></g><g><title>lluvia::Snapshot&lt;T&gt;::snapshot (2 samples, 0.04%)</title><rect x="9.3403%" y="981" width="0.0371%" height="15" fill="rgb(221,78,26)" fg:x="504" fg:w="2"/><text x="9.5903%" y="991.50"></text></g><g><title>[anon] (544 samples, 10.08%)</title><rect x="0.3706%" y="997" width="10.0815%" height="15" fill="rgb(250,127,30)" fg:x="20" fg:w="544"/><text x="0.6206%" y="1007.50">[anon]</text></g><g><title>lluvia::VecContainer&lt;T&gt;::ensure_space_for_id (58 samples, 1.07%)</title><rect x="9.3773%" y="981" width="1.0749%" height="15" fill="rgb(230,49,44)" fg:x="506" fg:w="58"/><text x="9.6273%" y="991.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="10.4522%" y="981" width="0.0185%" height="15" fill="rgb(229,67,23)" fg:x="564" fg:w="1"/><text x="10.7022%" y="991.50"></text></g><g><title>_int_free (2 samples, 0.04%)</title><rect x="10.4707%" y="981" width="0.0371%" height="15" fill="rgb(249,83,47)" fg:x="565" fg:w="2"/><text x="10.7207%" y="991.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::get_mut_unchecked (2 samples, 0.04%)</title><rect x="10.5078%" y="965" width="0.0371%" height="15" fill="rgb(215,43,3)" fg:x="567" fg:w="2"/><text x="10.7578%" y="975.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (3 samples, 0.06%)</title><rect x="10.5078%" y="981" width="0.0556%" height="15" fill="rgb(238,154,13)" fg:x="567" fg:w="3"/><text x="10.7578%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLock&lt;lluvia::TableInternal&lt;usize,lluvia::VecContainer&lt;usize&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="10.5448%" y="965" width="0.0185%" height="15" fill="rgb(219,56,2)" fg:x="569" fg:w="1"/><text x="10.7948%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;lluvia::TableInternal&lt;usize,lluvia::VecContainer&lt;usize&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="10.5448%" y="949" width="0.0185%" height="15" fill="rgb(233,0,4)" fg:x="569" fg:w="1"/><text x="10.7948%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::TableInternal&lt;usize,lluvia::VecContainer&lt;usize&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="10.5448%" y="933" width="0.0185%" height="15" fill="rgb(235,30,7)" fg:x="569" fg:w="1"/><text x="10.7948%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::VecContainer&lt;usize&gt;&gt; (1 samples, 0.02%)</title><rect x="10.5448%" y="917" width="0.0185%" height="15" fill="rgb(250,79,13)" fg:x="569" fg:w="1"/><text x="10.7948%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;lluvia::VCBlock&lt;usize&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="10.5448%" y="901" width="0.0185%" height="15" fill="rgb(211,146,34)" fg:x="569" fg:w="1"/><text x="10.7948%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="10.5448%" y="885" width="0.0185%" height="15" fill="rgb(228,22,38)" fg:x="569" fg:w="1"/><text x="10.7948%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;lluvia::VCBlock&lt;usize&gt;&gt;]&gt; (1 samples, 0.02%)</title><rect x="10.5448%" y="869" width="0.0185%" height="15" fill="rgb(235,168,5)" fg:x="569" fg:w="1"/><text x="10.7948%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;lluvia::VCBlock&lt;usize&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="10.5448%" y="853" width="0.0185%" height="15" fill="rgb(221,155,16)" fg:x="569" fg:w="1"/><text x="10.7948%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::VCBlock&lt;usize&gt;&gt; (1 samples, 0.02%)</title><rect x="10.5448%" y="837" width="0.0185%" height="15" fill="rgb(215,215,53)" fg:x="569" fg:w="1"/><text x="10.7948%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;usize&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="10.5448%" y="821" width="0.0185%" height="15" fill="rgb(223,4,10)" fg:x="569" fg:w="1"/><text x="10.7948%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;usize&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="10.5448%" y="805" width="0.0185%" height="15" fill="rgb(234,103,6)" fg:x="569" fg:w="1"/><text x="10.7948%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="10.5448%" y="789" width="0.0185%" height="15" fill="rgb(227,97,0)" fg:x="569" fg:w="1"/><text x="10.7948%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="10.5448%" y="773" width="0.0185%" height="15" fill="rgb(234,150,53)" fg:x="569" fg:w="1"/><text x="10.7948%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="10.5448%" y="757" width="0.0185%" height="15" fill="rgb(228,201,54)" fg:x="569" fg:w="1"/><text x="10.7948%" y="767.50"></text></g><g><title>lluvia::Instance::id_is_valid (10 samples, 0.19%)</title><rect x="10.5634%" y="981" width="0.1853%" height="15" fill="rgb(222,22,37)" fg:x="570" fg:w="10"/><text x="10.8134%" y="991.50"></text></g><g><title>lluvia::RawComponent&lt;T,C&gt;::set (5 samples, 0.09%)</title><rect x="10.7487%" y="981" width="0.0927%" height="15" fill="rgb(237,53,32)" fg:x="580" fg:w="5"/><text x="10.9987%" y="991.50"></text></g><g><title>lluvia::RawComponent&lt;T,C&gt;::take (6 samples, 0.11%)</title><rect x="10.8414%" y="981" width="0.1112%" height="15" fill="rgb(233,25,53)" fg:x="585" fg:w="6"/><text x="11.0914%" y="991.50"></text></g><g><title>[lluvia-10b24cec00b83c3d] (29 samples, 0.54%)</title><rect x="10.4522%" y="997" width="0.5374%" height="15" fill="rgb(210,40,34)" fg:x="564" fg:w="29"/><text x="10.7022%" y="1007.50"></text></g><g><title>lluvia::VecContainer&lt;T&gt;::ensure_space_for_id (2 samples, 0.04%)</title><rect x="10.9526%" y="981" width="0.0371%" height="15" fill="rgb(241,220,44)" fg:x="591" fg:w="2"/><text x="11.2026%" y="991.50"></text></g><g><title>&lt;lluvia::Table&lt;T,C&gt; as lluvia::ComponentTable&gt;::clear_entity (15 samples, 0.28%)</title><rect x="10.9896%" y="981" width="0.2780%" height="15" fill="rgb(235,28,35)" fg:x="593" fg:w="15"/><text x="11.2396%" y="991.50"></text></g><g><title>&lt;lluvia::VecContainer&lt;T&gt; as lluvia::Container&lt;T&gt;&gt;::take (3 samples, 0.06%)</title><rect x="11.2676%" y="981" width="0.0556%" height="15" fill="rgb(210,56,17)" fg:x="608" fg:w="3"/><text x="11.5176%" y="991.50"></text></g><g><title>lluvia::Instance::id_is_valid (2 samples, 0.04%)</title><rect x="11.3232%" y="965" width="0.0371%" height="15" fill="rgb(224,130,29)" fg:x="611" fg:w="2"/><text x="11.5732%" y="975.50"></text></g><g><title>[lluvia-10b24cec00b83c3d] (13 samples, 0.24%)</title><rect x="11.3232%" y="981" width="0.2409%" height="15" fill="rgb(235,212,8)" fg:x="611" fg:w="13"/><text x="11.5732%" y="991.50"></text></g><g><title>lluvia::RawComponent&lt;T,C&gt;::take (11 samples, 0.20%)</title><rect x="11.3603%" y="965" width="0.2039%" height="15" fill="rgb(223,33,50)" fg:x="613" fg:w="11"/><text x="11.6103%" y="975.50"></text></g><g><title>__GI___libc_free (5 samples, 0.09%)</title><rect x="11.5641%" y="981" width="0.0927%" height="15" fill="rgb(219,149,13)" fg:x="624" fg:w="5"/><text x="11.8141%" y="991.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.06%)</title><rect x="11.6568%" y="981" width="0.0556%" height="15" fill="rgb(250,156,29)" fg:x="629" fg:w="3"/><text x="11.9068%" y="991.50"></text></g><g><title>_int_free (23 samples, 0.43%)</title><rect x="11.7124%" y="981" width="0.4262%" height="15" fill="rgb(216,193,19)" fg:x="632" fg:w="23"/><text x="11.9624%" y="991.50"></text></g><g><title>_int_malloc (6 samples, 0.11%)</title><rect x="12.1386%" y="981" width="0.1112%" height="15" fill="rgb(216,135,14)" fg:x="655" fg:w="6"/><text x="12.3886%" y="991.50"></text></g><g><title>_int_realloc (10 samples, 0.19%)</title><rect x="12.2498%" y="981" width="0.1853%" height="15" fill="rgb(241,47,5)" fg:x="661" fg:w="10"/><text x="12.4998%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="12.4351%" y="981" width="0.0185%" height="15" fill="rgb(233,42,35)" fg:x="671" fg:w="1"/><text x="12.6851%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.11%)</title><rect x="12.4537%" y="981" width="0.1112%" height="15" fill="rgb(231,13,6)" fg:x="672" fg:w="6"/><text x="12.7037%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.09%)</title><rect x="12.4722%" y="965" width="0.0927%" height="15" fill="rgb(207,181,40)" fg:x="673" fg:w="5"/><text x="12.7222%" y="975.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (5 samples, 0.09%)</title><rect x="12.4722%" y="949" width="0.0927%" height="15" fill="rgb(254,173,49)" fg:x="673" fg:w="5"/><text x="12.7222%" y="959.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (5 samples, 0.09%)</title><rect x="12.4722%" y="933" width="0.0927%" height="15" fill="rgb(221,1,38)" fg:x="673" fg:w="5"/><text x="12.7222%" y="943.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.09%)</title><rect x="12.5649%" y="981" width="0.0927%" height="15" fill="rgb(206,124,46)" fg:x="678" fg:w="5"/><text x="12.8149%" y="991.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::get_mut_unchecked (1 samples, 0.02%)</title><rect x="12.6575%" y="965" width="0.0185%" height="15" fill="rgb(249,21,11)" fg:x="683" fg:w="1"/><text x="12.9075%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;lluvia::EntityInternal,&amp;alloc::alloc::Global&gt;&gt; (5 samples, 0.09%)</title><rect x="12.6761%" y="949" width="0.0927%" height="15" fill="rgb(222,201,40)" fg:x="684" fg:w="5"/><text x="12.9261%" y="959.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.09%)</title><rect x="12.6761%" y="933" width="0.0927%" height="15" fill="rgb(235,61,29)" fg:x="684" fg:w="5"/><text x="12.9261%" y="943.50"></text></g><g><title>&lt;&amp;A as core::alloc::Allocator&gt;::deallocate (5 samples, 0.09%)</title><rect x="12.6761%" y="917" width="0.0927%" height="15" fill="rgb(219,207,3)" fg:x="684" fg:w="5"/><text x="12.9261%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.09%)</title><rect x="12.6761%" y="901" width="0.0927%" height="15" fill="rgb(222,56,46)" fg:x="684" fg:w="5"/><text x="12.9261%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.09%)</title><rect x="12.6761%" y="885" width="0.0927%" height="15" fill="rgb(239,76,54)" fg:x="684" fg:w="5"/><text x="12.9261%" y="895.50"></text></g><g><title>core::mem::drop (6 samples, 0.11%)</title><rect x="12.6761%" y="965" width="0.1112%" height="15" fill="rgb(231,124,27)" fg:x="684" fg:w="6"/><text x="12.9261%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;std::sync::rwlock::RwLock&lt;lluvia::TableInternal&lt;usize,lluvia::VecContainer&lt;usize&gt;&gt;&gt;,&amp;alloc::alloc::Global&gt;&gt; (1 samples, 0.02%)</title><rect x="12.7687%" y="949" width="0.0185%" height="15" fill="rgb(249,195,6)" fg:x="689" fg:w="1"/><text x="13.0187%" y="959.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="12.7687%" y="933" width="0.0185%" height="15" fill="rgb(237,174,47)" fg:x="689" fg:w="1"/><text x="13.0187%" y="943.50"></text></g><g><title>&lt;&amp;A as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="12.7687%" y="917" width="0.0185%" height="15" fill="rgb(206,201,31)" fg:x="689" fg:w="1"/><text x="13.0187%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="12.7687%" y="901" width="0.0185%" height="15" fill="rgb(231,57,52)" fg:x="689" fg:w="1"/><text x="13.0187%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="12.7687%" y="885" width="0.0185%" height="15" fill="rgb(248,177,22)" fg:x="689" fg:w="1"/><text x="13.0187%" y="895.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (10 samples, 0.19%)</title><rect x="12.6575%" y="981" width="0.1853%" height="15" fill="rgb(215,211,37)" fg:x="683" fg:w="10"/><text x="12.9075%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLock&lt;lluvia::TableInternal&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;,lluvia::VecContainer&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt;&gt; (3 samples, 0.06%)</title><rect x="12.7872%" y="965" width="0.0556%" height="15" fill="rgb(241,128,51)" fg:x="690" fg:w="3"/><text x="13.0372%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;lluvia::TableInternal&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;,lluvia::VecContainer&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt;&gt; (3 samples, 0.06%)</title><rect x="12.7872%" y="949" width="0.0556%" height="15" fill="rgb(227,165,31)" fg:x="690" fg:w="3"/><text x="13.0372%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::TableInternal&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;,lluvia::VecContainer&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt; (3 samples, 0.06%)</title><rect x="12.7872%" y="933" width="0.0556%" height="15" fill="rgb(228,167,24)" fg:x="690" fg:w="3"/><text x="13.0372%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::VecContainer&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt; (3 samples, 0.06%)</title><rect x="12.7872%" y="917" width="0.0556%" height="15" fill="rgb(228,143,12)" fg:x="690" fg:w="3"/><text x="13.0372%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;lluvia::VCBlock&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt;&gt; (3 samples, 0.06%)</title><rect x="12.7872%" y="901" width="0.0556%" height="15" fill="rgb(249,149,8)" fg:x="690" fg:w="3"/><text x="13.0372%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="12.7872%" y="885" width="0.0556%" height="15" fill="rgb(243,35,44)" fg:x="690" fg:w="3"/><text x="13.0372%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;lluvia::VCBlock&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;]&gt; (3 samples, 0.06%)</title><rect x="12.7872%" y="869" width="0.0556%" height="15" fill="rgb(246,89,9)" fg:x="690" fg:w="3"/><text x="13.0372%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (3 samples, 0.06%)</title><rect x="12.8428%" y="981" width="0.0556%" height="15" fill="rgb(233,213,13)" fg:x="693" fg:w="3"/><text x="13.0928%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (2 samples, 0.04%)</title><rect x="12.8614%" y="965" width="0.0371%" height="15" fill="rgb(233,141,41)" fg:x="694" fg:w="2"/><text x="13.1114%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.04%)</title><rect x="12.8614%" y="949" width="0.0371%" height="15" fill="rgb(239,167,4)" fg:x="694" fg:w="2"/><text x="13.1114%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.04%)</title><rect x="12.8614%" y="933" width="0.0371%" height="15" fill="rgb(209,217,16)" fg:x="694" fg:w="2"/><text x="13.1114%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::RawComponent&lt;&amp;str,lluvia::VecContainer&lt;&amp;str&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="12.8984%" y="981" width="0.0371%" height="15" fill="rgb(219,88,35)" fg:x="696" fg:w="2"/><text x="13.1484%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::sync::atomic::AtomicBool&gt;&gt; (2 samples, 0.04%)</title><rect x="12.8984%" y="965" width="0.0371%" height="15" fill="rgb(220,193,23)" fg:x="696" fg:w="2"/><text x="13.1484%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="12.8984%" y="949" width="0.0371%" height="15" fill="rgb(230,90,52)" fg:x="696" fg:w="2"/><text x="13.1484%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::Snapshot&lt;&amp;str&gt;&gt; (2 samples, 0.04%)</title><rect x="12.9355%" y="981" width="0.0371%" height="15" fill="rgb(252,106,19)" fg:x="698" fg:w="2"/><text x="13.1855%" y="991.50"></text></g><g><title>lluvia::Instance::add_entity (3 samples, 0.06%)</title><rect x="12.9726%" y="981" width="0.0556%" height="15" fill="rgb(206,74,20)" fg:x="700" fg:w="3"/><text x="13.2226%" y="991.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (2 samples, 0.04%)</title><rect x="12.9911%" y="965" width="0.0371%" height="15" fill="rgb(230,138,44)" fg:x="701" fg:w="2"/><text x="13.2411%" y="975.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.04%)</title><rect x="12.9911%" y="949" width="0.0371%" height="15" fill="rgb(235,182,43)" fg:x="701" fg:w="2"/><text x="13.2411%" y="959.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.04%)</title><rect x="12.9911%" y="933" width="0.0371%" height="15" fill="rgb(242,16,51)" fg:x="701" fg:w="2"/><text x="13.2411%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.04%)</title><rect x="12.9911%" y="917" width="0.0371%" height="15" fill="rgb(248,9,4)" fg:x="701" fg:w="2"/><text x="13.2411%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.04%)</title><rect x="12.9911%" y="901" width="0.0371%" height="15" fill="rgb(210,31,22)" fg:x="701" fg:w="2"/><text x="13.2411%" y="911.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.04%)</title><rect x="12.9911%" y="885" width="0.0371%" height="15" fill="rgb(239,54,39)" fg:x="701" fg:w="2"/><text x="13.2411%" y="895.50"></text></g><g><title>lluvia::Instance::add_raw_component (1 samples, 0.02%)</title><rect x="13.0282%" y="981" width="0.0185%" height="15" fill="rgb(230,99,41)" fg:x="703" fg:w="1"/><text x="13.2782%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="13.0282%" y="965" width="0.0185%" height="15" fill="rgb(253,106,12)" fg:x="703" fg:w="1"/><text x="13.2782%" y="975.50"></text></g><g><title>lluvia::Instance::id_is_valid (11 samples, 0.20%)</title><rect x="13.0467%" y="981" width="0.2039%" height="15" fill="rgb(213,46,41)" fg:x="704" fg:w="11"/><text x="13.2967%" y="991.50"></text></g><g><title>lluvia::RawComponent&lt;T,C&gt;::get (29 samples, 0.54%)</title><rect x="13.2506%" y="981" width="0.5374%" height="15" fill="rgb(215,133,35)" fg:x="715" fg:w="29"/><text x="13.5006%" y="991.50"></text></g><g><title>lluvia::RawComponent&lt;T,C&gt;::set (30 samples, 0.56%)</title><rect x="13.7880%" y="981" width="0.5560%" height="15" fill="rgb(213,28,5)" fg:x="744" fg:w="30"/><text x="14.0380%" y="991.50"></text></g><g><title>&lt;lluvia::VecContainer&lt;T&gt; as lluvia::Container&lt;T&gt;&gt;::set (2 samples, 0.04%)</title><rect x="14.3069%" y="965" width="0.0371%" height="15" fill="rgb(215,77,49)" fg:x="772" fg:w="2"/><text x="14.5569%" y="975.50"></text></g><g><title>lluvia::RawComponent&lt;T,C&gt;::take (2 samples, 0.04%)</title><rect x="14.3440%" y="981" width="0.0371%" height="15" fill="rgb(248,100,22)" fg:x="774" fg:w="2"/><text x="14.5940%" y="991.50"></text></g><g><title>lluvia::RawComponent&lt;T,lluvia::VecContainer&lt;T&gt;&gt;::snapshot (1 samples, 0.02%)</title><rect x="14.3810%" y="981" width="0.0185%" height="15" fill="rgb(208,67,9)" fg:x="776" fg:w="1"/><text x="14.6310%" y="991.50"></text></g><g><title>lluvia::Snapshot&lt;T&gt;::commit (8 samples, 0.15%)</title><rect x="14.3996%" y="981" width="0.1483%" height="15" fill="rgb(219,133,21)" fg:x="777" fg:w="8"/><text x="14.6496%" y="991.50"></text></g><g><title>lluvia::Snapshot&lt;T&gt;::ensure_value (1 samples, 0.02%)</title><rect x="14.5478%" y="981" width="0.0185%" height="15" fill="rgb(246,46,29)" fg:x="785" fg:w="1"/><text x="14.7978%" y="991.50"></text></g><g><title>lluvia::Snapshot&lt;T&gt;::get (12 samples, 0.22%)</title><rect x="14.5663%" y="981" width="0.2224%" height="15" fill="rgb(246,185,52)" fg:x="786" fg:w="12"/><text x="14.8163%" y="991.50"></text></g><g><title>lluvia::Snapshot&lt;T&gt;::new (2 samples, 0.04%)</title><rect x="14.7887%" y="981" width="0.0371%" height="15" fill="rgb(252,136,11)" fg:x="798" fg:w="2"/><text x="15.0387%" y="991.50"></text></g><g><title>lluvia::Table&lt;T,C&gt;::new (1 samples, 0.02%)</title><rect x="14.8073%" y="965" width="0.0185%" height="15" fill="rgb(219,138,53)" fg:x="799" fg:w="1"/><text x="15.0573%" y="975.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="14.8073%" y="949" width="0.0185%" height="15" fill="rgb(211,51,23)" fg:x="799" fg:w="1"/><text x="15.0573%" y="959.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="14.8073%" y="933" width="0.0185%" height="15" fill="rgb(247,221,28)" fg:x="799" fg:w="1"/><text x="15.0573%" y="943.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="14.8073%" y="917" width="0.0185%" height="15" fill="rgb(251,222,45)" fg:x="799" fg:w="1"/><text x="15.0573%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="14.8073%" y="901" width="0.0185%" height="15" fill="rgb(217,162,53)" fg:x="799" fg:w="1"/><text x="15.0573%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="14.8073%" y="885" width="0.0185%" height="15" fill="rgb(229,93,14)" fg:x="799" fg:w="1"/><text x="15.0573%" y="895.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="14.8073%" y="869" width="0.0185%" height="15" fill="rgb(209,67,49)" fg:x="799" fg:w="1"/><text x="15.0573%" y="879.50"></text></g><g><title>lluvia::Snapshot&lt;T&gt;::reset (4 samples, 0.07%)</title><rect x="14.8258%" y="981" width="0.0741%" height="15" fill="rgb(213,87,29)" fg:x="800" fg:w="4"/><text x="15.0758%" y="991.50"></text></g><g><title>lluvia::Snapshot&lt;T&gt;::snapshot (1 samples, 0.02%)</title><rect x="14.8999%" y="981" width="0.0185%" height="15" fill="rgb(205,151,52)" fg:x="804" fg:w="1"/><text x="15.1499%" y="991.50"></text></g><g><title>lluvia::VecContainer&lt;T&gt;::ensure_space_for_id (77 samples, 1.43%)</title><rect x="14.9185%" y="981" width="1.4270%" height="15" fill="rgb(253,215,39)" fg:x="805" fg:w="77"/><text x="15.1685%" y="991.50"></text></g><g><title>lluvia::Instance::add_component (1 samples, 0.02%)</title><rect x="16.4752%" y="965" width="0.0185%" height="15" fill="rgb(221,220,41)" fg:x="889" fg:w="1"/><text x="16.7252%" y="975.50"></text></g><g><title>[unknown] (301 samples, 5.58%)</title><rect x="10.9896%" y="997" width="5.5782%" height="15" fill="rgb(218,133,21)" fg:x="593" fg:w="301"/><text x="11.2396%" y="1007.50">[unknow..</text></g><g><title>lluvia::tests::snapshot_test (12 samples, 0.22%)</title><rect x="16.3454%" y="981" width="0.2224%" height="15" fill="rgb(221,193,43)" fg:x="882" fg:w="12"/><text x="16.5954%" y="991.50"></text></g><g><title>lluvia::Snapshot&lt;T&gt;::set (4 samples, 0.07%)</title><rect x="16.4937%" y="965" width="0.0741%" height="15" fill="rgb(240,128,52)" fg:x="890" fg:w="4"/><text x="16.7437%" y="975.50"></text></g><g><title>lluvia::Snapshot&lt;T&gt;::mark_entity (1 samples, 0.02%)</title><rect x="16.5493%" y="949" width="0.0185%" height="15" fill="rgb(253,114,12)" fg:x="893" fg:w="1"/><text x="16.7993%" y="959.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="16.5678%" y="581" width="0.0185%" height="15" fill="rgb(215,223,47)" fg:x="894" fg:w="1"/><text x="16.8178%" y="591.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="16.5678%" y="565" width="0.0185%" height="15" fill="rgb(248,225,23)" fg:x="894" fg:w="1"/><text x="16.8178%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (9 samples, 0.17%)</title><rect x="17.6612%" y="533" width="0.1668%" height="15" fill="rgb(250,108,0)" fg:x="953" fg:w="9"/><text x="17.9112%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (9 samples, 0.17%)</title><rect x="17.6612%" y="517" width="0.1668%" height="15" fill="rgb(228,208,7)" fg:x="953" fg:w="9"/><text x="17.9112%" y="527.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (9 samples, 0.17%)</title><rect x="17.6612%" y="501" width="0.1668%" height="15" fill="rgb(244,45,10)" fg:x="953" fg:w="9"/><text x="17.9112%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (34 samples, 0.63%)</title><rect x="17.8280%" y="533" width="0.6301%" height="15" fill="rgb(207,125,25)" fg:x="962" fg:w="34"/><text x="18.0780%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (45 samples, 0.83%)</title><rect x="18.4581%" y="533" width="0.8340%" height="15" fill="rgb(210,195,18)" fg:x="996" fg:w="45"/><text x="18.7081%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (45 samples, 0.83%)</title><rect x="18.4581%" y="517" width="0.8340%" height="15" fill="rgb(249,80,12)" fg:x="996" fg:w="45"/><text x="18.7081%" y="527.50"></text></g><g><title>&lt;lluvia::VecContainer&lt;T&gt; as lluvia::Container&lt;T&gt;&gt;::index (201 samples, 3.72%)</title><rect x="17.0126%" y="549" width="3.7250%" height="15" fill="rgb(221,65,9)" fg:x="918" fg:w="201"/><text x="17.2626%" y="559.50">&lt;llu..</text></g><g><title>lluvia::VecContainer&lt;T&gt;::get_indices (78 samples, 1.45%)</title><rect x="19.2921%" y="533" width="1.4455%" height="15" fill="rgb(235,49,36)" fg:x="1041" fg:w="78"/><text x="19.5421%" y="543.50"></text></g><g><title>&lt;lluvia::TableRef&lt;T,C&gt; as core::ops::deref::Deref&gt;::deref (232 samples, 4.30%)</title><rect x="16.9014%" y="565" width="4.2995%" height="15" fill="rgb(225,32,20)" fg:x="912" fg:w="232"/><text x="17.1514%" y="575.50">&lt;lluv..</text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::deref::Deref&gt;::deref (25 samples, 0.46%)</title><rect x="20.7376%" y="549" width="0.4633%" height="15" fill="rgb(215,141,46)" fg:x="1119" fg:w="25"/><text x="20.9876%" y="559.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (25 samples, 0.46%)</title><rect x="20.7376%" y="533" width="0.4633%" height="15" fill="rgb(250,160,47)" fg:x="1119" fg:w="25"/><text x="20.9876%" y="543.50"></text></g><g><title>__GI___libc_free (8 samples, 0.15%)</title><rect x="21.2009%" y="565" width="0.1483%" height="15" fill="rgb(216,222,40)" fg:x="1144" fg:w="8"/><text x="21.4509%" y="575.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.02%)</title><rect x="21.3491%" y="565" width="0.0185%" height="15" fill="rgb(234,217,39)" fg:x="1152" fg:w="1"/><text x="21.5991%" y="575.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.02%)</title><rect x="21.3491%" y="549" width="0.0185%" height="15" fill="rgb(207,178,40)" fg:x="1152" fg:w="1"/><text x="21.5991%" y="559.50"></text></g><g><title>__rust_dealloc (2 samples, 0.04%)</title><rect x="21.3677%" y="565" width="0.0371%" height="15" fill="rgb(221,136,13)" fg:x="1153" fg:w="2"/><text x="21.6177%" y="575.50"></text></g><g><title>_int_free (24 samples, 0.44%)</title><rect x="21.4047%" y="565" width="0.4448%" height="15" fill="rgb(249,199,10)" fg:x="1155" fg:w="24"/><text x="21.6547%" y="575.50"></text></g><g><title>&lt;&amp;A as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="21.8495%" y="501" width="0.0185%" height="15" fill="rgb(249,222,13)" fg:x="1179" fg:w="1"/><text x="22.0995%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="21.8495%" y="485" width="0.0185%" height="15" fill="rgb(244,185,38)" fg:x="1179" fg:w="1"/><text x="22.0995%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="21.8495%" y="469" width="0.0185%" height="15" fill="rgb(236,202,9)" fg:x="1179" fg:w="1"/><text x="22.0995%" y="479.50"></text></g><g><title>alloc::sync::Weak&lt;T,A&gt;::inner (1 samples, 0.02%)</title><rect x="21.8681%" y="501" width="0.0185%" height="15" fill="rgb(250,229,37)" fg:x="1180" fg:w="1"/><text x="22.1181%" y="511.50"></text></g><g><title>alloc::rc::is_dangling (1 samples, 0.02%)</title><rect x="21.8681%" y="485" width="0.0185%" height="15" fill="rgb(206,174,23)" fg:x="1180" fg:w="1"/><text x="22.1181%" y="495.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (6 samples, 0.11%)</title><rect x="21.8495%" y="565" width="0.1112%" height="15" fill="rgb(211,33,43)" fg:x="1179" fg:w="6"/><text x="22.0995%" y="575.50"></text></g><g><title>core::mem::drop (6 samples, 0.11%)</title><rect x="21.8495%" y="549" width="0.1112%" height="15" fill="rgb(245,58,50)" fg:x="1179" fg:w="6"/><text x="22.0995%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;core::sync::atomic::AtomicBool,&amp;alloc::alloc::Global&gt;&gt; (6 samples, 0.11%)</title><rect x="21.8495%" y="533" width="0.1112%" height="15" fill="rgb(244,68,36)" fg:x="1179" fg:w="6"/><text x="22.0995%" y="543.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.11%)</title><rect x="21.8495%" y="517" width="0.1112%" height="15" fill="rgb(232,229,15)" fg:x="1179" fg:w="6"/><text x="22.0995%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.07%)</title><rect x="21.8866%" y="501" width="0.0741%" height="15" fill="rgb(254,30,23)" fg:x="1181" fg:w="4"/><text x="22.1366%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.07%)</title><rect x="21.8866%" y="485" width="0.0741%" height="15" fill="rgb(235,160,14)" fg:x="1181" fg:w="4"/><text x="22.1366%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (33 samples, 0.61%)</title><rect x="21.9607%" y="565" width="0.6116%" height="15" fill="rgb(212,155,44)" fg:x="1185" fg:w="33"/><text x="22.2107%" y="575.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (33 samples, 0.61%)</title><rect x="21.9607%" y="549" width="0.6116%" height="15" fill="rgb(226,2,50)" fg:x="1185" fg:w="33"/><text x="22.2107%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (33 samples, 0.61%)</title><rect x="21.9607%" y="533" width="0.6116%" height="15" fill="rgb(234,177,6)" fg:x="1185" fg:w="33"/><text x="22.2107%" y="543.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (33 samples, 0.61%)</title><rect x="21.9607%" y="517" width="0.6116%" height="15" fill="rgb(217,24,9)" fg:x="1185" fg:w="33"/><text x="22.2107%" y="527.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (33 samples, 0.61%)</title><rect x="21.9607%" y="501" width="0.6116%" height="15" fill="rgb(220,13,46)" fg:x="1185" fg:w="33"/><text x="22.2107%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (61 samples, 1.13%)</title><rect x="22.5723%" y="565" width="1.1305%" height="15" fill="rgb(239,221,27)" fg:x="1218" fg:w="61"/><text x="22.8223%" y="575.50"></text></g><g><title>__GI___libc_free (13 samples, 0.24%)</title><rect x="23.7027%" y="533" width="0.2409%" height="15" fill="rgb(222,198,25)" fg:x="1279" fg:w="13"/><text x="23.9527%" y="543.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.04%)</title><rect x="23.9437%" y="533" width="0.0371%" height="15" fill="rgb(211,99,13)" fg:x="1292" fg:w="2"/><text x="24.1937%" y="543.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.04%)</title><rect x="23.9437%" y="517" width="0.0371%" height="15" fill="rgb(232,111,31)" fg:x="1292" fg:w="2"/><text x="24.1937%" y="527.50"></text></g><g><title>__rust_dealloc (2 samples, 0.04%)</title><rect x="23.9807%" y="533" width="0.0371%" height="15" fill="rgb(245,82,37)" fg:x="1294" fg:w="2"/><text x="24.2307%" y="543.50"></text></g><g><title>_int_free (25 samples, 0.46%)</title><rect x="24.0178%" y="533" width="0.4633%" height="15" fill="rgb(227,149,46)" fg:x="1296" fg:w="25"/><text x="24.2678%" y="543.50"></text></g><g><title>&lt;&amp;A as core::alloc::Allocator&gt;::deallocate (3 samples, 0.06%)</title><rect x="24.4996%" y="469" width="0.0556%" height="15" fill="rgb(218,36,50)" fg:x="1322" fg:w="3"/><text x="24.7496%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.06%)</title><rect x="24.4996%" y="453" width="0.0556%" height="15" fill="rgb(226,80,48)" fg:x="1322" fg:w="3"/><text x="24.7496%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.06%)</title><rect x="24.4996%" y="437" width="0.0556%" height="15" fill="rgb(238,224,15)" fg:x="1322" fg:w="3"/><text x="24.7496%" y="447.50"></text></g><g><title>core::mem::drop (21 samples, 0.39%)</title><rect x="24.4811%" y="517" width="0.3892%" height="15" fill="rgb(241,136,10)" fg:x="1321" fg:w="21"/><text x="24.7311%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;lluvia::EntityInternal,&amp;alloc::alloc::Global&gt;&gt; (21 samples, 0.39%)</title><rect x="24.4811%" y="501" width="0.3892%" height="15" fill="rgb(208,32,45)" fg:x="1321" fg:w="21"/><text x="24.7311%" y="511.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.39%)</title><rect x="24.4811%" y="485" width="0.3892%" height="15" fill="rgb(207,135,9)" fg:x="1321" fg:w="21"/><text x="24.7311%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (17 samples, 0.32%)</title><rect x="24.5552%" y="469" width="0.3150%" height="15" fill="rgb(206,86,44)" fg:x="1325" fg:w="17"/><text x="24.8052%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (17 samples, 0.32%)</title><rect x="24.5552%" y="453" width="0.3150%" height="15" fill="rgb(245,177,15)" fg:x="1325" fg:w="17"/><text x="24.8052%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.06%)</title><rect x="24.9259%" y="469" width="0.0556%" height="15" fill="rgb(206,64,50)" fg:x="1345" fg:w="3"/><text x="25.1759%" y="479.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (3 samples, 0.06%)</title><rect x="24.9259%" y="453" width="0.0556%" height="15" fill="rgb(234,36,40)" fg:x="1345" fg:w="3"/><text x="25.1759%" y="463.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (3 samples, 0.06%)</title><rect x="24.9259%" y="437" width="0.0556%" height="15" fill="rgb(213,64,8)" fg:x="1345" fg:w="3"/><text x="25.1759%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.04%)</title><rect x="24.9815%" y="469" width="0.0371%" height="15" fill="rgb(210,75,36)" fg:x="1348" fg:w="2"/><text x="25.2315%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="25.0185%" y="469" width="0.0371%" height="15" fill="rgb(229,88,21)" fg:x="1350" fg:w="2"/><text x="25.2685%" y="479.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (2 samples, 0.04%)</title><rect x="25.0185%" y="453" width="0.0371%" height="15" fill="rgb(252,204,47)" fg:x="1350" fg:w="2"/><text x="25.2685%" y="463.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (2 samples, 0.04%)</title><rect x="25.0185%" y="437" width="0.0371%" height="15" fill="rgb(208,77,27)" fg:x="1350" fg:w="2"/><text x="25.2685%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.04%)</title><rect x="25.0185%" y="421" width="0.0371%" height="15" fill="rgb(221,76,26)" fg:x="1350" fg:w="2"/><text x="25.2685%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.04%)</title><rect x="25.1668%" y="453" width="0.0371%" height="15" fill="rgb(225,139,18)" fg:x="1358" fg:w="2"/><text x="25.4168%" y="463.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (2 samples, 0.04%)</title><rect x="25.1668%" y="437" width="0.0371%" height="15" fill="rgb(230,137,11)" fg:x="1358" fg:w="2"/><text x="25.4168%" y="447.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.04%)</title><rect x="25.1668%" y="421" width="0.0371%" height="15" fill="rgb(212,28,1)" fg:x="1358" fg:w="2"/><text x="25.4168%" y="431.50"></text></g><g><title>lluvia::VecContainer&lt;T&gt;::ensure_space_for_id (5 samples, 0.09%)</title><rect x="25.2409%" y="437" width="0.0927%" height="15" fill="rgb(248,164,17)" fg:x="1362" fg:w="5"/><text x="25.4909%" y="447.50"></text></g><g><title>lluvia::VecContainer&lt;T&gt;::get_indices (5 samples, 0.09%)</title><rect x="25.2409%" y="421" width="0.0927%" height="15" fill="rgb(222,171,42)" fg:x="1362" fg:w="5"/><text x="25.4909%" y="431.50"></text></g><g><title>&lt;lluvia::VecContainer&lt;T&gt; as lluvia::Container&lt;T&gt;&gt;::take (12 samples, 0.22%)</title><rect x="25.2039%" y="453" width="0.2224%" height="15" fill="rgb(243,84,45)" fg:x="1360" fg:w="12"/><text x="25.4539%" y="463.50"></text></g><g><title>lluvia::VecContainer&lt;T&gt;::get_indices (5 samples, 0.09%)</title><rect x="25.3336%" y="437" width="0.0927%" height="15" fill="rgb(252,49,23)" fg:x="1367" fg:w="5"/><text x="25.5836%" y="447.50"></text></g><g><title>std::sync::poison::Flag::done (3 samples, 0.06%)</title><rect x="25.4262%" y="421" width="0.0556%" height="15" fill="rgb(215,19,7)" fg:x="1372" fg:w="3"/><text x="25.6762%" y="431.50"></text></g><g><title>std::thread::panicking (3 samples, 0.06%)</title><rect x="25.4262%" y="405" width="0.0556%" height="15" fill="rgb(238,81,41)" fg:x="1372" fg:w="3"/><text x="25.6762%" y="415.50"></text></g><g><title>std::panicking::panicking (3 samples, 0.06%)</title><rect x="25.4262%" y="389" width="0.0556%" height="15" fill="rgb(210,199,37)" fg:x="1372" fg:w="3"/><text x="25.6762%" y="399.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (3 samples, 0.06%)</title><rect x="25.4262%" y="373" width="0.0556%" height="15" fill="rgb(244,192,49)" fg:x="1372" fg:w="3"/><text x="25.6762%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;lluvia::TableInternal&lt;&amp;str,lluvia::VecContainer&lt;&amp;str&gt;&gt;&gt;&gt; (6 samples, 0.11%)</title><rect x="25.4262%" y="453" width="0.1112%" height="15" fill="rgb(226,211,11)" fg:x="1372" fg:w="6"/><text x="25.6762%" y="463.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.11%)</title><rect x="25.4262%" y="437" width="0.1112%" height="15" fill="rgb(236,162,54)" fg:x="1372" fg:w="6"/><text x="25.6762%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_unlock (3 samples, 0.06%)</title><rect x="25.4818%" y="421" width="0.0556%" height="15" fill="rgb(220,229,9)" fg:x="1375" fg:w="3"/><text x="25.7318%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (3 samples, 0.06%)</title><rect x="25.4818%" y="405" width="0.0556%" height="15" fill="rgb(250,87,22)" fg:x="1375" fg:w="3"/><text x="25.7318%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.06%)</title><rect x="25.4818%" y="389" width="0.0556%" height="15" fill="rgb(239,43,17)" fg:x="1375" fg:w="3"/><text x="25.7318%" y="399.50"></text></g><g><title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (2 samples, 0.04%)</title><rect x="25.5374%" y="437" width="0.0371%" height="15" fill="rgb(231,177,25)" fg:x="1378" fg:w="2"/><text x="25.7874%" y="447.50"></text></g><g><title>std::sync::poison::Flag::guard (2 samples, 0.04%)</title><rect x="25.5374%" y="421" width="0.0371%" height="15" fill="rgb(219,179,1)" fg:x="1378" fg:w="2"/><text x="25.7874%" y="431.50"></text></g><g><title>std::thread::panicking (2 samples, 0.04%)</title><rect x="25.5374%" y="405" width="0.0371%" height="15" fill="rgb(238,219,53)" fg:x="1378" fg:w="2"/><text x="25.7874%" y="415.50"></text></g><g><title>std::panicking::panicking (2 samples, 0.04%)</title><rect x="25.5374%" y="389" width="0.0371%" height="15" fill="rgb(232,167,36)" fg:x="1378" fg:w="2"/><text x="25.7874%" y="399.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (2 samples, 0.04%)</title><rect x="25.5374%" y="373" width="0.0371%" height="15" fill="rgb(244,19,51)" fg:x="1378" fg:w="2"/><text x="25.7874%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="25.5560%" y="357" width="0.0185%" height="15" fill="rgb(224,6,22)" fg:x="1379" fg:w="1"/><text x="25.8060%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="25.5560%" y="341" width="0.0185%" height="15" fill="rgb(224,145,5)" fg:x="1379" fg:w="1"/><text x="25.8060%" y="351.50"></text></g><g><title>&lt;lluvia::Table&lt;T,C&gt; as lluvia::ComponentTable&gt;::clear_entity (38 samples, 0.70%)</title><rect x="25.0556%" y="469" width="0.7042%" height="15" fill="rgb(234,130,49)" fg:x="1352" fg:w="38"/><text x="25.3056%" y="479.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (12 samples, 0.22%)</title><rect x="25.5374%" y="453" width="0.2224%" height="15" fill="rgb(254,6,2)" fg:x="1378" fg:w="12"/><text x="25.7874%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write (10 samples, 0.19%)</title><rect x="25.5745%" y="437" width="0.1853%" height="15" fill="rgb(208,96,46)" fg:x="1380" fg:w="10"/><text x="25.8245%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (10 samples, 0.19%)</title><rect x="25.5745%" y="421" width="0.1853%" height="15" fill="rgb(239,3,39)" fg:x="1380" fg:w="10"/><text x="25.8245%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (10 samples, 0.19%)</title><rect x="25.5745%" y="405" width="0.1853%" height="15" fill="rgb(233,210,1)" fg:x="1380" fg:w="10"/><text x="25.8245%" y="415.50"></text></g><g><title>std::sync::poison::Flag::done (4 samples, 0.07%)</title><rect x="25.7598%" y="437" width="0.0741%" height="15" fill="rgb(244,137,37)" fg:x="1390" fg:w="4"/><text x="26.0098%" y="447.50"></text></g><g><title>std::thread::panicking (4 samples, 0.07%)</title><rect x="25.7598%" y="421" width="0.0741%" height="15" fill="rgb(240,136,2)" fg:x="1390" fg:w="4"/><text x="26.0098%" y="431.50"></text></g><g><title>std::panicking::panicking (4 samples, 0.07%)</title><rect x="25.7598%" y="405" width="0.0741%" height="15" fill="rgb(239,18,37)" fg:x="1390" fg:w="4"/><text x="26.0098%" y="415.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (4 samples, 0.07%)</title><rect x="25.7598%" y="389" width="0.0741%" height="15" fill="rgb(218,185,22)" fg:x="1390" fg:w="4"/><text x="26.0098%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.07%)</title><rect x="25.7598%" y="373" width="0.0741%" height="15" fill="rgb(225,218,4)" fg:x="1390" fg:w="4"/><text x="26.0098%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.07%)</title><rect x="25.7598%" y="357" width="0.0741%" height="15" fill="rgb(230,182,32)" fg:x="1390" fg:w="4"/><text x="26.0098%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;lluvia::InstanceInternal&gt;&gt; (13 samples, 0.24%)</title><rect x="25.7598%" y="469" width="0.2409%" height="15" fill="rgb(242,56,43)" fg:x="1390" fg:w="13"/><text x="26.0098%" y="479.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.24%)</title><rect x="25.7598%" y="453" width="0.2409%" height="15" fill="rgb(233,99,24)" fg:x="1390" fg:w="13"/><text x="26.0098%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_unlock (9 samples, 0.17%)</title><rect x="25.8340%" y="437" width="0.1668%" height="15" fill="rgb(234,209,42)" fg:x="1394" fg:w="9"/><text x="26.0840%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (9 samples, 0.17%)</title><rect x="25.8340%" y="421" width="0.1668%" height="15" fill="rgb(227,7,12)" fg:x="1394" fg:w="9"/><text x="26.0840%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_sub (9 samples, 0.17%)</title><rect x="25.8340%" y="405" width="0.1668%" height="15" fill="rgb(245,203,43)" fg:x="1394" fg:w="9"/><text x="26.0840%" y="415.50"></text></g><g><title>lluvia::IdTable::release_id (11 samples, 0.20%)</title><rect x="26.0007%" y="469" width="0.2039%" height="15" fill="rgb(238,205,33)" fg:x="1403" fg:w="11"/><text x="26.2507%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (9 samples, 0.17%)</title><rect x="26.2046%" y="437" width="0.1668%" height="15" fill="rgb(231,56,7)" fg:x="1414" fg:w="9"/><text x="26.4546%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (9 samples, 0.17%)</title><rect x="26.2046%" y="421" width="0.1668%" height="15" fill="rgb(244,186,29)" fg:x="1414" fg:w="9"/><text x="26.4546%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (1 samples, 0.02%)</title><rect x="26.3714%" y="437" width="0.0185%" height="15" fill="rgb(234,111,31)" fg:x="1423" fg:w="1"/><text x="26.6214%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="26.3714%" y="421" width="0.0185%" height="15" fill="rgb(241,149,10)" fg:x="1423" fg:w="1"/><text x="26.6214%" y="431.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (13 samples, 0.24%)</title><rect x="26.2046%" y="469" width="0.2409%" height="15" fill="rgb(249,206,44)" fg:x="1414" fg:w="13"/><text x="26.4546%" y="479.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (13 samples, 0.24%)</title><rect x="26.2046%" y="453" width="0.2409%" height="15" fill="rgb(251,153,30)" fg:x="1414" fg:w="13"/><text x="26.4546%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::is_read_lockable (3 samples, 0.06%)</title><rect x="26.3899%" y="437" width="0.0556%" height="15" fill="rgb(239,152,38)" fg:x="1424" fg:w="3"/><text x="26.6399%" y="447.50"></text></g><g><title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (2 samples, 0.04%)</title><rect x="26.4455%" y="453" width="0.0371%" height="15" fill="rgb(249,139,47)" fg:x="1427" fg:w="2"/><text x="26.6955%" y="463.50"></text></g><g><title>std::sync::poison::Flag::guard (2 samples, 0.04%)</title><rect x="26.4455%" y="437" width="0.0371%" height="15" fill="rgb(244,64,35)" fg:x="1427" fg:w="2"/><text x="26.6955%" y="447.50"></text></g><g><title>std::thread::panicking (2 samples, 0.04%)</title><rect x="26.4455%" y="421" width="0.0371%" height="15" fill="rgb(216,46,15)" fg:x="1427" fg:w="2"/><text x="26.6955%" y="431.50"></text></g><g><title>std::panicking::panicking (2 samples, 0.04%)</title><rect x="26.4455%" y="405" width="0.0371%" height="15" fill="rgb(250,74,19)" fg:x="1427" fg:w="2"/><text x="26.6955%" y="415.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (2 samples, 0.04%)</title><rect x="26.4455%" y="389" width="0.0371%" height="15" fill="rgb(249,42,33)" fg:x="1427" fg:w="2"/><text x="26.6955%" y="399.50"></text></g><g><title>&lt;lluvia::EntityInternal as core::ops::drop::Drop&gt;::drop (86 samples, 1.59%)</title><rect x="24.9073%" y="501" width="1.5938%" height="15" fill="rgb(242,149,17)" fg:x="1344" fg:w="86"/><text x="25.1573%" y="511.50"></text></g><g><title>lluvia::Instance::invalidate_id (86 samples, 1.59%)</title><rect x="24.9073%" y="485" width="1.5938%" height="15" fill="rgb(244,29,21)" fg:x="1344" fg:w="86"/><text x="25.1573%" y="495.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (3 samples, 0.06%)</title><rect x="26.4455%" y="469" width="0.0556%" height="15" fill="rgb(220,130,37)" fg:x="1427" fg:w="3"/><text x="26.6955%" y="479.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write (1 samples, 0.02%)</title><rect x="26.4826%" y="453" width="0.0185%" height="15" fill="rgb(211,67,2)" fg:x="1429" fg:w="1"/><text x="26.7326%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (1 samples, 0.02%)</title><rect x="26.4826%" y="437" width="0.0185%" height="15" fill="rgb(235,68,52)" fg:x="1429" fg:w="1"/><text x="26.7326%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.02%)</title><rect x="26.4826%" y="421" width="0.0185%" height="15" fill="rgb(246,142,3)" fg:x="1429" fg:w="1"/><text x="26.7326%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;lluvia::ComponentList&gt;&gt;&gt; (13 samples, 0.24%)</title><rect x="26.5011%" y="485" width="0.2409%" height="15" fill="rgb(241,25,7)" fg:x="1430" fg:w="13"/><text x="26.7511%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.24%)</title><rect x="26.5011%" y="469" width="0.2409%" height="15" fill="rgb(242,119,39)" fg:x="1430" fg:w="13"/><text x="26.7511%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (13 samples, 0.24%)</title><rect x="26.5011%" y="453" width="0.2409%" height="15" fill="rgb(241,98,45)" fg:x="1430" fg:w="13"/><text x="26.7511%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (13 samples, 0.24%)</title><rect x="26.5011%" y="437" width="0.2409%" height="15" fill="rgb(254,28,30)" fg:x="1430" fg:w="13"/><text x="26.7511%" y="447.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (125 samples, 2.32%)</title><rect x="24.4811%" y="533" width="2.3165%" height="15" fill="rgb(241,142,54)" fg:x="1321" fg:w="125"/><text x="24.7311%" y="543.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;lluvia::EntityInternal&gt; (104 samples, 1.93%)</title><rect x="24.8703%" y="517" width="1.9274%" height="15" fill="rgb(222,85,15)" fg:x="1342" fg:w="104"/><text x="25.1203%" y="527.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;lluvia::Instance&gt; (16 samples, 0.30%)</title><rect x="26.5011%" y="501" width="0.2965%" height="15" fill="rgb(210,85,47)" fg:x="1430" fg:w="16"/><text x="26.7511%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;lluvia::InstanceInternal&gt;&gt;&gt; (3 samples, 0.06%)</title><rect x="26.7420%" y="485" width="0.0556%" height="15" fill="rgb(224,206,25)" fg:x="1443" fg:w="3"/><text x="26.9920%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="26.7420%" y="469" width="0.0556%" height="15" fill="rgb(243,201,19)" fg:x="1443" fg:w="3"/><text x="26.9920%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.06%)</title><rect x="26.7420%" y="453" width="0.0556%" height="15" fill="rgb(236,59,4)" fg:x="1443" fg:w="3"/><text x="26.9920%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.06%)</title><rect x="26.7420%" y="437" width="0.0556%" height="15" fill="rgb(254,179,45)" fg:x="1443" fg:w="3"/><text x="26.9920%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt; (170 samples, 3.15%)</title><rect x="23.7027%" y="565" width="3.1505%" height="15" fill="rgb(226,14,10)" fg:x="1279" fg:w="170"/><text x="23.9527%" y="575.50">cor..</text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (170 samples, 3.15%)</title><rect x="23.7027%" y="549" width="3.1505%" height="15" fill="rgb(244,27,41)" fg:x="1279" fg:w="170"/><text x="23.9527%" y="559.50">&lt;al..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.06%)</title><rect x="26.7976%" y="533" width="0.0556%" height="15" fill="rgb(235,35,32)" fg:x="1446" fg:w="3"/><text x="27.0476%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.06%)</title><rect x="26.7976%" y="517" width="0.0556%" height="15" fill="rgb(218,68,31)" fg:x="1446" fg:w="3"/><text x="27.0476%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;lluvia::TableRef&lt;&amp;str,lluvia::VecContainer&lt;&amp;str&gt;&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="26.8532%" y="565" width="0.0371%" height="15" fill="rgb(207,120,37)" fg:x="1449" fg:w="2"/><text x="27.1032%" y="575.50"></text></g><g><title>__GI___libc_free (3 samples, 0.06%)</title><rect x="26.8903%" y="517" width="0.0556%" height="15" fill="rgb(227,98,0)" fg:x="1451" fg:w="3"/><text x="27.1403%" y="527.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.02%)</title><rect x="26.9459%" y="517" width="0.0185%" height="15" fill="rgb(207,7,3)" fg:x="1454" fg:w="1"/><text x="27.1959%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.02%)</title><rect x="26.9459%" y="501" width="0.0185%" height="15" fill="rgb(206,98,19)" fg:x="1454" fg:w="1"/><text x="27.1959%" y="511.50"></text></g><g><title>__rust_dealloc (3 samples, 0.06%)</title><rect x="26.9644%" y="517" width="0.0556%" height="15" fill="rgb(217,5,26)" fg:x="1455" fg:w="3"/><text x="27.2144%" y="527.50"></text></g><g><title>_int_free (5 samples, 0.09%)</title><rect x="27.0200%" y="517" width="0.0927%" height="15" fill="rgb(235,190,38)" fg:x="1458" fg:w="5"/><text x="27.2700%" y="527.50"></text></g><g><title>__GI___libc_free (2 samples, 0.04%)</title><rect x="27.1868%" y="341" width="0.0371%" height="15" fill="rgb(247,86,24)" fg:x="1467" fg:w="2"/><text x="27.4368%" y="351.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.07%)</title><rect x="27.1868%" y="389" width="0.0741%" height="15" fill="rgb(205,101,16)" fg:x="1467" fg:w="4"/><text x="27.4368%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.07%)</title><rect x="27.1868%" y="373" width="0.0741%" height="15" fill="rgb(246,168,33)" fg:x="1467" fg:w="4"/><text x="27.4368%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.07%)</title><rect x="27.1868%" y="357" width="0.0741%" height="15" fill="rgb(231,114,1)" fg:x="1467" fg:w="4"/><text x="27.4368%" y="367.50"></text></g><g><title>_int_free (2 samples, 0.04%)</title><rect x="27.2239%" y="341" width="0.0371%" height="15" fill="rgb(207,184,53)" fg:x="1469" fg:w="2"/><text x="27.4739%" y="351.50"></text></g><g><title>_int_free (5 samples, 0.09%)</title><rect x="27.2609%" y="389" width="0.0927%" height="15" fill="rgb(224,95,51)" fg:x="1471" fg:w="5"/><text x="27.5109%" y="399.50"></text></g><g><title>__GI___libc_free (3 samples, 0.06%)</title><rect x="27.3721%" y="149" width="0.0556%" height="15" fill="rgb(212,188,45)" fg:x="1477" fg:w="3"/><text x="27.6221%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (81 samples, 1.50%)</title><rect x="27.3721%" y="181" width="1.5011%" height="15" fill="rgb(223,154,38)" fg:x="1477" fg:w="81"/><text x="27.6221%" y="191.50"></text></g><g><title>alloc::alloc::dealloc (81 samples, 1.50%)</title><rect x="27.3721%" y="165" width="1.5011%" height="15" fill="rgb(251,22,52)" fg:x="1477" fg:w="81"/><text x="27.6221%" y="175.50"></text></g><g><title>_int_free (78 samples, 1.45%)</title><rect x="27.4277%" y="149" width="1.4455%" height="15" fill="rgb(229,209,22)" fg:x="1480" fg:w="78"/><text x="27.6777%" y="159.50"></text></g><g><title>malloc_consolidate (59 samples, 1.09%)</title><rect x="27.7798%" y="133" width="1.0934%" height="15" fill="rgb(234,138,34)" fg:x="1499" fg:w="59"/><text x="28.0298%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (83 samples, 1.54%)</title><rect x="27.3536%" y="293" width="1.5382%" height="15" fill="rgb(212,95,11)" fg:x="1476" fg:w="83"/><text x="27.6036%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;lluvia::VCBlock&lt;usize&gt;&gt;]&gt; (83 samples, 1.54%)</title><rect x="27.3536%" y="277" width="1.5382%" height="15" fill="rgb(240,179,47)" fg:x="1476" fg:w="83"/><text x="27.6036%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;lluvia::VCBlock&lt;usize&gt;&gt;&gt; (82 samples, 1.52%)</title><rect x="27.3721%" y="261" width="1.5196%" height="15" fill="rgb(240,163,11)" fg:x="1477" fg:w="82"/><text x="27.6221%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::VCBlock&lt;usize&gt;&gt; (82 samples, 1.52%)</title><rect x="27.3721%" y="245" width="1.5196%" height="15" fill="rgb(236,37,12)" fg:x="1477" fg:w="82"/><text x="27.6221%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;usize&gt;&gt;&gt; (82 samples, 1.52%)</title><rect x="27.3721%" y="229" width="1.5196%" height="15" fill="rgb(232,164,16)" fg:x="1477" fg:w="82"/><text x="27.6221%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;usize&gt;&gt;&gt; (82 samples, 1.52%)</title><rect x="27.3721%" y="213" width="1.5196%" height="15" fill="rgb(244,205,15)" fg:x="1477" fg:w="82"/><text x="27.6221%" y="223.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (82 samples, 1.52%)</title><rect x="27.3721%" y="197" width="1.5196%" height="15" fill="rgb(223,117,47)" fg:x="1477" fg:w="82"/><text x="27.6221%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="28.8732%" y="181" width="0.0185%" height="15" fill="rgb(244,107,35)" fg:x="1558" fg:w="1"/><text x="29.1232%" y="191.50"></text></g><g><title>__GI___libc_free (3 samples, 0.06%)</title><rect x="28.8918%" y="229" width="0.0556%" height="15" fill="rgb(205,140,8)" fg:x="1559" fg:w="3"/><text x="29.1418%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (105 samples, 1.95%)</title><rect x="27.1127%" y="437" width="1.9459%" height="15" fill="rgb(228,84,46)" fg:x="1463" fg:w="105"/><text x="27.3627%" y="447.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::boxed::Box&lt;dyn lluvia::ComponentTable+core::marker::Sync+core::marker::Send&gt;]&gt; (105 samples, 1.95%)</title><rect x="27.1127%" y="421" width="1.9459%" height="15" fill="rgb(254,188,9)" fg:x="1463" fg:w="105"/><text x="27.3627%" y="431.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn lluvia::ComponentTable+core::marker::Sync+core::marker::Send&gt;&gt; (104 samples, 1.93%)</title><rect x="27.1312%" y="405" width="1.9274%" height="15" fill="rgb(206,112,54)" fg:x="1464" fg:w="104"/><text x="27.3812%" y="415.50">c..</text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (92 samples, 1.70%)</title><rect x="27.3536%" y="389" width="1.7050%" height="15" fill="rgb(216,84,49)" fg:x="1476" fg:w="92"/><text x="27.6036%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLock&lt;lluvia::TableInternal&lt;usize,lluvia::VecContainer&lt;usize&gt;&gt;&gt;&gt; (92 samples, 1.70%)</title><rect x="27.3536%" y="373" width="1.7050%" height="15" fill="rgb(214,194,35)" fg:x="1476" fg:w="92"/><text x="27.6036%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;lluvia::TableInternal&lt;usize,lluvia::VecContainer&lt;usize&gt;&gt;&gt;&gt; (92 samples, 1.70%)</title><rect x="27.3536%" y="357" width="1.7050%" height="15" fill="rgb(249,28,3)" fg:x="1476" fg:w="92"/><text x="27.6036%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::TableInternal&lt;usize,lluvia::VecContainer&lt;usize&gt;&gt;&gt; (92 samples, 1.70%)</title><rect x="27.3536%" y="341" width="1.7050%" height="15" fill="rgb(222,56,52)" fg:x="1476" fg:w="92"/><text x="27.6036%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::VecContainer&lt;usize&gt;&gt; (92 samples, 1.70%)</title><rect x="27.3536%" y="325" width="1.7050%" height="15" fill="rgb(245,217,50)" fg:x="1476" fg:w="92"/><text x="27.6036%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;lluvia::VCBlock&lt;usize&gt;&gt;&gt;&gt; (92 samples, 1.70%)</title><rect x="27.3536%" y="309" width="1.7050%" height="15" fill="rgb(213,201,24)" fg:x="1476" fg:w="92"/><text x="27.6036%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;lluvia::VCBlock&lt;usize&gt;&gt;&gt;&gt; (9 samples, 0.17%)</title><rect x="28.8918%" y="293" width="0.1668%" height="15" fill="rgb(248,116,28)" fg:x="1559" fg:w="9"/><text x="29.1418%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.17%)</title><rect x="28.8918%" y="277" width="0.1668%" height="15" fill="rgb(219,72,43)" fg:x="1559" fg:w="9"/><text x="29.1418%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.17%)</title><rect x="28.8918%" y="261" width="0.1668%" height="15" fill="rgb(209,138,14)" fg:x="1559" fg:w="9"/><text x="29.1418%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.17%)</title><rect x="28.8918%" y="245" width="0.1668%" height="15" fill="rgb(222,18,33)" fg:x="1559" fg:w="9"/><text x="29.1418%" y="255.50"></text></g><g><title>_int_free (6 samples, 0.11%)</title><rect x="28.9474%" y="229" width="0.1112%" height="15" fill="rgb(213,199,7)" fg:x="1562" fg:w="6"/><text x="29.1974%" y="239.50"></text></g><g><title>__GI___libc_free (3 samples, 0.06%)</title><rect x="29.0586%" y="373" width="0.0556%" height="15" fill="rgb(250,110,10)" fg:x="1568" fg:w="3"/><text x="29.3086%" y="383.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.02%)</title><rect x="29.1142%" y="373" width="0.0185%" height="15" fill="rgb(248,123,6)" fg:x="1571" fg:w="1"/><text x="29.3642%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.02%)</title><rect x="29.1142%" y="357" width="0.0185%" height="15" fill="rgb(206,91,31)" fg:x="1571" fg:w="1"/><text x="29.3642%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.13%)</title><rect x="29.0586%" y="405" width="0.1297%" height="15" fill="rgb(211,154,13)" fg:x="1568" fg:w="7"/><text x="29.3086%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.13%)</title><rect x="29.0586%" y="389" width="0.1297%" height="15" fill="rgb(225,148,7)" fg:x="1568" fg:w="7"/><text x="29.3086%" y="399.50"></text></g><g><title>_int_free (3 samples, 0.06%)</title><rect x="29.1327%" y="373" width="0.0556%" height="15" fill="rgb(220,160,43)" fg:x="1572" fg:w="3"/><text x="29.3827%" y="383.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (113 samples, 2.09%)</title><rect x="27.1127%" y="517" width="2.0941%" height="15" fill="rgb(213,52,39)" fg:x="1463" fg:w="113"/><text x="27.3627%" y="527.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLock&lt;lluvia::ComponentList&gt;&gt; (113 samples, 2.09%)</title><rect x="27.1127%" y="501" width="2.0941%" height="15" fill="rgb(243,137,7)" fg:x="1463" fg:w="113"/><text x="27.3627%" y="511.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;lluvia::ComponentList&gt;&gt; (113 samples, 2.09%)</title><rect x="27.1127%" y="485" width="2.0941%" height="15" fill="rgb(230,79,13)" fg:x="1463" fg:w="113"/><text x="27.3627%" y="495.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;lluvia::ComponentList&gt; (113 samples, 2.09%)</title><rect x="27.1127%" y="469" width="2.0941%" height="15" fill="rgb(247,105,23)" fg:x="1463" fg:w="113"/><text x="27.3627%" y="479.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::boxed::Box&lt;dyn lluvia::ComponentTable+core::marker::Sync+core::marker::Send&gt;&gt;&gt; (113 samples, 2.09%)</title><rect x="27.1127%" y="453" width="2.0941%" height="15" fill="rgb(223,179,41)" fg:x="1463" fg:w="113"/><text x="27.3627%" y="463.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::boxed::Box&lt;dyn lluvia::ComponentTable+core::marker::Sync+core::marker::Send&gt;&gt;&gt; (8 samples, 0.15%)</title><rect x="29.0586%" y="437" width="0.1483%" height="15" fill="rgb(218,9,34)" fg:x="1568" fg:w="8"/><text x="29.3086%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.15%)</title><rect x="29.0586%" y="421" width="0.1483%" height="15" fill="rgb(222,106,8)" fg:x="1568" fg:w="8"/><text x="29.3086%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="29.1883%" y="405" width="0.0185%" height="15" fill="rgb(211,220,0)" fg:x="1575" fg:w="1"/><text x="29.4383%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;lluvia::ComponentList&gt;&gt;&gt; (126 samples, 2.34%)</title><rect x="26.8903%" y="549" width="2.3351%" height="15" fill="rgb(229,52,16)" fg:x="1451" fg:w="126"/><text x="27.1403%" y="559.50">c..</text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (126 samples, 2.34%)</title><rect x="26.8903%" y="533" width="2.3351%" height="15" fill="rgb(212,155,18)" fg:x="1451" fg:w="126"/><text x="27.1403%" y="543.50">&lt;..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.02%)</title><rect x="29.2068%" y="517" width="0.0185%" height="15" fill="rgb(242,21,14)" fg:x="1576" fg:w="1"/><text x="29.4568%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.02%)</title><rect x="29.2068%" y="501" width="0.0185%" height="15" fill="rgb(222,19,48)" fg:x="1576" fg:w="1"/><text x="29.4568%" y="511.50"></text></g><g><title>__GI___libc_free (4 samples, 0.07%)</title><rect x="29.2254%" y="517" width="0.0741%" height="15" fill="rgb(232,45,27)" fg:x="1577" fg:w="4"/><text x="29.4754%" y="527.50"></text></g><g><title>_int_free (9 samples, 0.17%)</title><rect x="29.2995%" y="517" width="0.1668%" height="15" fill="rgb(249,103,42)" fg:x="1581" fg:w="9"/><text x="29.5495%" y="527.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="29.4663%" y="357" width="0.0185%" height="15" fill="rgb(246,81,33)" fg:x="1590" fg:w="1"/><text x="29.7163%" y="367.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="29.4848%" y="357" width="0.0185%" height="15" fill="rgb(252,33,42)" fg:x="1591" fg:w="1"/><text x="29.7348%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::Instance&gt; (145 samples, 2.69%)</title><rect x="26.8903%" y="565" width="2.6872%" height="15" fill="rgb(209,212,41)" fg:x="1451" fg:w="145"/><text x="27.1403%" y="575.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;lluvia::InstanceInternal&gt;&gt;&gt; (19 samples, 0.35%)</title><rect x="29.2254%" y="549" width="0.3521%" height="15" fill="rgb(207,154,6)" fg:x="1577" fg:w="19"/><text x="29.4754%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.35%)</title><rect x="29.2254%" y="533" width="0.3521%" height="15" fill="rgb(223,64,47)" fg:x="1577" fg:w="19"/><text x="29.4754%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (6 samples, 0.11%)</title><rect x="29.4663%" y="517" width="0.1112%" height="15" fill="rgb(211,161,38)" fg:x="1590" fg:w="6"/><text x="29.7163%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLock&lt;lluvia::InstanceInternal&gt;&gt; (6 samples, 0.11%)</title><rect x="29.4663%" y="501" width="0.1112%" height="15" fill="rgb(219,138,40)" fg:x="1590" fg:w="6"/><text x="29.7163%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;lluvia::InstanceInternal&gt;&gt; (6 samples, 0.11%)</title><rect x="29.4663%" y="485" width="0.1112%" height="15" fill="rgb(241,228,46)" fg:x="1590" fg:w="6"/><text x="29.7163%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::InstanceInternal&gt; (6 samples, 0.11%)</title><rect x="29.4663%" y="469" width="0.1112%" height="15" fill="rgb(223,209,38)" fg:x="1590" fg:w="6"/><text x="29.7163%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::IdTable&gt; (6 samples, 0.11%)</title><rect x="29.4663%" y="453" width="0.1112%" height="15" fill="rgb(236,164,45)" fg:x="1590" fg:w="6"/><text x="29.7163%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (6 samples, 0.11%)</title><rect x="29.4663%" y="437" width="0.1112%" height="15" fill="rgb(231,15,5)" fg:x="1590" fg:w="6"/><text x="29.7163%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (6 samples, 0.11%)</title><rect x="29.4663%" y="421" width="0.1112%" height="15" fill="rgb(252,35,15)" fg:x="1590" fg:w="6"/><text x="29.7163%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.11%)</title><rect x="29.4663%" y="405" width="0.1112%" height="15" fill="rgb(248,181,18)" fg:x="1590" fg:w="6"/><text x="29.7163%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.11%)</title><rect x="29.4663%" y="389" width="0.1112%" height="15" fill="rgb(233,39,42)" fg:x="1590" fg:w="6"/><text x="29.7163%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.11%)</title><rect x="29.4663%" y="373" width="0.1112%" height="15" fill="rgb(238,110,33)" fg:x="1590" fg:w="6"/><text x="29.7163%" y="383.50"></text></g><g><title>_int_free (4 samples, 0.07%)</title><rect x="29.5033%" y="357" width="0.0741%" height="15" fill="rgb(233,195,10)" fg:x="1592" fg:w="4"/><text x="29.7533%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::sync::atomic::AtomicBool&gt;&gt; (4 samples, 0.07%)</title><rect x="29.5775%" y="549" width="0.0741%" height="15" fill="rgb(254,105,3)" fg:x="1596" fg:w="4"/><text x="29.8275%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.07%)</title><rect x="29.5775%" y="533" width="0.0741%" height="15" fill="rgb(221,225,9)" fg:x="1596" fg:w="4"/><text x="29.8275%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.07%)</title><rect x="29.5775%" y="517" width="0.0741%" height="15" fill="rgb(224,227,45)" fg:x="1596" fg:w="4"/><text x="29.8275%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.07%)</title><rect x="29.5775%" y="501" width="0.0741%" height="15" fill="rgb(229,198,43)" fg:x="1596" fg:w="4"/><text x="29.8275%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;lluvia::ComponentList&gt;&gt;&gt; (4 samples, 0.07%)</title><rect x="29.6516%" y="533" width="0.0741%" height="15" fill="rgb(206,209,35)" fg:x="1600" fg:w="4"/><text x="29.9016%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.07%)</title><rect x="29.6516%" y="517" width="0.0741%" height="15" fill="rgb(245,195,53)" fg:x="1600" fg:w="4"/><text x="29.9016%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.06%)</title><rect x="29.6701%" y="501" width="0.0556%" height="15" fill="rgb(240,92,26)" fg:x="1601" fg:w="3"/><text x="29.9201%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.06%)</title><rect x="29.6701%" y="485" width="0.0556%" height="15" fill="rgb(207,40,23)" fg:x="1601" fg:w="3"/><text x="29.9201%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::Instance&gt; (5 samples, 0.09%)</title><rect x="29.6516%" y="549" width="0.0927%" height="15" fill="rgb(223,111,35)" fg:x="1600" fg:w="5"/><text x="29.9016%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;lluvia::InstanceInternal&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="29.7257%" y="533" width="0.0185%" height="15" fill="rgb(229,147,28)" fg:x="1604" fg:w="1"/><text x="29.9757%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="29.7257%" y="517" width="0.0185%" height="15" fill="rgb(211,29,28)" fg:x="1604" fg:w="1"/><text x="29.9757%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.02%)</title><rect x="29.7257%" y="501" width="0.0185%" height="15" fill="rgb(228,72,33)" fg:x="1604" fg:w="1"/><text x="29.9757%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.02%)</title><rect x="29.7257%" y="485" width="0.0185%" height="15" fill="rgb(205,214,31)" fg:x="1604" fg:w="1"/><text x="29.9757%" y="495.50"></text></g><g><title>__GI___libc_free (2 samples, 0.04%)</title><rect x="29.7443%" y="501" width="0.0371%" height="15" fill="rgb(224,111,15)" fg:x="1605" fg:w="2"/><text x="29.9943%" y="511.50"></text></g><g><title>_int_free (7 samples, 0.13%)</title><rect x="29.7813%" y="501" width="0.1297%" height="15" fill="rgb(253,21,26)" fg:x="1607" fg:w="7"/><text x="30.0313%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::get_mut_unchecked (2 samples, 0.04%)</title><rect x="29.9110%" y="485" width="0.0371%" height="15" fill="rgb(245,139,43)" fg:x="1614" fg:w="2"/><text x="30.1610%" y="495.50"></text></g><g><title>__GI___libc_free (12 samples, 0.22%)</title><rect x="30.0408%" y="261" width="0.2224%" height="15" fill="rgb(252,170,7)" fg:x="1621" fg:w="12"/><text x="30.2908%" y="271.50"></text></g><g><title>__rust_dealloc (4 samples, 0.07%)</title><rect x="30.2632%" y="261" width="0.0741%" height="15" fill="rgb(231,118,14)" fg:x="1633" fg:w="4"/><text x="30.5132%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.57%)</title><rect x="29.9481%" y="405" width="0.5745%" height="15" fill="rgb(238,83,0)" fg:x="1616" fg:w="31"/><text x="30.1981%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;lluvia::VCBlock&lt;usize&gt;&gt;]&gt; (31 samples, 0.57%)</title><rect x="29.9481%" y="389" width="0.5745%" height="15" fill="rgb(221,39,39)" fg:x="1616" fg:w="31"/><text x="30.1981%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;lluvia::VCBlock&lt;usize&gt;&gt;&gt; (31 samples, 0.57%)</title><rect x="29.9481%" y="373" width="0.5745%" height="15" fill="rgb(222,119,46)" fg:x="1616" fg:w="31"/><text x="30.1981%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::VCBlock&lt;usize&gt;&gt; (29 samples, 0.54%)</title><rect x="29.9852%" y="357" width="0.5374%" height="15" fill="rgb(222,165,49)" fg:x="1618" fg:w="29"/><text x="30.2352%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;usize&gt;&gt;&gt; (29 samples, 0.54%)</title><rect x="29.9852%" y="341" width="0.5374%" height="15" fill="rgb(219,113,52)" fg:x="1618" fg:w="29"/><text x="30.2352%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;usize&gt;&gt;&gt; (29 samples, 0.54%)</title><rect x="29.9852%" y="325" width="0.5374%" height="15" fill="rgb(214,7,15)" fg:x="1618" fg:w="29"/><text x="30.2352%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.54%)</title><rect x="29.9852%" y="309" width="0.5374%" height="15" fill="rgb(235,32,4)" fg:x="1618" fg:w="29"/><text x="30.2352%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (29 samples, 0.54%)</title><rect x="29.9852%" y="293" width="0.5374%" height="15" fill="rgb(238,90,54)" fg:x="1618" fg:w="29"/><text x="30.2352%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (29 samples, 0.54%)</title><rect x="29.9852%" y="277" width="0.5374%" height="15" fill="rgb(213,208,19)" fg:x="1618" fg:w="29"/><text x="30.2352%" y="287.50"></text></g><g><title>_int_free (10 samples, 0.19%)</title><rect x="30.3373%" y="261" width="0.1853%" height="15" fill="rgb(233,156,4)" fg:x="1637" fg:w="10"/><text x="30.5873%" y="271.50"></text></g><g><title>__GI___libc_free (2 samples, 0.04%)</title><rect x="30.5226%" y="341" width="0.0371%" height="15" fill="rgb(207,194,5)" fg:x="1647" fg:w="2"/><text x="30.7726%" y="351.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (41 samples, 0.76%)</title><rect x="29.9110%" y="501" width="0.7598%" height="15" fill="rgb(206,111,30)" fg:x="1614" fg:w="41"/><text x="30.1610%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLock&lt;lluvia::TableInternal&lt;usize,lluvia::VecContainer&lt;usize&gt;&gt;&gt;&gt; (39 samples, 0.72%)</title><rect x="29.9481%" y="485" width="0.7228%" height="15" fill="rgb(243,70,54)" fg:x="1616" fg:w="39"/><text x="30.1981%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;lluvia::TableInternal&lt;usize,lluvia::VecContainer&lt;usize&gt;&gt;&gt;&gt; (39 samples, 0.72%)</title><rect x="29.9481%" y="469" width="0.7228%" height="15" fill="rgb(242,28,8)" fg:x="1616" fg:w="39"/><text x="30.1981%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::TableInternal&lt;usize,lluvia::VecContainer&lt;usize&gt;&gt;&gt; (39 samples, 0.72%)</title><rect x="29.9481%" y="453" width="0.7228%" height="15" fill="rgb(219,106,18)" fg:x="1616" fg:w="39"/><text x="30.1981%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::VecContainer&lt;usize&gt;&gt; (39 samples, 0.72%)</title><rect x="29.9481%" y="437" width="0.7228%" height="15" fill="rgb(244,222,10)" fg:x="1616" fg:w="39"/><text x="30.1981%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;lluvia::VCBlock&lt;usize&gt;&gt;&gt;&gt; (39 samples, 0.72%)</title><rect x="29.9481%" y="421" width="0.7228%" height="15" fill="rgb(236,179,52)" fg:x="1616" fg:w="39"/><text x="30.1981%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;lluvia::VCBlock&lt;usize&gt;&gt;&gt;&gt; (8 samples, 0.15%)</title><rect x="30.5226%" y="405" width="0.1483%" height="15" fill="rgb(213,23,39)" fg:x="1647" fg:w="8"/><text x="30.7726%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.15%)</title><rect x="30.5226%" y="389" width="0.1483%" height="15" fill="rgb(238,48,10)" fg:x="1647" fg:w="8"/><text x="30.7726%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.15%)</title><rect x="30.5226%" y="373" width="0.1483%" height="15" fill="rgb(251,196,23)" fg:x="1647" fg:w="8"/><text x="30.7726%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.15%)</title><rect x="30.5226%" y="357" width="0.1483%" height="15" fill="rgb(250,152,24)" fg:x="1647" fg:w="8"/><text x="30.7726%" y="367.50"></text></g><g><title>_int_free (6 samples, 0.11%)</title><rect x="30.5597%" y="341" width="0.1112%" height="15" fill="rgb(209,150,17)" fg:x="1649" fg:w="6"/><text x="30.8097%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::RawComponent&lt;&amp;str,lluvia::VecContainer&lt;&amp;str&gt;&gt;&gt; (63 samples, 1.17%)</title><rect x="29.5775%" y="565" width="1.1675%" height="15" fill="rgb(234,202,34)" fg:x="1596" fg:w="63"/><text x="29.8275%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::Table&lt;&amp;str,lluvia::VecContainer&lt;&amp;str&gt;&gt;&gt; (54 samples, 1.00%)</title><rect x="29.7443%" y="549" width="1.0007%" height="15" fill="rgb(253,148,53)" fg:x="1605" fg:w="54"/><text x="29.9943%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;lluvia::TableInternal&lt;&amp;str,lluvia::VecContainer&lt;&amp;str&gt;&gt;&gt;&gt;&gt; (54 samples, 1.00%)</title><rect x="29.7443%" y="533" width="1.0007%" height="15" fill="rgb(218,129,16)" fg:x="1605" fg:w="54"/><text x="29.9943%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (54 samples, 1.00%)</title><rect x="29.7443%" y="517" width="1.0007%" height="15" fill="rgb(216,85,19)" fg:x="1605" fg:w="54"/><text x="29.9943%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.07%)</title><rect x="30.6709%" y="501" width="0.0741%" height="15" fill="rgb(235,228,7)" fg:x="1655" fg:w="4"/><text x="30.9209%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.07%)</title><rect x="30.6709%" y="485" width="0.0741%" height="15" fill="rgb(245,175,0)" fg:x="1655" fg:w="4"/><text x="30.9209%" y="495.50"></text></g><g><title>__GI___libc_free (7 samples, 0.13%)</title><rect x="30.7635%" y="549" width="0.1297%" height="15" fill="rgb(208,168,36)" fg:x="1660" fg:w="7"/><text x="31.0135%" y="559.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.02%)</title><rect x="30.8933%" y="549" width="0.0185%" height="15" fill="rgb(246,171,24)" fg:x="1667" fg:w="1"/><text x="31.1433%" y="559.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.02%)</title><rect x="30.8933%" y="533" width="0.0185%" height="15" fill="rgb(215,142,24)" fg:x="1667" fg:w="1"/><text x="31.1433%" y="543.50"></text></g><g><title>_int_free (15 samples, 0.28%)</title><rect x="30.9118%" y="549" width="0.2780%" height="15" fill="rgb(250,187,7)" fg:x="1668" fg:w="15"/><text x="31.1618%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.02%)</title><rect x="31.1898%" y="549" width="0.0185%" height="15" fill="rgb(228,66,33)" fg:x="1683" fg:w="1"/><text x="31.4398%" y="559.50"></text></g><g><title>core::mem::drop (1 samples, 0.02%)</title><rect x="31.1898%" y="533" width="0.0185%" height="15" fill="rgb(234,215,21)" fg:x="1683" fg:w="1"/><text x="31.4398%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;core::sync::atomic::AtomicBool,&amp;alloc::alloc::Global&gt;&gt; (1 samples, 0.02%)</title><rect x="31.1898%" y="517" width="0.0185%" height="15" fill="rgb(222,191,20)" fg:x="1683" fg:w="1"/><text x="31.4398%" y="527.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="31.1898%" y="501" width="0.0185%" height="15" fill="rgb(245,79,54)" fg:x="1683" fg:w="1"/><text x="31.4398%" y="511.50"></text></g><g><title>asm_sysvec_reschedule_ipi (1 samples, 0.02%)</title><rect x="31.1898%" y="485" width="0.0185%" height="15" fill="rgb(240,10,37)" fg:x="1683" fg:w="1"/><text x="31.4398%" y="495.50"></text></g><g><title>sysvec_reschedule_ipi (1 samples, 0.02%)</title><rect x="31.1898%" y="469" width="0.0185%" height="15" fill="rgb(214,192,32)" fg:x="1683" fg:w="1"/><text x="31.4398%" y="479.50"></text></g><g><title>irqentry_exit (1 samples, 0.02%)</title><rect x="31.1898%" y="453" width="0.0185%" height="15" fill="rgb(209,36,54)" fg:x="1683" fg:w="1"/><text x="31.4398%" y="463.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.02%)</title><rect x="31.1898%" y="437" width="0.0185%" height="15" fill="rgb(220,10,11)" fg:x="1683" fg:w="1"/><text x="31.4398%" y="447.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.02%)</title><rect x="31.1898%" y="421" width="0.0185%" height="15" fill="rgb(221,106,17)" fg:x="1683" fg:w="1"/><text x="31.4398%" y="431.50"></text></g><g><title>schedule (1 samples, 0.02%)</title><rect x="31.1898%" y="405" width="0.0185%" height="15" fill="rgb(251,142,44)" fg:x="1683" fg:w="1"/><text x="31.4398%" y="415.50"></text></g><g><title>__sched_text_start (1 samples, 0.02%)</title><rect x="31.1898%" y="389" width="0.0185%" height="15" fill="rgb(238,13,15)" fg:x="1683" fg:w="1"/><text x="31.4398%" y="399.50"></text></g><g><title>put_prev_task_balance (1 samples, 0.02%)</title><rect x="31.1898%" y="373" width="0.0185%" height="15" fill="rgb(208,107,27)" fg:x="1683" fg:w="1"/><text x="31.4398%" y="383.50"></text></g><g><title>__GI___libc_free (10 samples, 0.19%)</title><rect x="31.2639%" y="485" width="0.1853%" height="15" fill="rgb(205,136,37)" fg:x="1687" fg:w="10"/><text x="31.5139%" y="495.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.04%)</title><rect x="31.4492%" y="485" width="0.0371%" height="15" fill="rgb(250,205,27)" fg:x="1697" fg:w="2"/><text x="31.6992%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.04%)</title><rect x="31.4492%" y="469" width="0.0371%" height="15" fill="rgb(210,80,43)" fg:x="1697" fg:w="2"/><text x="31.6992%" y="479.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="31.4863%" y="485" width="0.0185%" height="15" fill="rgb(247,160,36)" fg:x="1699" fg:w="1"/><text x="31.7363%" y="495.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.70%)</title><rect x="31.2083%" y="533" width="0.7042%" height="15" fill="rgb(234,13,49)" fg:x="1684" fg:w="38"/><text x="31.4583%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (38 samples, 0.70%)</title><rect x="31.2083%" y="517" width="0.7042%" height="15" fill="rgb(234,122,0)" fg:x="1684" fg:w="38"/><text x="31.4583%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (38 samples, 0.70%)</title><rect x="31.2083%" y="501" width="0.7042%" height="15" fill="rgb(207,146,38)" fg:x="1684" fg:w="38"/><text x="31.4583%" y="511.50"></text></g><g><title>_int_free (22 samples, 0.41%)</title><rect x="31.5048%" y="485" width="0.4077%" height="15" fill="rgb(207,177,25)" fg:x="1700" fg:w="22"/><text x="31.7548%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::sync::atomic::AtomicBool&gt;&gt; (9 samples, 0.17%)</title><rect x="31.9125%" y="517" width="0.1668%" height="15" fill="rgb(211,178,42)" fg:x="1722" fg:w="9"/><text x="32.1625%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.17%)</title><rect x="31.9125%" y="501" width="0.1668%" height="15" fill="rgb(230,69,54)" fg:x="1722" fg:w="9"/><text x="32.1625%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (9 samples, 0.17%)</title><rect x="31.9125%" y="485" width="0.1668%" height="15" fill="rgb(214,135,41)" fg:x="1722" fg:w="9"/><text x="32.1625%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_sub (9 samples, 0.17%)</title><rect x="31.9125%" y="469" width="0.1668%" height="15" fill="rgb(237,67,25)" fg:x="1722" fg:w="9"/><text x="32.1625%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;lluvia::ComponentList&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="32.0793%" y="501" width="0.0371%" height="15" fill="rgb(222,189,50)" fg:x="1731" fg:w="2"/><text x="32.3293%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="32.0793%" y="485" width="0.0371%" height="15" fill="rgb(245,148,34)" fg:x="1731" fg:w="2"/><text x="32.3293%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.04%)</title><rect x="32.0793%" y="469" width="0.0371%" height="15" fill="rgb(222,29,6)" fg:x="1731" fg:w="2"/><text x="32.3293%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.04%)</title><rect x="32.0793%" y="453" width="0.0371%" height="15" fill="rgb(221,189,43)" fg:x="1731" fg:w="2"/><text x="32.3293%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::Instance&gt; (5 samples, 0.09%)</title><rect x="32.0793%" y="517" width="0.0927%" height="15" fill="rgb(207,36,27)" fg:x="1731" fg:w="5"/><text x="32.3293%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;lluvia::InstanceInternal&gt;&gt;&gt; (3 samples, 0.06%)</title><rect x="32.1164%" y="501" width="0.0556%" height="15" fill="rgb(217,90,24)" fg:x="1733" fg:w="3"/><text x="32.3664%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="32.1164%" y="485" width="0.0556%" height="15" fill="rgb(224,66,35)" fg:x="1733" fg:w="3"/><text x="32.3664%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.06%)</title><rect x="32.1164%" y="469" width="0.0556%" height="15" fill="rgb(221,13,50)" fg:x="1733" fg:w="3"/><text x="32.3664%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.06%)</title><rect x="32.1164%" y="453" width="0.0556%" height="15" fill="rgb(236,68,49)" fg:x="1733" fg:w="3"/><text x="32.3664%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;lluvia::RawComponent&lt;&amp;str,lluvia::VecContainer&lt;&amp;str&gt;&gt;&gt;&gt; (61 samples, 1.13%)</title><rect x="31.2083%" y="549" width="1.1305%" height="15" fill="rgb(229,146,28)" fg:x="1684" fg:w="61"/><text x="31.4583%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::RawComponent&lt;&amp;str,lluvia::VecContainer&lt;&amp;str&gt;&gt;&gt; (23 samples, 0.43%)</title><rect x="31.9125%" y="533" width="0.4262%" height="15" fill="rgb(225,31,38)" fg:x="1722" fg:w="23"/><text x="32.1625%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::Table&lt;&amp;str,lluvia::VecContainer&lt;&amp;str&gt;&gt;&gt; (9 samples, 0.17%)</title><rect x="32.1720%" y="517" width="0.1668%" height="15" fill="rgb(250,208,3)" fg:x="1736" fg:w="9"/><text x="32.4220%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;lluvia::TableInternal&lt;&amp;str,lluvia::VecContainer&lt;&amp;str&gt;&gt;&gt;&gt;&gt; (9 samples, 0.17%)</title><rect x="32.1720%" y="501" width="0.1668%" height="15" fill="rgb(246,54,23)" fg:x="1736" fg:w="9"/><text x="32.4220%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.17%)</title><rect x="32.1720%" y="485" width="0.1668%" height="15" fill="rgb(243,76,11)" fg:x="1736" fg:w="9"/><text x="32.4220%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (9 samples, 0.17%)</title><rect x="32.1720%" y="469" width="0.1668%" height="15" fill="rgb(245,21,50)" fg:x="1736" fg:w="9"/><text x="32.4220%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (9 samples, 0.17%)</title><rect x="32.1720%" y="453" width="0.1668%" height="15" fill="rgb(228,9,43)" fg:x="1736" fg:w="9"/><text x="32.4220%" y="463.50"></text></g><g><title>__GI___libc_free (5 samples, 0.09%)</title><rect x="32.3388%" y="517" width="0.0927%" height="15" fill="rgb(208,100,47)" fg:x="1745" fg:w="5"/><text x="32.5888%" y="527.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.04%)</title><rect x="32.4314%" y="517" width="0.0371%" height="15" fill="rgb(232,26,8)" fg:x="1750" fg:w="2"/><text x="32.6814%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.04%)</title><rect x="32.4314%" y="501" width="0.0371%" height="15" fill="rgb(216,166,38)" fg:x="1750" fg:w="2"/><text x="32.6814%" y="511.50"></text></g><g><title>_int_free (16 samples, 0.30%)</title><rect x="32.4685%" y="517" width="0.2965%" height="15" fill="rgb(251,202,51)" fg:x="1752" fg:w="16"/><text x="32.7185%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::sync::atomic::AtomicBool&gt;&gt; (24 samples, 0.44%)</title><rect x="32.3388%" y="549" width="0.4448%" height="15" fill="rgb(254,216,34)" fg:x="1745" fg:w="24"/><text x="32.5888%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.44%)</title><rect x="32.3388%" y="533" width="0.4448%" height="15" fill="rgb(251,32,27)" fg:x="1745" fg:w="24"/><text x="32.5888%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.02%)</title><rect x="32.7650%" y="517" width="0.0185%" height="15" fill="rgb(208,127,28)" fg:x="1768" fg:w="1"/><text x="33.0150%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.02%)</title><rect x="32.7650%" y="501" width="0.0185%" height="15" fill="rgb(224,137,22)" fg:x="1768" fg:w="1"/><text x="33.0150%" y="511.50"></text></g><g><title>__GI___libc_free (4 samples, 0.07%)</title><rect x="32.8206%" y="469" width="0.0741%" height="15" fill="rgb(254,70,32)" fg:x="1771" fg:w="4"/><text x="33.0706%" y="479.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.02%)</title><rect x="32.8947%" y="469" width="0.0185%" height="15" fill="rgb(229,75,37)" fg:x="1775" fg:w="1"/><text x="33.1447%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.02%)</title><rect x="32.8947%" y="453" width="0.0185%" height="15" fill="rgb(252,64,23)" fg:x="1775" fg:w="1"/><text x="33.1447%" y="463.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="32.9133%" y="469" width="0.0185%" height="15" fill="rgb(232,162,48)" fg:x="1776" fg:w="1"/><text x="33.1633%" y="479.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.26%)</title><rect x="32.7835%" y="517" width="0.2595%" height="15" fill="rgb(246,160,12)" fg:x="1769" fg:w="14"/><text x="33.0335%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.26%)</title><rect x="32.7835%" y="501" width="0.2595%" height="15" fill="rgb(247,166,0)" fg:x="1769" fg:w="14"/><text x="33.0335%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.26%)</title><rect x="32.7835%" y="485" width="0.2595%" height="15" fill="rgb(249,219,21)" fg:x="1769" fg:w="14"/><text x="33.0335%" y="495.50"></text></g><g><title>_int_free (6 samples, 0.11%)</title><rect x="32.9318%" y="469" width="0.1112%" height="15" fill="rgb(205,209,3)" fg:x="1777" fg:w="6"/><text x="33.1818%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::sync::atomic::AtomicBool&gt;&gt; (12 samples, 0.22%)</title><rect x="33.0430%" y="501" width="0.2224%" height="15" fill="rgb(243,44,1)" fg:x="1783" fg:w="12"/><text x="33.2930%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.22%)</title><rect x="33.0430%" y="485" width="0.2224%" height="15" fill="rgb(206,159,16)" fg:x="1783" fg:w="12"/><text x="33.2930%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (12 samples, 0.22%)</title><rect x="33.0430%" y="469" width="0.2224%" height="15" fill="rgb(244,77,30)" fg:x="1783" fg:w="12"/><text x="33.2930%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (12 samples, 0.22%)</title><rect x="33.0430%" y="453" width="0.2224%" height="15" fill="rgb(218,69,12)" fg:x="1783" fg:w="12"/><text x="33.2930%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;lluvia::ComponentList&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="33.2654%" y="485" width="0.0185%" height="15" fill="rgb(212,87,7)" fg:x="1795" fg:w="1"/><text x="33.5154%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="33.2654%" y="469" width="0.0185%" height="15" fill="rgb(245,114,25)" fg:x="1795" fg:w="1"/><text x="33.5154%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.02%)</title><rect x="33.2654%" y="453" width="0.0185%" height="15" fill="rgb(210,61,42)" fg:x="1795" fg:w="1"/><text x="33.5154%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.02%)</title><rect x="33.2654%" y="437" width="0.0185%" height="15" fill="rgb(211,52,33)" fg:x="1795" fg:w="1"/><text x="33.5154%" y="447.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (2 samples, 0.04%)</title><rect x="33.2839%" y="453" width="0.0371%" height="15" fill="rgb(234,58,33)" fg:x="1796" fg:w="2"/><text x="33.5339%" y="463.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.04%)</title><rect x="33.2839%" y="437" width="0.0371%" height="15" fill="rgb(220,115,36)" fg:x="1796" fg:w="2"/><text x="33.5339%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::Instance&gt; (8 samples, 0.15%)</title><rect x="33.2654%" y="501" width="0.1483%" height="15" fill="rgb(243,153,54)" fg:x="1795" fg:w="8"/><text x="33.5154%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;lluvia::InstanceInternal&gt;&gt;&gt; (7 samples, 0.13%)</title><rect x="33.2839%" y="485" width="0.1297%" height="15" fill="rgb(251,47,18)" fg:x="1796" fg:w="7"/><text x="33.5339%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.13%)</title><rect x="33.2839%" y="469" width="0.1297%" height="15" fill="rgb(242,102,42)" fg:x="1796" fg:w="7"/><text x="33.5339%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (5 samples, 0.09%)</title><rect x="33.3210%" y="453" width="0.0927%" height="15" fill="rgb(234,31,38)" fg:x="1798" fg:w="5"/><text x="33.5710%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (5 samples, 0.09%)</title><rect x="33.3210%" y="437" width="0.0927%" height="15" fill="rgb(221,117,51)" fg:x="1798" fg:w="5"/><text x="33.5710%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::RawComponent&lt;&amp;str,lluvia::VecContainer&lt;&amp;str&gt;&gt;&gt; (25 samples, 0.46%)</title><rect x="33.0430%" y="517" width="0.4633%" height="15" fill="rgb(212,20,18)" fg:x="1783" fg:w="25"/><text x="33.2930%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::Table&lt;&amp;str,lluvia::VecContainer&lt;&amp;str&gt;&gt;&gt; (5 samples, 0.09%)</title><rect x="33.4136%" y="501" width="0.0927%" height="15" fill="rgb(245,133,36)" fg:x="1803" fg:w="5"/><text x="33.6636%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;lluvia::TableInternal&lt;&amp;str,lluvia::VecContainer&lt;&amp;str&gt;&gt;&gt;&gt;&gt; (5 samples, 0.09%)</title><rect x="33.4136%" y="485" width="0.0927%" height="15" fill="rgb(212,6,19)" fg:x="1803" fg:w="5"/><text x="33.6636%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.09%)</title><rect x="33.4136%" y="469" width="0.0927%" height="15" fill="rgb(218,1,36)" fg:x="1803" fg:w="5"/><text x="33.6636%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (5 samples, 0.09%)</title><rect x="33.4136%" y="453" width="0.0927%" height="15" fill="rgb(246,84,54)" fg:x="1803" fg:w="5"/><text x="33.6636%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (5 samples, 0.09%)</title><rect x="33.4136%" y="437" width="0.0927%" height="15" fill="rgb(242,110,6)" fg:x="1803" fg:w="5"/><text x="33.6636%" y="447.50"></text></g><g><title>__GI___libc_free (5 samples, 0.09%)</title><rect x="33.5619%" y="437" width="0.0927%" height="15" fill="rgb(214,47,5)" fg:x="1811" fg:w="5"/><text x="33.8119%" y="447.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.24%)</title><rect x="33.5063%" y="485" width="0.2409%" height="15" fill="rgb(218,159,25)" fg:x="1808" fg:w="13"/><text x="33.7563%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.24%)</title><rect x="33.5063%" y="469" width="0.2409%" height="15" fill="rgb(215,211,28)" fg:x="1808" fg:w="13"/><text x="33.7563%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.24%)</title><rect x="33.5063%" y="453" width="0.2409%" height="15" fill="rgb(238,59,32)" fg:x="1808" fg:w="13"/><text x="33.7563%" y="463.50"></text></g><g><title>_int_free (5 samples, 0.09%)</title><rect x="33.6546%" y="437" width="0.0927%" height="15" fill="rgb(226,82,3)" fg:x="1816" fg:w="5"/><text x="33.9046%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;lluvia::RawComponent&lt;&amp;str,lluvia::VecContainer&lt;&amp;str&gt;&gt;&gt;&gt; (19 samples, 0.35%)</title><rect x="33.5063%" y="501" width="0.3521%" height="15" fill="rgb(240,164,32)" fg:x="1808" fg:w="19"/><text x="33.7563%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::RawComponent&lt;&amp;str,lluvia::VecContainer&lt;&amp;str&gt;&gt;&gt; (6 samples, 0.11%)</title><rect x="33.7472%" y="485" width="0.1112%" height="15" fill="rgb(232,46,7)" fg:x="1821" fg:w="6"/><text x="33.9972%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::sync::atomic::AtomicBool&gt;&gt; (6 samples, 0.11%)</title><rect x="33.7472%" y="469" width="0.1112%" height="15" fill="rgb(229,129,53)" fg:x="1821" fg:w="6"/><text x="33.9972%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.11%)</title><rect x="33.7472%" y="453" width="0.1112%" height="15" fill="rgb(234,188,29)" fg:x="1821" fg:w="6"/><text x="33.9972%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (6 samples, 0.11%)</title><rect x="33.7472%" y="437" width="0.1112%" height="15" fill="rgb(246,141,4)" fg:x="1821" fg:w="6"/><text x="33.9972%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (6 samples, 0.11%)</title><rect x="33.7472%" y="421" width="0.1112%" height="15" fill="rgb(229,23,39)" fg:x="1821" fg:w="6"/><text x="33.9972%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::sync::atomic::AtomicBool&gt;&gt; (8 samples, 0.15%)</title><rect x="33.8584%" y="485" width="0.1483%" height="15" fill="rgb(206,12,3)" fg:x="1827" fg:w="8"/><text x="34.1084%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.15%)</title><rect x="33.8584%" y="469" width="0.1483%" height="15" fill="rgb(252,226,20)" fg:x="1827" fg:w="8"/><text x="34.1084%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (8 samples, 0.15%)</title><rect x="33.8584%" y="453" width="0.1483%" height="15" fill="rgb(216,123,35)" fg:x="1827" fg:w="8"/><text x="34.1084%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (8 samples, 0.15%)</title><rect x="33.8584%" y="437" width="0.1483%" height="15" fill="rgb(212,68,40)" fg:x="1827" fg:w="8"/><text x="34.1084%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;lluvia::ComponentList&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="34.0067%" y="469" width="0.0185%" height="15" fill="rgb(254,125,32)" fg:x="1835" fg:w="1"/><text x="34.2567%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="34.0067%" y="453" width="0.0185%" height="15" fill="rgb(253,97,22)" fg:x="1835" fg:w="1"/><text x="34.2567%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::Instance&gt; (3 samples, 0.06%)</title><rect x="34.0067%" y="485" width="0.0556%" height="15" fill="rgb(241,101,14)" fg:x="1835" fg:w="3"/><text x="34.2567%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;lluvia::InstanceInternal&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="34.0252%" y="469" width="0.0371%" height="15" fill="rgb(238,103,29)" fg:x="1836" fg:w="2"/><text x="34.2752%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="34.0252%" y="453" width="0.0371%" height="15" fill="rgb(233,195,47)" fg:x="1836" fg:w="2"/><text x="34.2752%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.04%)</title><rect x="34.0252%" y="437" width="0.0371%" height="15" fill="rgb(246,218,30)" fg:x="1836" fg:w="2"/><text x="34.2752%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.04%)</title><rect x="34.0252%" y="421" width="0.0371%" height="15" fill="rgb(219,145,47)" fg:x="1836" fg:w="2"/><text x="34.2752%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;lluvia::Snapshot&lt;&amp;str&gt;&gt;&gt;&gt; (77 samples, 1.43%)</title><rect x="32.7835%" y="549" width="1.4270%" height="15" fill="rgb(243,12,26)" fg:x="1769" fg:w="77"/><text x="33.0335%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;lluvia::Snapshot&lt;&amp;str&gt;&gt;&gt; (77 samples, 1.43%)</title><rect x="32.7835%" y="533" width="1.4270%" height="15" fill="rgb(214,87,16)" fg:x="1769" fg:w="77"/><text x="33.0335%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::Snapshot&lt;&amp;str&gt;&gt; (38 samples, 0.70%)</title><rect x="33.5063%" y="517" width="0.7042%" height="15" fill="rgb(208,99,42)" fg:x="1808" fg:w="38"/><text x="33.7563%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::RawComponent&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;,lluvia::VecContainer&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt; (19 samples, 0.35%)</title><rect x="33.8584%" y="501" width="0.3521%" height="15" fill="rgb(253,99,2)" fg:x="1827" fg:w="19"/><text x="34.1084%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::Table&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;,lluvia::VecContainer&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt; (8 samples, 0.15%)</title><rect x="34.0623%" y="485" width="0.1483%" height="15" fill="rgb(220,168,23)" fg:x="1838" fg:w="8"/><text x="34.3123%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;lluvia::TableInternal&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;,lluvia::VecContainer&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt;&gt;&gt; (8 samples, 0.15%)</title><rect x="34.0623%" y="469" width="0.1483%" height="15" fill="rgb(242,38,24)" fg:x="1838" fg:w="8"/><text x="34.3123%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.15%)</title><rect x="34.0623%" y="453" width="0.1483%" height="15" fill="rgb(225,182,9)" fg:x="1838" fg:w="8"/><text x="34.3123%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (7 samples, 0.13%)</title><rect x="34.0808%" y="437" width="0.1297%" height="15" fill="rgb(243,178,37)" fg:x="1839" fg:w="7"/><text x="34.3308%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (7 samples, 0.13%)</title><rect x="34.0808%" y="421" width="0.1297%" height="15" fill="rgb(232,139,19)" fg:x="1839" fg:w="7"/><text x="34.3308%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::sync::atomic::AtomicBool&gt;&gt; (4 samples, 0.07%)</title><rect x="34.2105%" y="533" width="0.0741%" height="15" fill="rgb(225,201,24)" fg:x="1846" fg:w="4"/><text x="34.4605%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.07%)</title><rect x="34.2105%" y="517" width="0.0741%" height="15" fill="rgb(221,47,46)" fg:x="1846" fg:w="4"/><text x="34.4605%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.07%)</title><rect x="34.2105%" y="501" width="0.0741%" height="15" fill="rgb(249,23,13)" fg:x="1846" fg:w="4"/><text x="34.4605%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.07%)</title><rect x="34.2105%" y="485" width="0.0741%" height="15" fill="rgb(219,9,5)" fg:x="1846" fg:w="4"/><text x="34.4605%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::Instance&gt; (1 samples, 0.02%)</title><rect x="34.2847%" y="533" width="0.0185%" height="15" fill="rgb(254,171,16)" fg:x="1850" fg:w="1"/><text x="34.5347%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;lluvia::ComponentList&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="34.2847%" y="517" width="0.0185%" height="15" fill="rgb(230,171,20)" fg:x="1850" fg:w="1"/><text x="34.5347%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="34.2847%" y="501" width="0.0185%" height="15" fill="rgb(210,71,41)" fg:x="1850" fg:w="1"/><text x="34.5347%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.02%)</title><rect x="34.2847%" y="485" width="0.0185%" height="15" fill="rgb(206,173,20)" fg:x="1850" fg:w="1"/><text x="34.5347%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.02%)</title><rect x="34.2847%" y="469" width="0.0185%" height="15" fill="rgb(233,88,34)" fg:x="1850" fg:w="1"/><text x="34.5347%" y="479.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="34.3032%" y="485" width="0.0185%" height="15" fill="rgb(223,209,46)" fg:x="1851" fg:w="1"/><text x="34.5532%" y="495.50"></text></g><g><title>_int_free (15 samples, 0.28%)</title><rect x="34.3217%" y="485" width="0.2780%" height="15" fill="rgb(250,43,18)" fg:x="1852" fg:w="15"/><text x="34.5717%" y="495.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::get_mut_unchecked (5 samples, 0.09%)</title><rect x="34.5997%" y="469" width="0.0927%" height="15" fill="rgb(208,13,10)" fg:x="1867" fg:w="5"/><text x="34.8497%" y="479.50"></text></g><g><title>&lt;&amp;A as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="34.6924%" y="421" width="0.0185%" height="15" fill="rgb(212,200,36)" fg:x="1872" fg:w="1"/><text x="34.9424%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="34.6924%" y="405" width="0.0185%" height="15" fill="rgb(225,90,30)" fg:x="1872" fg:w="1"/><text x="34.9424%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="34.6924%" y="389" width="0.0185%" height="15" fill="rgb(236,182,39)" fg:x="1872" fg:w="1"/><text x="34.9424%" y="399.50"></text></g><g><title>core::mem::drop (2 samples, 0.04%)</title><rect x="34.6924%" y="469" width="0.0371%" height="15" fill="rgb(212,144,35)" fg:x="1872" fg:w="2"/><text x="34.9424%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;std::sync::rwlock::RwLock&lt;lluvia::TableInternal&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;,lluvia::VecContainer&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt;,&amp;alloc::alloc::Global&gt;&gt; (2 samples, 0.04%)</title><rect x="34.6924%" y="453" width="0.0371%" height="15" fill="rgb(228,63,44)" fg:x="1872" fg:w="2"/><text x="34.9424%" y="463.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="34.6924%" y="437" width="0.0371%" height="15" fill="rgb(228,109,6)" fg:x="1872" fg:w="2"/><text x="34.9424%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.02%)</title><rect x="34.7109%" y="421" width="0.0185%" height="15" fill="rgb(238,117,24)" fg:x="1873" fg:w="1"/><text x="34.9609%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.02%)</title><rect x="34.7109%" y="405" width="0.0185%" height="15" fill="rgb(242,26,26)" fg:x="1873" fg:w="1"/><text x="34.9609%" y="415.50"></text></g><g><title>__GI___libc_free (5 samples, 0.09%)</title><rect x="34.7850%" y="357" width="0.0927%" height="15" fill="rgb(221,92,48)" fg:x="1877" fg:w="5"/><text x="35.0350%" y="367.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="34.8777%" y="357" width="0.0185%" height="15" fill="rgb(209,209,32)" fg:x="1882" fg:w="1"/><text x="35.1277%" y="367.50"></text></g><g><title>_int_free (12 samples, 0.22%)</title><rect x="34.8962%" y="357" width="0.2224%" height="15" fill="rgb(221,70,22)" fg:x="1883" fg:w="12"/><text x="35.1462%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.52%)</title><rect x="35.1186%" y="309" width="0.5189%" height="15" fill="rgb(248,145,5)" fg:x="1895" fg:w="28"/><text x="35.3686%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;]&gt; (28 samples, 0.52%)</title><rect x="35.1186%" y="293" width="0.5189%" height="15" fill="rgb(226,116,26)" fg:x="1895" fg:w="28"/><text x="35.3686%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt; (26 samples, 0.48%)</title><rect x="35.1557%" y="277" width="0.4818%" height="15" fill="rgb(244,5,17)" fg:x="1897" fg:w="26"/><text x="35.4057%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt; (22 samples, 0.41%)</title><rect x="35.2298%" y="261" width="0.4077%" height="15" fill="rgb(252,159,33)" fg:x="1901" fg:w="22"/><text x="35.4798%" y="271.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.41%)</title><rect x="35.2298%" y="245" width="0.4077%" height="15" fill="rgb(206,71,0)" fg:x="1901" fg:w="22"/><text x="35.4798%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (20 samples, 0.37%)</title><rect x="35.2669%" y="229" width="0.3706%" height="15" fill="rgb(233,118,54)" fg:x="1903" fg:w="20"/><text x="35.5169%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_sub (20 samples, 0.37%)</title><rect x="35.2669%" y="213" width="0.3706%" height="15" fill="rgb(234,83,48)" fg:x="1903" fg:w="20"/><text x="35.5169%" y="223.50"></text></g><g><title>asm_sysvec_irq_work (6 samples, 0.11%)</title><rect x="35.5263%" y="197" width="0.1112%" height="15" fill="rgb(228,3,54)" fg:x="1917" fg:w="6"/><text x="35.7763%" y="207.50"></text></g><g><title>sysvec_irq_work (6 samples, 0.11%)</title><rect x="35.5263%" y="181" width="0.1112%" height="15" fill="rgb(226,155,13)" fg:x="1917" fg:w="6"/><text x="35.7763%" y="191.50"></text></g><g><title>irqentry_exit (6 samples, 0.11%)</title><rect x="35.5263%" y="165" width="0.1112%" height="15" fill="rgb(241,28,37)" fg:x="1917" fg:w="6"/><text x="35.7763%" y="175.50"></text></g><g><title>irqentry_exit_to_user_mode (6 samples, 0.11%)</title><rect x="35.5263%" y="149" width="0.1112%" height="15" fill="rgb(233,93,10)" fg:x="1917" fg:w="6"/><text x="35.7763%" y="159.50"></text></g><g><title>exit_to_user_mode_prepare (6 samples, 0.11%)</title><rect x="35.5263%" y="133" width="0.1112%" height="15" fill="rgb(225,113,19)" fg:x="1917" fg:w="6"/><text x="35.7763%" y="143.50"></text></g><g><title>schedule (6 samples, 0.11%)</title><rect x="35.5263%" y="117" width="0.1112%" height="15" fill="rgb(241,2,18)" fg:x="1917" fg:w="6"/><text x="35.7763%" y="127.50"></text></g><g><title>__sched_text_start (6 samples, 0.11%)</title><rect x="35.5263%" y="101" width="0.1112%" height="15" fill="rgb(228,207,21)" fg:x="1917" fg:w="6"/><text x="35.7763%" y="111.50"></text></g><g><title>finish_task_switch (6 samples, 0.11%)</title><rect x="35.5263%" y="85" width="0.1112%" height="15" fill="rgb(213,211,35)" fg:x="1917" fg:w="6"/><text x="35.7763%" y="95.50"></text></g><g><title>__perf_event_task_sched_in (6 samples, 0.11%)</title><rect x="35.5263%" y="69" width="0.1112%" height="15" fill="rgb(209,83,10)" fg:x="1917" fg:w="6"/><text x="35.7763%" y="79.50"></text></g><g><title>perf_pmu_enable.part.0 (6 samples, 0.11%)</title><rect x="35.5263%" y="53" width="0.1112%" height="15" fill="rgb(209,164,1)" fg:x="1917" fg:w="6"/><text x="35.7763%" y="63.50"></text></g><g><title>x86_pmu_enable (6 samples, 0.11%)</title><rect x="35.5263%" y="37" width="0.1112%" height="15" fill="rgb(213,184,43)" fg:x="1917" fg:w="6"/><text x="35.7763%" y="47.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.95%)</title><rect x="34.7294%" y="389" width="0.9451%" height="15" fill="rgb(231,61,34)" fg:x="1874" fg:w="51"/><text x="34.9794%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;lluvia::VCBlock&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;]&gt; (51 samples, 0.95%)</title><rect x="34.7294%" y="373" width="0.9451%" height="15" fill="rgb(235,75,3)" fg:x="1874" fg:w="51"/><text x="34.9794%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;lluvia::VCBlock&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt; (30 samples, 0.56%)</title><rect x="35.1186%" y="357" width="0.5560%" height="15" fill="rgb(220,106,47)" fg:x="1895" fg:w="30"/><text x="35.3686%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::VCBlock&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt; (30 samples, 0.56%)</title><rect x="35.1186%" y="341" width="0.5560%" height="15" fill="rgb(210,196,33)" fg:x="1895" fg:w="30"/><text x="35.3686%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt; (30 samples, 0.56%)</title><rect x="35.1186%" y="325" width="0.5560%" height="15" fill="rgb(229,154,42)" fg:x="1895" fg:w="30"/><text x="35.3686%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="35.6375%" y="309" width="0.0371%" height="15" fill="rgb(228,114,26)" fg:x="1923" fg:w="2"/><text x="35.8875%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="35.6375%" y="293" width="0.0371%" height="15" fill="rgb(208,144,1)" fg:x="1923" fg:w="2"/><text x="35.8875%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.04%)</title><rect x="35.6375%" y="277" width="0.0371%" height="15" fill="rgb(239,112,37)" fg:x="1923" fg:w="2"/><text x="35.8875%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.04%)</title><rect x="35.6375%" y="261" width="0.0371%" height="15" fill="rgb(210,96,50)" fg:x="1923" fg:w="2"/><text x="35.8875%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::Snapshot&lt;&amp;str&gt;&gt; (275 samples, 5.10%)</title><rect x="30.7450%" y="565" width="5.0964%" height="15" fill="rgb(222,178,2)" fg:x="1659" fg:w="275"/><text x="30.9950%" y="575.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;lluvia::RawComponent&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;,lluvia::VecContainer&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt; (88 samples, 1.63%)</title><rect x="34.2105%" y="549" width="1.6308%" height="15" fill="rgb(226,74,18)" fg:x="1846" fg:w="88"/><text x="34.4605%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::Table&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;,lluvia::VecContainer&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt; (83 samples, 1.54%)</title><rect x="34.3032%" y="533" width="1.5382%" height="15" fill="rgb(225,67,54)" fg:x="1851" fg:w="83"/><text x="34.5532%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;lluvia::TableInternal&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;,lluvia::VecContainer&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt;&gt;&gt; (83 samples, 1.54%)</title><rect x="34.3032%" y="517" width="1.5382%" height="15" fill="rgb(251,92,32)" fg:x="1851" fg:w="83"/><text x="34.5532%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (83 samples, 1.54%)</title><rect x="34.3032%" y="501" width="1.5382%" height="15" fill="rgb(228,149,22)" fg:x="1851" fg:w="83"/><text x="34.5532%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (67 samples, 1.24%)</title><rect x="34.5997%" y="485" width="1.2417%" height="15" fill="rgb(243,54,13)" fg:x="1867" fg:w="67"/><text x="34.8497%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLock&lt;lluvia::TableInternal&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;,lluvia::VecContainer&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt;&gt; (60 samples, 1.11%)</title><rect x="34.7294%" y="469" width="1.1119%" height="15" fill="rgb(243,180,28)" fg:x="1874" fg:w="60"/><text x="34.9794%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;lluvia::TableInternal&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;,lluvia::VecContainer&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt;&gt; (60 samples, 1.11%)</title><rect x="34.7294%" y="453" width="1.1119%" height="15" fill="rgb(208,167,24)" fg:x="1874" fg:w="60"/><text x="34.9794%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::TableInternal&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;,lluvia::VecContainer&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt; (60 samples, 1.11%)</title><rect x="34.7294%" y="437" width="1.1119%" height="15" fill="rgb(245,73,45)" fg:x="1874" fg:w="60"/><text x="34.9794%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::VecContainer&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt; (60 samples, 1.11%)</title><rect x="34.7294%" y="421" width="1.1119%" height="15" fill="rgb(237,203,48)" fg:x="1874" fg:w="60"/><text x="34.9794%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;lluvia::VCBlock&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt;&gt; (60 samples, 1.11%)</title><rect x="34.7294%" y="405" width="1.1119%" height="15" fill="rgb(211,197,16)" fg:x="1874" fg:w="60"/><text x="34.9794%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;lluvia::VCBlock&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt;&gt; (9 samples, 0.17%)</title><rect x="35.6746%" y="389" width="0.1668%" height="15" fill="rgb(243,99,51)" fg:x="1925" fg:w="9"/><text x="35.9246%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.17%)</title><rect x="35.6746%" y="373" width="0.1668%" height="15" fill="rgb(215,123,29)" fg:x="1925" fg:w="9"/><text x="35.9246%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.17%)</title><rect x="35.6746%" y="357" width="0.1668%" height="15" fill="rgb(239,186,37)" fg:x="1925" fg:w="9"/><text x="35.9246%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.17%)</title><rect x="35.6746%" y="341" width="0.1668%" height="15" fill="rgb(252,136,39)" fg:x="1925" fg:w="9"/><text x="35.9246%" y="351.50"></text></g><g><title>_int_free (9 samples, 0.17%)</title><rect x="35.6746%" y="325" width="0.1668%" height="15" fill="rgb(223,213,32)" fg:x="1925" fg:w="9"/><text x="35.9246%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::TableRefEntityType&gt; (63 samples, 1.17%)</title><rect x="35.8414%" y="549" width="1.1675%" height="15" fill="rgb(233,115,5)" fg:x="1934" fg:w="63"/><text x="36.0914%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt; (55 samples, 1.02%)</title><rect x="35.9896%" y="533" width="1.0193%" height="15" fill="rgb(207,226,44)" fg:x="1942" fg:w="55"/><text x="36.2396%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 1.02%)</title><rect x="35.9896%" y="517" width="1.0193%" height="15" fill="rgb(208,126,0)" fg:x="1942" fg:w="55"/><text x="36.2396%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (54 samples, 1.00%)</title><rect x="36.0082%" y="501" width="1.0007%" height="15" fill="rgb(244,66,21)" fg:x="1943" fg:w="54"/><text x="36.2582%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (54 samples, 1.00%)</title><rect x="36.0082%" y="485" width="1.0007%" height="15" fill="rgb(222,97,12)" fg:x="1943" fg:w="54"/><text x="36.2582%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::TableRef&lt;&amp;str,lluvia::VecContainer&lt;&amp;str&gt;&gt;&gt; (111 samples, 2.06%)</title><rect x="35.8414%" y="565" width="2.0571%" height="15" fill="rgb(219,213,19)" fg:x="1934" fg:w="111"/><text x="36.0914%" y="575.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;lluvia::TableInternal&lt;&amp;str,lluvia::VecContainer&lt;&amp;str&gt;&gt;&gt;&gt; (48 samples, 0.89%)</title><rect x="37.0089%" y="549" width="0.8895%" height="15" fill="rgb(252,169,30)" fg:x="1997" fg:w="48"/><text x="37.2589%" y="559.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.89%)</title><rect x="37.0089%" y="533" width="0.8895%" height="15" fill="rgb(206,32,51)" fg:x="1997" fg:w="48"/><text x="37.2589%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (48 samples, 0.89%)</title><rect x="37.0089%" y="517" width="0.8895%" height="15" fill="rgb(250,172,42)" fg:x="1997" fg:w="48"/><text x="37.2589%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (46 samples, 0.85%)</title><rect x="37.0460%" y="501" width="0.8525%" height="15" fill="rgb(209,34,43)" fg:x="1999" fg:w="46"/><text x="37.2960%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (46 samples, 0.85%)</title><rect x="37.0460%" y="485" width="0.8525%" height="15" fill="rgb(223,11,35)" fg:x="1999" fg:w="46"/><text x="37.2960%" y="495.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (1 samples, 0.02%)</title><rect x="37.8984%" y="533" width="0.0185%" height="15" fill="rgb(251,219,26)" fg:x="2045" fg:w="1"/><text x="38.1484%" y="543.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (1 samples, 0.02%)</title><rect x="37.8984%" y="517" width="0.0185%" height="15" fill="rgb(231,119,3)" fg:x="2045" fg:w="1"/><text x="38.1484%" y="527.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (1 samples, 0.02%)</title><rect x="37.8984%" y="501" width="0.0185%" height="15" fill="rgb(216,97,11)" fg:x="2045" fg:w="1"/><text x="38.1484%" y="511.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.09%)</title><rect x="37.9355%" y="453" width="0.0927%" height="15" fill="rgb(223,59,9)" fg:x="2047" fg:w="5"/><text x="38.1855%" y="463.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="38.0282%" y="453" width="0.0185%" height="15" fill="rgb(233,93,31)" fg:x="2052" fg:w="1"/><text x="38.2782%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="38.0282%" y="437" width="0.0185%" height="15" fill="rgb(239,81,33)" fg:x="2052" fg:w="1"/><text x="38.2782%" y="447.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (8 samples, 0.15%)</title><rect x="37.9170%" y="533" width="0.1483%" height="15" fill="rgb(213,120,34)" fg:x="2046" fg:w="8"/><text x="38.1670%" y="543.50"></text></g><g><title>alloc::alloc::exchange_malloc (8 samples, 0.15%)</title><rect x="37.9170%" y="517" width="0.1483%" height="15" fill="rgb(243,49,53)" fg:x="2046" fg:w="8"/><text x="38.1670%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.15%)</title><rect x="37.9170%" y="501" width="0.1483%" height="15" fill="rgb(247,216,33)" fg:x="2046" fg:w="8"/><text x="38.1670%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.15%)</title><rect x="37.9170%" y="485" width="0.1483%" height="15" fill="rgb(226,26,14)" fg:x="2046" fg:w="8"/><text x="38.1670%" y="495.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.15%)</title><rect x="37.9170%" y="469" width="0.1483%" height="15" fill="rgb(215,49,53)" fg:x="2046" fg:w="8"/><text x="38.1670%" y="479.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="38.0467%" y="453" width="0.0185%" height="15" fill="rgb(245,162,40)" fg:x="2053" fg:w="1"/><text x="38.2967%" y="463.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.13%)</title><rect x="38.1023%" y="437" width="0.1297%" height="15" fill="rgb(229,68,17)" fg:x="2056" fg:w="7"/><text x="38.3523%" y="447.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (10 samples, 0.19%)</title><rect x="38.0652%" y="533" width="0.1853%" height="15" fill="rgb(213,182,10)" fg:x="2054" fg:w="10"/><text x="38.3152%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (10 samples, 0.19%)</title><rect x="38.0652%" y="517" width="0.1853%" height="15" fill="rgb(245,125,30)" fg:x="2054" fg:w="10"/><text x="38.3152%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (10 samples, 0.19%)</title><rect x="38.0652%" y="501" width="0.1853%" height="15" fill="rgb(232,202,2)" fg:x="2054" fg:w="10"/><text x="38.3152%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.17%)</title><rect x="38.0838%" y="485" width="0.1668%" height="15" fill="rgb(237,140,51)" fg:x="2055" fg:w="9"/><text x="38.3338%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.17%)</title><rect x="38.0838%" y="469" width="0.1668%" height="15" fill="rgb(236,157,25)" fg:x="2055" fg:w="9"/><text x="38.3338%" y="479.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.17%)</title><rect x="38.0838%" y="453" width="0.1668%" height="15" fill="rgb(219,209,0)" fg:x="2055" fg:w="9"/><text x="38.3338%" y="463.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="38.2320%" y="437" width="0.0185%" height="15" fill="rgb(240,116,54)" fg:x="2063" fg:w="1"/><text x="38.4820%" y="447.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.07%)</title><rect x="38.3247%" y="469" width="0.0741%" height="15" fill="rgb(216,10,36)" fg:x="2068" fg:w="4"/><text x="38.5747%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.13%)</title><rect x="38.2876%" y="485" width="0.1297%" height="15" fill="rgb(222,72,44)" fg:x="2066" fg:w="7"/><text x="38.5376%" y="495.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="38.3988%" y="469" width="0.0185%" height="15" fill="rgb(232,159,9)" fg:x="2072" fg:w="1"/><text x="38.6488%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.19%)</title><rect x="38.2506%" y="533" width="0.1853%" height="15" fill="rgb(210,39,32)" fg:x="2064" fg:w="10"/><text x="38.5006%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (9 samples, 0.17%)</title><rect x="38.2691%" y="517" width="0.1668%" height="15" fill="rgb(216,194,45)" fg:x="2065" fg:w="9"/><text x="38.5191%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.17%)</title><rect x="38.2691%" y="501" width="0.1668%" height="15" fill="rgb(218,18,35)" fg:x="2065" fg:w="9"/><text x="38.5191%" y="511.50"></text></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect x="38.4173%" y="485" width="0.0185%" height="15" fill="rgb(207,83,51)" fg:x="2073" fg:w="1"/><text x="38.6673%" y="495.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="38.4173%" y="469" width="0.0185%" height="15" fill="rgb(225,63,43)" fg:x="2073" fg:w="1"/><text x="38.6673%" y="479.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.02%)</title><rect x="38.4173%" y="453" width="0.0185%" height="15" fill="rgb(207,57,36)" fg:x="2073" fg:w="1"/><text x="38.6673%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.02%)</title><rect x="38.4359%" y="533" width="0.0185%" height="15" fill="rgb(216,99,33)" fg:x="2074" fg:w="1"/><text x="38.6859%" y="543.50"></text></g><g><title>std::sync::poison::Flag::done (1 samples, 0.02%)</title><rect x="38.4544%" y="501" width="0.0185%" height="15" fill="rgb(225,42,16)" fg:x="2075" fg:w="1"/><text x="38.7044%" y="511.50"></text></g><g><title>std::thread::panicking (1 samples, 0.02%)</title><rect x="38.4544%" y="485" width="0.0185%" height="15" fill="rgb(220,201,45)" fg:x="2075" fg:w="1"/><text x="38.7044%" y="495.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.02%)</title><rect x="38.4544%" y="469" width="0.0185%" height="15" fill="rgb(225,33,4)" fg:x="2075" fg:w="1"/><text x="38.7044%" y="479.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.02%)</title><rect x="38.4544%" y="453" width="0.0185%" height="15" fill="rgb(224,33,50)" fg:x="2075" fg:w="1"/><text x="38.7044%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="38.4544%" y="437" width="0.0185%" height="15" fill="rgb(246,198,51)" fg:x="2075" fg:w="1"/><text x="38.7044%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="38.4544%" y="421" width="0.0185%" height="15" fill="rgb(205,22,4)" fg:x="2075" fg:w="1"/><text x="38.7044%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;lluvia::ComponentList&gt;&gt; (2 samples, 0.04%)</title><rect x="38.4544%" y="533" width="0.0371%" height="15" fill="rgb(206,3,8)" fg:x="2075" fg:w="2"/><text x="38.7044%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="38.4544%" y="517" width="0.0371%" height="15" fill="rgb(251,23,15)" fg:x="2075" fg:w="2"/><text x="38.7044%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_unlock (1 samples, 0.02%)</title><rect x="38.4729%" y="501" width="0.0185%" height="15" fill="rgb(252,88,28)" fg:x="2076" fg:w="1"/><text x="38.7229%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (1 samples, 0.02%)</title><rect x="38.4729%" y="485" width="0.0185%" height="15" fill="rgb(212,127,14)" fg:x="2076" fg:w="1"/><text x="38.7229%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.02%)</title><rect x="38.4729%" y="469" width="0.0185%" height="15" fill="rgb(247,145,37)" fg:x="2076" fg:w="1"/><text x="38.7229%" y="479.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.19%)</title><rect x="38.6397%" y="421" width="0.1853%" height="15" fill="rgb(209,117,53)" fg:x="2085" fg:w="10"/><text x="38.8897%" y="431.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (19 samples, 0.35%)</title><rect x="38.4915%" y="517" width="0.3521%" height="15" fill="rgb(212,90,42)" fg:x="2077" fg:w="19"/><text x="38.7415%" y="527.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (17 samples, 0.32%)</title><rect x="38.5285%" y="501" width="0.3150%" height="15" fill="rgb(218,164,37)" fg:x="2079" fg:w="17"/><text x="38.7785%" y="511.50"></text></g><g><title>alloc::alloc::exchange_malloc (15 samples, 0.28%)</title><rect x="38.5656%" y="485" width="0.2780%" height="15" fill="rgb(246,65,34)" fg:x="2081" fg:w="15"/><text x="38.8156%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.26%)</title><rect x="38.5841%" y="469" width="0.2595%" height="15" fill="rgb(231,100,33)" fg:x="2082" fg:w="14"/><text x="38.8341%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.26%)</title><rect x="38.5841%" y="453" width="0.2595%" height="15" fill="rgb(228,126,14)" fg:x="2082" fg:w="14"/><text x="38.8341%" y="463.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.26%)</title><rect x="38.5841%" y="437" width="0.2595%" height="15" fill="rgb(215,173,21)" fg:x="2082" fg:w="14"/><text x="38.8341%" y="447.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="38.8251%" y="421" width="0.0185%" height="15" fill="rgb(210,6,40)" fg:x="2095" fg:w="1"/><text x="39.0751%" y="431.50"></text></g><g><title>lluvia::Instance::add_raw_component (52 samples, 0.96%)</title><rect x="37.8984%" y="549" width="0.9637%" height="15" fill="rgb(212,48,18)" fg:x="2045" fg:w="52"/><text x="38.1484%" y="559.50"></text></g><g><title>lluvia::Table&lt;T,C&gt;::new (20 samples, 0.37%)</title><rect x="38.4915%" y="533" width="0.3706%" height="15" fill="rgb(230,214,11)" fg:x="2077" fg:w="20"/><text x="38.7415%" y="543.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="38.8436%" y="517" width="0.0185%" height="15" fill="rgb(254,105,39)" fg:x="2096" fg:w="1"/><text x="39.0936%" y="527.50"></text></g><g><title>lluvia::Instance::add_component (53 samples, 0.98%)</title><rect x="37.8984%" y="565" width="0.9822%" height="15" fill="rgb(245,158,5)" fg:x="2045" fg:w="53"/><text x="38.1484%" y="575.50"></text></g><g><title>lluvia::VecContainer&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="38.8621%" y="549" width="0.0185%" height="15" fill="rgb(249,208,11)" fg:x="2097" fg:w="1"/><text x="39.1121%" y="559.50"></text></g><g><title>&lt;lluvia::Instance as core::clone::Clone&gt;::clone (10 samples, 0.19%)</title><rect x="38.8992%" y="549" width="0.1853%" height="15" fill="rgb(210,39,28)" fg:x="2099" fg:w="10"/><text x="39.1492%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.19%)</title><rect x="38.8992%" y="533" width="0.1853%" height="15" fill="rgb(211,56,53)" fg:x="2099" fg:w="10"/><text x="39.1492%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (10 samples, 0.19%)</title><rect x="38.8992%" y="517" width="0.1853%" height="15" fill="rgb(226,201,30)" fg:x="2099" fg:w="10"/><text x="39.1492%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_add (10 samples, 0.19%)</title><rect x="38.8992%" y="501" width="0.1853%" height="15" fill="rgb(239,101,34)" fg:x="2099" fg:w="10"/><text x="39.1492%" y="511.50"></text></g><g><title>__GI___libc_malloc (21 samples, 0.39%)</title><rect x="39.2698%" y="453" width="0.3892%" height="15" fill="rgb(226,209,5)" fg:x="2119" fg:w="21"/><text x="39.5198%" y="463.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="39.6590%" y="453" width="0.0185%" height="15" fill="rgb(250,105,47)" fg:x="2140" fg:w="1"/><text x="39.9090%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="39.6590%" y="437" width="0.0185%" height="15" fill="rgb(230,72,3)" fg:x="2140" fg:w="1"/><text x="39.9090%" y="447.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (34 samples, 0.63%)</title><rect x="39.0845%" y="549" width="0.6301%" height="15" fill="rgb(232,218,39)" fg:x="2109" fg:w="34"/><text x="39.3345%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (34 samples, 0.63%)</title><rect x="39.0845%" y="533" width="0.6301%" height="15" fill="rgb(248,166,6)" fg:x="2109" fg:w="34"/><text x="39.3345%" y="543.50"></text></g><g><title>alloc::alloc::exchange_malloc (29 samples, 0.54%)</title><rect x="39.1772%" y="517" width="0.5374%" height="15" fill="rgb(247,89,20)" fg:x="2114" fg:w="29"/><text x="39.4272%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (28 samples, 0.52%)</title><rect x="39.1957%" y="501" width="0.5189%" height="15" fill="rgb(248,130,54)" fg:x="2115" fg:w="28"/><text x="39.4457%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (28 samples, 0.52%)</title><rect x="39.1957%" y="485" width="0.5189%" height="15" fill="rgb(234,196,4)" fg:x="2115" fg:w="28"/><text x="39.4457%" y="495.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.52%)</title><rect x="39.1957%" y="469" width="0.5189%" height="15" fill="rgb(250,143,31)" fg:x="2115" fg:w="28"/><text x="39.4457%" y="479.50"></text></g><g><title>__rust_alloc (2 samples, 0.04%)</title><rect x="39.6775%" y="453" width="0.0371%" height="15" fill="rgb(211,110,34)" fg:x="2141" fg:w="2"/><text x="39.9275%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;lluvia::InstanceInternal&gt;&gt; (2 samples, 0.04%)</title><rect x="39.7146%" y="549" width="0.0371%" height="15" fill="rgb(215,124,48)" fg:x="2143" fg:w="2"/><text x="39.9646%" y="559.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="39.7146%" y="533" width="0.0371%" height="15" fill="rgb(216,46,13)" fg:x="2143" fg:w="2"/><text x="39.9646%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_unlock (2 samples, 0.04%)</title><rect x="39.7146%" y="517" width="0.0371%" height="15" fill="rgb(205,184,25)" fg:x="2143" fg:w="2"/><text x="39.9646%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (2 samples, 0.04%)</title><rect x="39.7146%" y="501" width="0.0371%" height="15" fill="rgb(228,1,10)" fg:x="2143" fg:w="2"/><text x="39.9646%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.04%)</title><rect x="39.7146%" y="485" width="0.0371%" height="15" fill="rgb(213,116,27)" fg:x="2143" fg:w="2"/><text x="39.9646%" y="495.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (8 samples, 0.15%)</title><rect x="39.7517%" y="549" width="0.1483%" height="15" fill="rgb(241,95,50)" fg:x="2145" fg:w="8"/><text x="40.0017%" y="559.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.09%)</title><rect x="40.1964%" y="469" width="0.0927%" height="15" fill="rgb(238,48,32)" fg:x="2169" fg:w="5"/><text x="40.4464%" y="479.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="40.2891%" y="469" width="0.0185%" height="15" fill="rgb(235,113,49)" fg:x="2174" fg:w="1"/><text x="40.5391%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="40.2891%" y="453" width="0.0185%" height="15" fill="rgb(205,127,43)" fg:x="2174" fg:w="1"/><text x="40.5391%" y="463.50"></text></g><g><title>__rust_alloc (2 samples, 0.04%)</title><rect x="40.3076%" y="469" width="0.0371%" height="15" fill="rgb(250,162,2)" fg:x="2175" fg:w="2"/><text x="40.5576%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 0.28%)</title><rect x="40.0852%" y="485" width="0.2780%" height="15" fill="rgb(220,13,41)" fg:x="2163" fg:w="15"/><text x="40.3352%" y="495.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="40.3447%" y="469" width="0.0185%" height="15" fill="rgb(249,221,25)" fg:x="2177" fg:w="1"/><text x="40.5947%" y="479.50"></text></g><g><title>lluvia::IdTable::create_id (28 samples, 0.52%)</title><rect x="39.8999%" y="549" width="0.5189%" height="15" fill="rgb(215,208,19)" fg:x="2153" fg:w="28"/><text x="40.1499%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (25 samples, 0.46%)</title><rect x="39.9555%" y="533" width="0.4633%" height="15" fill="rgb(236,175,2)" fg:x="2156" fg:w="25"/><text x="40.2055%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (18 samples, 0.33%)</title><rect x="40.0852%" y="517" width="0.3336%" height="15" fill="rgb(241,52,2)" fg:x="2163" fg:w="18"/><text x="40.3352%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (18 samples, 0.33%)</title><rect x="40.0852%" y="501" width="0.3336%" height="15" fill="rgb(248,140,14)" fg:x="2163" fg:w="18"/><text x="40.3352%" y="511.50"></text></g><g><title>core::cmp::max (3 samples, 0.06%)</title><rect x="40.3632%" y="485" width="0.0556%" height="15" fill="rgb(253,22,42)" fg:x="2178" fg:w="3"/><text x="40.6132%" y="495.50"></text></g><g><title>core::cmp::Ord::max (3 samples, 0.06%)</title><rect x="40.3632%" y="469" width="0.0556%" height="15" fill="rgb(234,61,47)" fg:x="2178" fg:w="3"/><text x="40.6132%" y="479.50"></text></g><g><title>core::cmp::max_by (3 samples, 0.06%)</title><rect x="40.3632%" y="453" width="0.0556%" height="15" fill="rgb(208,226,15)" fg:x="2178" fg:w="3"/><text x="40.6132%" y="463.50"></text></g><g><title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (3 samples, 0.06%)</title><rect x="40.4188%" y="533" width="0.0556%" height="15" fill="rgb(217,221,4)" fg:x="2181" fg:w="3"/><text x="40.6688%" y="543.50"></text></g><g><title>std::sync::poison::Flag::guard (3 samples, 0.06%)</title><rect x="40.4188%" y="517" width="0.0556%" height="15" fill="rgb(212,174,34)" fg:x="2181" fg:w="3"/><text x="40.6688%" y="527.50"></text></g><g><title>std::thread::panicking (3 samples, 0.06%)</title><rect x="40.4188%" y="501" width="0.0556%" height="15" fill="rgb(253,83,4)" fg:x="2181" fg:w="3"/><text x="40.6688%" y="511.50"></text></g><g><title>std::panicking::panicking (3 samples, 0.06%)</title><rect x="40.4188%" y="485" width="0.0556%" height="15" fill="rgb(250,195,49)" fg:x="2181" fg:w="3"/><text x="40.6688%" y="495.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (3 samples, 0.06%)</title><rect x="40.4188%" y="469" width="0.0556%" height="15" fill="rgb(241,192,25)" fg:x="2181" fg:w="3"/><text x="40.6688%" y="479.50"></text></g><g><title>lluvia::Instance::add_entity (103 samples, 1.91%)</title><rect x="38.8807%" y="565" width="1.9088%" height="15" fill="rgb(208,124,10)" fg:x="2098" fg:w="103"/><text x="39.1307%" y="575.50">l..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (20 samples, 0.37%)</title><rect x="40.4188%" y="549" width="0.3706%" height="15" fill="rgb(222,33,0)" fg:x="2181" fg:w="20"/><text x="40.6688%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write (17 samples, 0.32%)</title><rect x="40.4744%" y="533" width="0.3150%" height="15" fill="rgb(234,209,28)" fg:x="2184" fg:w="17"/><text x="40.7244%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (16 samples, 0.30%)</title><rect x="40.4930%" y="517" width="0.2965%" height="15" fill="rgb(224,11,23)" fg:x="2185" fg:w="16"/><text x="40.7430%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (16 samples, 0.30%)</title><rect x="40.4930%" y="501" width="0.2965%" height="15" fill="rgb(232,99,1)" fg:x="2185" fg:w="16"/><text x="40.7430%" y="511.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.11%)</title><rect x="40.8636%" y="453" width="0.1112%" height="15" fill="rgb(237,95,45)" fg:x="2205" fg:w="6"/><text x="41.1136%" y="463.50"></text></g><g><title>lluvia::Instance::new (13 samples, 0.24%)</title><rect x="40.7895%" y="565" width="0.2409%" height="15" fill="rgb(208,109,11)" fg:x="2201" fg:w="13"/><text x="41.0395%" y="575.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (13 samples, 0.24%)</title><rect x="40.7895%" y="549" width="0.2409%" height="15" fill="rgb(216,190,48)" fg:x="2201" fg:w="13"/><text x="41.0395%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (12 samples, 0.22%)</title><rect x="40.8080%" y="533" width="0.2224%" height="15" fill="rgb(251,171,36)" fg:x="2202" fg:w="12"/><text x="41.0580%" y="543.50"></text></g><g><title>alloc::alloc::exchange_malloc (10 samples, 0.19%)</title><rect x="40.8451%" y="517" width="0.1853%" height="15" fill="rgb(230,62,22)" fg:x="2204" fg:w="10"/><text x="41.0951%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.17%)</title><rect x="40.8636%" y="501" width="0.1668%" height="15" fill="rgb(225,114,35)" fg:x="2205" fg:w="9"/><text x="41.1136%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.17%)</title><rect x="40.8636%" y="485" width="0.1668%" height="15" fill="rgb(215,118,42)" fg:x="2205" fg:w="9"/><text x="41.1136%" y="495.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.17%)</title><rect x="40.8636%" y="469" width="0.1668%" height="15" fill="rgb(243,119,21)" fg:x="2205" fg:w="9"/><text x="41.1136%" y="479.50"></text></g><g><title>__rust_alloc (3 samples, 0.06%)</title><rect x="40.9748%" y="453" width="0.0556%" height="15" fill="rgb(252,177,53)" fg:x="2211" fg:w="3"/><text x="41.2248%" y="463.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="41.4196%" y="533" width="0.0185%" height="15" fill="rgb(237,209,29)" fg:x="2235" fg:w="1"/><text x="41.6696%" y="543.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="41.4196%" y="517" width="0.0185%" height="15" fill="rgb(212,65,23)" fg:x="2235" fg:w="1"/><text x="41.6696%" y="527.50"></text></g><g><title>irqentry_exit (1 samples, 0.02%)</title><rect x="41.4196%" y="501" width="0.0185%" height="15" fill="rgb(230,222,46)" fg:x="2235" fg:w="1"/><text x="41.6696%" y="511.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.02%)</title><rect x="41.4196%" y="485" width="0.0185%" height="15" fill="rgb(215,135,32)" fg:x="2235" fg:w="1"/><text x="41.6696%" y="495.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.02%)</title><rect x="41.4196%" y="469" width="0.0185%" height="15" fill="rgb(246,101,22)" fg:x="2235" fg:w="1"/><text x="41.6696%" y="479.50"></text></g><g><title>schedule (1 samples, 0.02%)</title><rect x="41.4196%" y="453" width="0.0185%" height="15" fill="rgb(206,107,13)" fg:x="2235" fg:w="1"/><text x="41.6696%" y="463.50"></text></g><g><title>__sched_text_start (1 samples, 0.02%)</title><rect x="41.4196%" y="437" width="0.0185%" height="15" fill="rgb(250,100,44)" fg:x="2235" fg:w="1"/><text x="41.6696%" y="447.50"></text></g><g><title>pick_next_task (1 samples, 0.02%)</title><rect x="41.4196%" y="421" width="0.0185%" height="15" fill="rgb(231,147,38)" fg:x="2235" fg:w="1"/><text x="41.6696%" y="431.50"></text></g><g><title>put_prev_task_balance (1 samples, 0.02%)</title><rect x="41.4196%" y="405" width="0.0185%" height="15" fill="rgb(229,8,40)" fg:x="2235" fg:w="1"/><text x="41.6696%" y="415.50"></text></g><g><title>put_prev_task_fair (1 samples, 0.02%)</title><rect x="41.4196%" y="389" width="0.0185%" height="15" fill="rgb(221,135,30)" fg:x="2235" fg:w="1"/><text x="41.6696%" y="399.50"></text></g><g><title>put_prev_entity (1 samples, 0.02%)</title><rect x="41.4196%" y="373" width="0.0185%" height="15" fill="rgb(249,193,18)" fg:x="2235" fg:w="1"/><text x="41.6696%" y="383.50"></text></g><g><title>__enqueue_entity (1 samples, 0.02%)</title><rect x="41.4196%" y="357" width="0.0185%" height="15" fill="rgb(209,133,39)" fg:x="2235" fg:w="1"/><text x="41.6696%" y="367.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (34 samples, 0.63%)</title><rect x="41.4196%" y="549" width="0.6301%" height="15" fill="rgb(232,100,14)" fg:x="2235" fg:w="34"/><text x="41.6696%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (33 samples, 0.61%)</title><rect x="41.4381%" y="533" width="0.6116%" height="15" fill="rgb(224,185,1)" fg:x="2236" fg:w="33"/><text x="41.6881%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_add (33 samples, 0.61%)</title><rect x="41.4381%" y="517" width="0.6116%" height="15" fill="rgb(223,139,8)" fg:x="2236" fg:w="33"/><text x="41.6881%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (10 samples, 0.19%)</title><rect x="42.0497%" y="549" width="0.1853%" height="15" fill="rgb(232,213,38)" fg:x="2269" fg:w="10"/><text x="42.2997%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (10 samples, 0.19%)</title><rect x="42.0497%" y="533" width="0.1853%" height="15" fill="rgb(207,94,22)" fg:x="2269" fg:w="10"/><text x="42.2997%" y="543.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (10 samples, 0.19%)</title><rect x="42.0497%" y="517" width="0.1853%" height="15" fill="rgb(219,183,54)" fg:x="2269" fg:w="10"/><text x="42.2997%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (3 samples, 0.06%)</title><rect x="42.3462%" y="533" width="0.0556%" height="15" fill="rgb(216,185,54)" fg:x="2285" fg:w="3"/><text x="42.5962%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (14 samples, 0.26%)</title><rect x="42.4018%" y="533" width="0.2595%" height="15" fill="rgb(254,217,39)" fg:x="2288" fg:w="14"/><text x="42.6518%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (3 samples, 0.06%)</title><rect x="42.6612%" y="533" width="0.0556%" height="15" fill="rgb(240,178,23)" fg:x="2302" fg:w="3"/><text x="42.9112%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (3 samples, 0.06%)</title><rect x="42.6612%" y="517" width="0.0556%" height="15" fill="rgb(218,11,47)" fg:x="2302" fg:w="3"/><text x="42.9112%" y="527.50"></text></g><g><title>&lt;lluvia::VecContainer&lt;T&gt; as lluvia::Container&lt;T&gt;&gt;::index (71 samples, 1.32%)</title><rect x="42.2350%" y="549" width="1.3158%" height="15" fill="rgb(218,51,51)" fg:x="2279" fg:w="71"/><text x="42.4850%" y="559.50"></text></g><g><title>lluvia::VecContainer&lt;T&gt;::get_indices (45 samples, 0.83%)</title><rect x="42.7168%" y="533" width="0.8340%" height="15" fill="rgb(238,126,27)" fg:x="2305" fg:w="45"/><text x="42.9668%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;lluvia::TableInternal&lt;&amp;str,lluvia::VecContainer&lt;&amp;str&gt;&gt;&gt;&gt; (4 samples, 0.07%)</title><rect x="43.5508%" y="549" width="0.0741%" height="15" fill="rgb(249,202,22)" fg:x="2350" fg:w="4"/><text x="43.8008%" y="559.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.07%)</title><rect x="43.5508%" y="533" width="0.0741%" height="15" fill="rgb(254,195,49)" fg:x="2350" fg:w="4"/><text x="43.8008%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (4 samples, 0.07%)</title><rect x="43.5508%" y="517" width="0.0741%" height="15" fill="rgb(208,123,14)" fg:x="2350" fg:w="4"/><text x="43.8008%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (4 samples, 0.07%)</title><rect x="43.5508%" y="501" width="0.0741%" height="15" fill="rgb(224,200,8)" fg:x="2350" fg:w="4"/><text x="43.8008%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.07%)</title><rect x="43.5508%" y="485" width="0.0741%" height="15" fill="rgb(217,61,36)" fg:x="2350" fg:w="4"/><text x="43.8008%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (8 samples, 0.15%)</title><rect x="44.0141%" y="533" width="0.1483%" height="15" fill="rgb(206,35,45)" fg:x="2375" fg:w="8"/><text x="44.2641%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (8 samples, 0.15%)</title><rect x="44.0141%" y="517" width="0.1483%" height="15" fill="rgb(217,65,33)" fg:x="2375" fg:w="8"/><text x="44.2641%" y="527.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (8 samples, 0.15%)</title><rect x="44.0141%" y="501" width="0.1483%" height="15" fill="rgb(222,158,48)" fg:x="2375" fg:w="8"/><text x="44.2641%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;lluvia::InstanceInternal&gt;&gt; (16 samples, 0.30%)</title><rect x="44.1623%" y="533" width="0.2965%" height="15" fill="rgb(254,2,54)" fg:x="2383" fg:w="16"/><text x="44.4123%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.30%)</title><rect x="44.1623%" y="517" width="0.2965%" height="15" fill="rgb(250,143,38)" fg:x="2383" fg:w="16"/><text x="44.4123%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (16 samples, 0.30%)</title><rect x="44.1623%" y="501" width="0.2965%" height="15" fill="rgb(248,25,0)" fg:x="2383" fg:w="16"/><text x="44.4123%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (15 samples, 0.28%)</title><rect x="44.1809%" y="485" width="0.2780%" height="15" fill="rgb(206,152,27)" fg:x="2384" fg:w="15"/><text x="44.4309%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_sub (15 samples, 0.28%)</title><rect x="44.1809%" y="469" width="0.2780%" height="15" fill="rgb(240,77,30)" fg:x="2384" fg:w="15"/><text x="44.4309%" y="479.50"></text></g><g><title>lluvia::IdTable::id_is_valid (11 samples, 0.20%)</title><rect x="44.4589%" y="533" width="0.2039%" height="15" fill="rgb(231,5,3)" fg:x="2399" fg:w="11"/><text x="44.7089%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (35 samples, 0.65%)</title><rect x="44.6998%" y="501" width="0.6486%" height="15" fill="rgb(207,226,32)" fg:x="2412" fg:w="35"/><text x="44.9498%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (35 samples, 0.65%)</title><rect x="44.6998%" y="485" width="0.6486%" height="15" fill="rgb(222,207,47)" fg:x="2412" fg:w="35"/><text x="44.9498%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (5 samples, 0.09%)</title><rect x="45.3484%" y="501" width="0.0927%" height="15" fill="rgb(229,115,45)" fg:x="2447" fg:w="5"/><text x="45.5984%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.09%)</title><rect x="45.3484%" y="485" width="0.0927%" height="15" fill="rgb(224,191,6)" fg:x="2447" fg:w="5"/><text x="45.5984%" y="495.50"></text></g><g><title>lluvia::Instance::id_is_valid (110 samples, 2.04%)</title><rect x="43.6249%" y="549" width="2.0385%" height="15" fill="rgb(230,227,24)" fg:x="2354" fg:w="110"/><text x="43.8749%" y="559.50">l..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (54 samples, 1.00%)</title><rect x="44.6627%" y="533" width="1.0007%" height="15" fill="rgb(228,80,19)" fg:x="2410" fg:w="54"/><text x="44.9127%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (54 samples, 1.00%)</title><rect x="44.6627%" y="517" width="1.0007%" height="15" fill="rgb(247,229,0)" fg:x="2410" fg:w="54"/><text x="44.9127%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::is_read_lockable (12 samples, 0.22%)</title><rect x="45.4411%" y="501" width="0.2224%" height="15" fill="rgb(237,194,15)" fg:x="2452" fg:w="12"/><text x="45.6911%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (50 samples, 0.93%)</title><rect x="45.7005%" y="517" width="0.9266%" height="15" fill="rgb(219,203,20)" fg:x="2466" fg:w="50"/><text x="45.9505%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (50 samples, 0.93%)</title><rect x="45.7005%" y="501" width="0.9266%" height="15" fill="rgb(234,128,8)" fg:x="2466" fg:w="50"/><text x="45.9505%" y="511.50"></text></g><g><title>lluvia::RawComponent&lt;T,C&gt;::get (318 samples, 5.89%)</title><rect x="41.0304%" y="565" width="5.8933%" height="15" fill="rgb(248,202,8)" fg:x="2214" fg:w="318"/><text x="41.2804%" y="575.50">lluvia:..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (68 samples, 1.26%)</title><rect x="45.6635%" y="549" width="1.2602%" height="15" fill="rgb(206,104,37)" fg:x="2464" fg:w="68"/><text x="45.9135%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (68 samples, 1.26%)</title><rect x="45.6635%" y="533" width="1.2602%" height="15" fill="rgb(223,8,27)" fg:x="2464" fg:w="68"/><text x="45.9135%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::is_read_lockable (16 samples, 0.30%)</title><rect x="46.6271%" y="517" width="0.2965%" height="15" fill="rgb(216,217,28)" fg:x="2516" fg:w="16"/><text x="46.8771%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.13%)</title><rect x="47.1275%" y="549" width="0.1297%" height="15" fill="rgb(249,199,1)" fg:x="2543" fg:w="7"/><text x="47.3775%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (7 samples, 0.13%)</title><rect x="47.1275%" y="533" width="0.1297%" height="15" fill="rgb(240,85,17)" fg:x="2543" fg:w="7"/><text x="47.3775%" y="543.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (7 samples, 0.13%)</title><rect x="47.1275%" y="517" width="0.1297%" height="15" fill="rgb(206,108,45)" fg:x="2543" fg:w="7"/><text x="47.3775%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.02%)</title><rect x="47.2572%" y="533" width="0.0185%" height="15" fill="rgb(245,210,41)" fg:x="2550" fg:w="1"/><text x="47.5072%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.02%)</title><rect x="47.2572%" y="517" width="0.0185%" height="15" fill="rgb(206,13,37)" fg:x="2550" fg:w="1"/><text x="47.5072%" y="527.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.02%)</title><rect x="47.2572%" y="501" width="0.0185%" height="15" fill="rgb(250,61,18)" fg:x="2550" fg:w="1"/><text x="47.5072%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.02%)</title><rect x="47.3499%" y="517" width="0.0185%" height="15" fill="rgb(235,172,48)" fg:x="2555" fg:w="1"/><text x="47.5999%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="47.3499%" y="501" width="0.0185%" height="15" fill="rgb(249,201,17)" fg:x="2555" fg:w="1"/><text x="47.5999%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="47.3499%" y="485" width="0.0185%" height="15" fill="rgb(219,208,6)" fg:x="2555" fg:w="1"/><text x="47.5999%" y="495.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="47.6279%" y="469" width="0.0185%" height="15" fill="rgb(248,31,23)" fg:x="2570" fg:w="1"/><text x="47.8779%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.04%)</title><rect x="47.6464%" y="469" width="0.0371%" height="15" fill="rgb(245,15,42)" fg:x="2571" fg:w="2"/><text x="47.8964%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (2 samples, 0.04%)</title><rect x="47.6835%" y="469" width="0.0371%" height="15" fill="rgb(222,217,39)" fg:x="2573" fg:w="2"/><text x="47.9335%" y="479.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="48.2950%" y="373" width="0.0185%" height="15" fill="rgb(210,219,27)" fg:x="2606" fg:w="1"/><text x="48.5450%" y="383.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="48.3136%" y="373" width="0.0185%" height="15" fill="rgb(252,166,36)" fg:x="2607" fg:w="1"/><text x="48.5636%" y="383.50"></text></g><g><title>_int_free (5 samples, 0.09%)</title><rect x="48.3321%" y="373" width="0.0927%" height="15" fill="rgb(245,132,34)" fg:x="2608" fg:w="5"/><text x="48.5821%" y="383.50"></text></g><g><title>__GI___libc_realloc (64 samples, 1.19%)</title><rect x="47.7391%" y="405" width="1.1861%" height="15" fill="rgb(236,54,3)" fg:x="2576" fg:w="64"/><text x="47.9891%" y="415.50"></text></g><g><title>_int_realloc (47 samples, 0.87%)</title><rect x="48.0541%" y="389" width="0.8710%" height="15" fill="rgb(241,173,43)" fg:x="2593" fg:w="47"/><text x="48.3041%" y="399.50"></text></g><g><title>_int_malloc (27 samples, 0.50%)</title><rect x="48.4248%" y="373" width="0.5004%" height="15" fill="rgb(215,190,9)" fg:x="2613" fg:w="27"/><text x="48.6748%" y="383.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="48.9066%" y="357" width="0.0185%" height="15" fill="rgb(242,101,16)" fg:x="2639" fg:w="1"/><text x="49.1566%" y="367.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="48.9066%" y="341" width="0.0185%" height="15" fill="rgb(223,190,21)" fg:x="2639" fg:w="1"/><text x="49.1566%" y="351.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="48.9066%" y="325" width="0.0185%" height="15" fill="rgb(215,228,25)" fg:x="2639" fg:w="1"/><text x="49.1566%" y="335.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="48.9066%" y="309" width="0.0185%" height="15" fill="rgb(225,36,22)" fg:x="2639" fg:w="1"/><text x="49.1566%" y="319.50"></text></g><g><title>run_timer_softirq (1 samples, 0.02%)</title><rect x="48.9066%" y="293" width="0.0185%" height="15" fill="rgb(251,106,46)" fg:x="2639" fg:w="1"/><text x="49.1566%" y="303.50"></text></g><g><title>call_timer_fn (1 samples, 0.02%)</title><rect x="48.9066%" y="277" width="0.0185%" height="15" fill="rgb(208,90,1)" fg:x="2639" fg:w="1"/><text x="49.1566%" y="287.50"></text></g><g><title>tcp_keepalive_timer (1 samples, 0.02%)</title><rect x="48.9066%" y="261" width="0.0185%" height="15" fill="rgb(243,10,4)" fg:x="2639" fg:w="1"/><text x="49.1566%" y="271.50"></text></g><g><title>tcp_write_wakeup (1 samples, 0.02%)</title><rect x="48.9066%" y="245" width="0.0185%" height="15" fill="rgb(212,137,27)" fg:x="2639" fg:w="1"/><text x="49.1566%" y="255.50"></text></g><g><title>tcp_xmit_probe_skb (1 samples, 0.02%)</title><rect x="48.9066%" y="229" width="0.0185%" height="15" fill="rgb(231,220,49)" fg:x="2639" fg:w="1"/><text x="49.1566%" y="239.50"></text></g><g><title>__alloc_skb (1 samples, 0.02%)</title><rect x="48.9066%" y="213" width="0.0185%" height="15" fill="rgb(237,96,20)" fg:x="2639" fg:w="1"/><text x="49.1566%" y="223.50"></text></g><g><title>__ksize (1 samples, 0.02%)</title><rect x="48.9066%" y="197" width="0.0185%" height="15" fill="rgb(239,229,30)" fg:x="2639" fg:w="1"/><text x="49.1566%" y="207.50"></text></g><g><title>__rdl_realloc (1 samples, 0.02%)</title><rect x="48.9251%" y="405" width="0.0185%" height="15" fill="rgb(219,65,33)" fg:x="2640" fg:w="1"/><text x="49.1751%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (67 samples, 1.24%)</title><rect x="47.7205%" y="453" width="1.2417%" height="15" fill="rgb(243,134,7)" fg:x="2575" fg:w="67"/><text x="47.9705%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (67 samples, 1.24%)</title><rect x="47.7205%" y="437" width="1.2417%" height="15" fill="rgb(216,177,54)" fg:x="2575" fg:w="67"/><text x="47.9705%" y="447.50"></text></g><g><title>alloc::alloc::realloc (66 samples, 1.22%)</title><rect x="47.7391%" y="421" width="1.2231%" height="15" fill="rgb(211,160,20)" fg:x="2576" fg:w="66"/><text x="47.9891%" y="431.50"></text></g><g><title>__rust_realloc (1 samples, 0.02%)</title><rect x="48.9437%" y="405" width="0.0185%" height="15" fill="rgb(239,85,39)" fg:x="2641" fg:w="1"/><text x="49.1937%" y="415.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.07%)</title><rect x="48.9622%" y="453" width="0.0741%" height="15" fill="rgb(232,125,22)" fg:x="2642" fg:w="4"/><text x="49.2122%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (72 samples, 1.33%)</title><rect x="47.7205%" y="469" width="1.3343%" height="15" fill="rgb(244,57,34)" fg:x="2575" fg:w="72"/><text x="47.9705%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="49.0363%" y="453" width="0.0185%" height="15" fill="rgb(214,203,32)" fg:x="2646" fg:w="1"/><text x="49.2863%" y="463.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="49.0549%" y="469" width="0.0185%" height="15" fill="rgb(207,58,43)" fg:x="2647" fg:w="1"/><text x="49.3049%" y="479.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.02%)</title><rect x="49.0549%" y="453" width="0.0185%" height="15" fill="rgb(215,193,15)" fg:x="2647" fg:w="1"/><text x="49.3049%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (82 samples, 1.52%)</title><rect x="47.6279%" y="501" width="1.5196%" height="15" fill="rgb(232,15,44)" fg:x="2570" fg:w="82"/><text x="47.8779%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (82 samples, 1.52%)</title><rect x="47.6279%" y="485" width="1.5196%" height="15" fill="rgb(212,3,48)" fg:x="2570" fg:w="82"/><text x="47.8779%" y="495.50"></text></g><g><title>core::cmp::max (4 samples, 0.07%)</title><rect x="49.0734%" y="469" width="0.0741%" height="15" fill="rgb(218,128,7)" fg:x="2648" fg:w="4"/><text x="49.3234%" y="479.50"></text></g><g><title>core::cmp::Ord::max (4 samples, 0.07%)</title><rect x="49.0734%" y="453" width="0.0741%" height="15" fill="rgb(226,216,39)" fg:x="2648" fg:w="4"/><text x="49.3234%" y="463.50"></text></g><g><title>core::cmp::max_by (4 samples, 0.07%)</title><rect x="49.0734%" y="437" width="0.0741%" height="15" fill="rgb(243,47,51)" fg:x="2648" fg:w="4"/><text x="49.3234%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (6 samples, 0.11%)</title><rect x="49.1475%" y="501" width="0.1112%" height="15" fill="rgb(241,183,40)" fg:x="2652" fg:w="6"/><text x="49.3975%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (129 samples, 2.39%)</title><rect x="47.3684%" y="517" width="2.3907%" height="15" fill="rgb(231,217,32)" fg:x="2556" fg:w="129"/><text x="47.6184%" y="527.50">al..</text></g><g><title>core::ptr::write (27 samples, 0.50%)</title><rect x="49.2587%" y="501" width="0.5004%" height="15" fill="rgb(229,61,38)" fg:x="2658" fg:w="27"/><text x="49.5087%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.13%)</title><rect x="49.7961%" y="421" width="0.1297%" height="15" fill="rgb(225,210,5)" fg:x="2687" fg:w="7"/><text x="50.0461%" y="431.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.09%)</title><rect x="49.8332%" y="405" width="0.0927%" height="15" fill="rgb(231,79,45)" fg:x="2689" fg:w="5"/><text x="50.0832%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (13 samples, 0.24%)</title><rect x="49.7591%" y="517" width="0.2409%" height="15" fill="rgb(224,100,7)" fg:x="2685" fg:w="13"/><text x="50.0091%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (12 samples, 0.22%)</title><rect x="49.7776%" y="501" width="0.2224%" height="15" fill="rgb(241,198,18)" fg:x="2686" fg:w="12"/><text x="50.0276%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (12 samples, 0.22%)</title><rect x="49.7776%" y="485" width="0.2224%" height="15" fill="rgb(252,97,53)" fg:x="2686" fg:w="12"/><text x="50.0276%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 0.22%)</title><rect x="49.7776%" y="469" width="0.2224%" height="15" fill="rgb(220,88,7)" fg:x="2686" fg:w="12"/><text x="50.0276%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.20%)</title><rect x="49.7961%" y="453" width="0.2039%" height="15" fill="rgb(213,176,14)" fg:x="2687" fg:w="11"/><text x="50.0461%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.20%)</title><rect x="49.7961%" y="437" width="0.2039%" height="15" fill="rgb(246,73,7)" fg:x="2687" fg:w="11"/><text x="50.0461%" y="447.50"></text></g><g><title>core::cmp::max (4 samples, 0.07%)</title><rect x="49.9259%" y="421" width="0.0741%" height="15" fill="rgb(245,64,36)" fg:x="2694" fg:w="4"/><text x="50.1759%" y="431.50"></text></g><g><title>core::cmp::Ord::max (4 samples, 0.07%)</title><rect x="49.9259%" y="405" width="0.0741%" height="15" fill="rgb(245,80,10)" fg:x="2694" fg:w="4"/><text x="50.1759%" y="415.50"></text></g><g><title>core::cmp::max_by (4 samples, 0.07%)</title><rect x="49.9259%" y="389" width="0.0741%" height="15" fill="rgb(232,107,50)" fg:x="2694" fg:w="4"/><text x="50.1759%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.07%)</title><rect x="50.0000%" y="517" width="0.0741%" height="15" fill="rgb(253,3,0)" fg:x="2698" fg:w="4"/><text x="50.2500%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.07%)</title><rect x="50.0000%" y="501" width="0.0741%" height="15" fill="rgb(212,99,53)" fg:x="2698" fg:w="4"/><text x="50.2500%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (4 samples, 0.07%)</title><rect x="50.0000%" y="485" width="0.0741%" height="15" fill="rgb(249,111,54)" fg:x="2698" fg:w="4"/><text x="50.2500%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (1 samples, 0.02%)</title><rect x="50.0741%" y="517" width="0.0185%" height="15" fill="rgb(249,55,30)" fg:x="2702" fg:w="1"/><text x="50.3241%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.02%)</title><rect x="50.0741%" y="501" width="0.0185%" height="15" fill="rgb(237,47,42)" fg:x="2702" fg:w="1"/><text x="50.3241%" y="511.50"></text></g><g><title>lluvia::VecContainer&lt;T&gt;::ensure_space_for_id (162 samples, 3.00%)</title><rect x="47.2758%" y="533" width="3.0022%" height="15" fill="rgb(211,20,18)" fg:x="2551" fg:w="162"/><text x="47.5258%" y="543.50">llu..</text></g><g><title>lluvia::VecContainer&lt;T&gt;::get_indices (10 samples, 0.19%)</title><rect x="50.0927%" y="517" width="0.1853%" height="15" fill="rgb(231,203,46)" fg:x="2703" fg:w="10"/><text x="50.3427%" y="527.50"></text></g><g><title>&lt;lluvia::VecContainer&lt;T&gt; as lluvia::Container&lt;T&gt;&gt;::set (174 samples, 3.22%)</title><rect x="47.2572%" y="549" width="3.2246%" height="15" fill="rgb(237,142,3)" fg:x="2550" fg:w="174"/><text x="47.5072%" y="559.50">&lt;ll..</text></g><g><title>lluvia::VecContainer&lt;T&gt;::get_indices (11 samples, 0.20%)</title><rect x="50.2780%" y="533" width="0.2039%" height="15" fill="rgb(241,107,1)" fg:x="2713" fg:w="11"/><text x="50.5280%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;lluvia::TableInternal&lt;&amp;str,lluvia::VecContainer&lt;&amp;str&gt;&gt;&gt;&gt; (3 samples, 0.06%)</title><rect x="50.4818%" y="549" width="0.0556%" height="15" fill="rgb(229,83,13)" fg:x="2724" fg:w="3"/><text x="50.7318%" y="559.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="50.4818%" y="533" width="0.0556%" height="15" fill="rgb(241,91,40)" fg:x="2724" fg:w="3"/><text x="50.7318%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_unlock (3 samples, 0.06%)</title><rect x="50.4818%" y="517" width="0.0556%" height="15" fill="rgb(225,3,45)" fg:x="2724" fg:w="3"/><text x="50.7318%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (3 samples, 0.06%)</title><rect x="50.4818%" y="501" width="0.0556%" height="15" fill="rgb(244,223,14)" fg:x="2724" fg:w="3"/><text x="50.7318%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.06%)</title><rect x="50.4818%" y="485" width="0.0556%" height="15" fill="rgb(224,124,37)" fg:x="2724" fg:w="3"/><text x="50.7318%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="50.5374%" y="533" width="0.0185%" height="15" fill="rgb(251,171,30)" fg:x="2727" fg:w="1"/><text x="50.7874%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.02%)</title><rect x="50.5374%" y="517" width="0.0185%" height="15" fill="rgb(236,46,54)" fg:x="2727" fg:w="1"/><text x="50.7874%" y="527.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="50.5374%" y="501" width="0.0185%" height="15" fill="rgb(245,213,5)" fg:x="2727" fg:w="1"/><text x="50.7874%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;lluvia::InstanceInternal&gt;&gt; (3 samples, 0.06%)</title><rect x="50.5560%" y="533" width="0.0556%" height="15" fill="rgb(230,144,27)" fg:x="2728" fg:w="3"/><text x="50.8060%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="50.5560%" y="517" width="0.0556%" height="15" fill="rgb(220,86,6)" fg:x="2728" fg:w="3"/><text x="50.8060%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (3 samples, 0.06%)</title><rect x="50.5560%" y="501" width="0.0556%" height="15" fill="rgb(240,20,13)" fg:x="2728" fg:w="3"/><text x="50.8060%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (3 samples, 0.06%)</title><rect x="50.5560%" y="485" width="0.0556%" height="15" fill="rgb(217,89,34)" fg:x="2728" fg:w="3"/><text x="50.8060%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.06%)</title><rect x="50.5560%" y="469" width="0.0556%" height="15" fill="rgb(229,13,5)" fg:x="2728" fg:w="3"/><text x="50.8060%" y="479.50"></text></g><g><title>lluvia::IdTable::id_is_valid (3 samples, 0.06%)</title><rect x="50.6116%" y="533" width="0.0556%" height="15" fill="rgb(244,67,35)" fg:x="2731" fg:w="3"/><text x="50.8616%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (1 samples, 0.02%)</title><rect x="50.6672%" y="501" width="0.0185%" height="15" fill="rgb(221,40,2)" fg:x="2734" fg:w="1"/><text x="50.9172%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.02%)</title><rect x="50.6672%" y="485" width="0.0185%" height="15" fill="rgb(237,157,21)" fg:x="2734" fg:w="1"/><text x="50.9172%" y="495.50"></text></g><g><title>lluvia::Instance::id_is_valid (11 samples, 0.20%)</title><rect x="50.5374%" y="549" width="0.2039%" height="15" fill="rgb(222,94,11)" fg:x="2727" fg:w="11"/><text x="50.7874%" y="559.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (4 samples, 0.07%)</title><rect x="50.6672%" y="533" width="0.0741%" height="15" fill="rgb(249,113,6)" fg:x="2734" fg:w="4"/><text x="50.9172%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (4 samples, 0.07%)</title><rect x="50.6672%" y="517" width="0.0741%" height="15" fill="rgb(238,137,36)" fg:x="2734" fg:w="4"/><text x="50.9172%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (3 samples, 0.06%)</title><rect x="50.6857%" y="501" width="0.0556%" height="15" fill="rgb(210,102,26)" fg:x="2735" fg:w="3"/><text x="50.9357%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.06%)</title><rect x="50.6857%" y="485" width="0.0556%" height="15" fill="rgb(218,30,30)" fg:x="2735" fg:w="3"/><text x="50.9357%" y="495.50"></text></g><g><title>lluvia::RawComponent&lt;T,C&gt;::set (216 samples, 4.00%)</title><rect x="46.9236%" y="565" width="4.0030%" height="15" fill="rgb(214,67,26)" fg:x="2532" fg:w="216"/><text x="47.1736%" y="575.50">lluv..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (10 samples, 0.19%)</title><rect x="50.7413%" y="549" width="0.1853%" height="15" fill="rgb(251,9,53)" fg:x="2738" fg:w="10"/><text x="50.9913%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write (10 samples, 0.19%)</title><rect x="50.7413%" y="533" width="0.1853%" height="15" fill="rgb(228,204,25)" fg:x="2738" fg:w="10"/><text x="50.9913%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (10 samples, 0.19%)</title><rect x="50.7413%" y="517" width="0.1853%" height="15" fill="rgb(207,153,8)" fg:x="2738" fg:w="10"/><text x="50.9913%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (10 samples, 0.19%)</title><rect x="50.7413%" y="501" width="0.1853%" height="15" fill="rgb(242,9,16)" fg:x="2738" fg:w="10"/><text x="50.9913%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.17%)</title><rect x="50.9266%" y="533" width="0.1668%" height="15" fill="rgb(217,211,10)" fg:x="2748" fg:w="9"/><text x="51.1766%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (9 samples, 0.17%)</title><rect x="50.9266%" y="517" width="0.1668%" height="15" fill="rgb(219,228,52)" fg:x="2748" fg:w="9"/><text x="51.1766%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_add (9 samples, 0.17%)</title><rect x="50.9266%" y="501" width="0.1668%" height="15" fill="rgb(231,92,29)" fg:x="2748" fg:w="9"/><text x="51.1766%" y="511.50"></text></g><g><title>&lt;lluvia::Instance as core::clone::Clone&gt;::clone (5 samples, 0.09%)</title><rect x="51.0934%" y="533" width="0.0927%" height="15" fill="rgb(232,8,23)" fg:x="2757" fg:w="5"/><text x="51.3434%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.09%)</title><rect x="51.0934%" y="517" width="0.0927%" height="15" fill="rgb(216,211,34)" fg:x="2757" fg:w="5"/><text x="51.3434%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (5 samples, 0.09%)</title><rect x="51.0934%" y="501" width="0.0927%" height="15" fill="rgb(236,151,0)" fg:x="2757" fg:w="5"/><text x="51.3434%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_add (5 samples, 0.09%)</title><rect x="51.0934%" y="485" width="0.0927%" height="15" fill="rgb(209,168,3)" fg:x="2757" fg:w="5"/><text x="51.3434%" y="495.50"></text></g><g><title>&lt;lluvia::RawComponent&lt;T,C&gt; as core::clone::Clone&gt;::clone (20 samples, 0.37%)</title><rect x="50.9266%" y="549" width="0.3706%" height="15" fill="rgb(208,129,28)" fg:x="2748" fg:w="20"/><text x="51.1766%" y="559.50"></text></g><g><title>&lt;lluvia::Table&lt;T,C&gt; as core::clone::Clone&gt;::clone (6 samples, 0.11%)</title><rect x="51.1861%" y="533" width="0.1112%" height="15" fill="rgb(229,78,22)" fg:x="2762" fg:w="6"/><text x="51.4361%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.11%)</title><rect x="51.1861%" y="517" width="0.1112%" height="15" fill="rgb(228,187,13)" fg:x="2762" fg:w="6"/><text x="51.4361%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (6 samples, 0.11%)</title><rect x="51.1861%" y="501" width="0.1112%" height="15" fill="rgb(240,119,24)" fg:x="2762" fg:w="6"/><text x="51.4361%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_add (6 samples, 0.11%)</title><rect x="51.1861%" y="485" width="0.1112%" height="15" fill="rgb(209,194,42)" fg:x="2762" fg:w="6"/><text x="51.4361%" y="495.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (13 samples, 0.24%)</title><rect x="51.2973%" y="549" width="0.2409%" height="15" fill="rgb(247,200,46)" fg:x="2768" fg:w="13"/><text x="51.5473%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.22%)</title><rect x="51.3158%" y="533" width="0.2224%" height="15" fill="rgb(218,76,16)" fg:x="2769" fg:w="12"/><text x="51.5658%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.22%)</title><rect x="51.3158%" y="517" width="0.2224%" height="15" fill="rgb(225,21,48)" fg:x="2769" fg:w="12"/><text x="51.5658%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.22%)</title><rect x="51.3158%" y="501" width="0.2224%" height="15" fill="rgb(239,223,50)" fg:x="2769" fg:w="12"/><text x="51.5658%" y="511.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.22%)</title><rect x="51.3158%" y="485" width="0.2224%" height="15" fill="rgb(244,45,21)" fg:x="2769" fg:w="12"/><text x="51.5658%" y="495.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.20%)</title><rect x="51.3343%" y="469" width="0.2039%" height="15" fill="rgb(232,33,43)" fg:x="2770" fg:w="11"/><text x="51.5843%" y="479.50"></text></g><g><title>&lt;lluvia::Instance as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="51.6308%" y="533" width="0.0371%" height="15" fill="rgb(209,8,3)" fg:x="2786" fg:w="2"/><text x="51.8808%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="51.6308%" y="517" width="0.0371%" height="15" fill="rgb(214,25,53)" fg:x="2786" fg:w="2"/><text x="51.8808%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.04%)</title><rect x="51.6308%" y="501" width="0.0371%" height="15" fill="rgb(254,186,54)" fg:x="2786" fg:w="2"/><text x="51.8808%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.04%)</title><rect x="51.6308%" y="485" width="0.0371%" height="15" fill="rgb(208,174,49)" fg:x="2786" fg:w="2"/><text x="51.8808%" y="495.50"></text></g><g><title>__GI___libc_malloc (25 samples, 0.46%)</title><rect x="51.7791%" y="437" width="0.4633%" height="15" fill="rgb(233,191,51)" fg:x="2794" fg:w="25"/><text x="52.0291%" y="447.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (33 samples, 0.61%)</title><rect x="51.6679%" y="533" width="0.6116%" height="15" fill="rgb(222,134,10)" fg:x="2788" fg:w="33"/><text x="51.9179%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (33 samples, 0.61%)</title><rect x="51.6679%" y="517" width="0.6116%" height="15" fill="rgb(230,226,20)" fg:x="2788" fg:w="33"/><text x="51.9179%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (32 samples, 0.59%)</title><rect x="51.6864%" y="501" width="0.5930%" height="15" fill="rgb(251,111,25)" fg:x="2789" fg:w="32"/><text x="51.9364%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (29 samples, 0.54%)</title><rect x="51.7420%" y="485" width="0.5374%" height="15" fill="rgb(224,40,46)" fg:x="2792" fg:w="29"/><text x="51.9920%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (29 samples, 0.54%)</title><rect x="51.7420%" y="469" width="0.5374%" height="15" fill="rgb(236,108,47)" fg:x="2792" fg:w="29"/><text x="51.9920%" y="479.50"></text></g><g><title>alloc::alloc::alloc (29 samples, 0.54%)</title><rect x="51.7420%" y="453" width="0.5374%" height="15" fill="rgb(234,93,0)" fg:x="2792" fg:w="29"/><text x="51.9920%" y="463.50"></text></g><g><title>__rust_alloc (2 samples, 0.04%)</title><rect x="52.2424%" y="437" width="0.0371%" height="15" fill="rgb(224,213,32)" fg:x="2819" fg:w="2"/><text x="52.4924%" y="447.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.09%)</title><rect x="52.3351%" y="421" width="0.0927%" height="15" fill="rgb(251,11,48)" fg:x="2824" fg:w="5"/><text x="52.5851%" y="431.50"></text></g><g><title>lluvia::RawComponent&lt;T,lluvia::VecContainer&lt;T&gt;&gt;::snapshot (82 samples, 1.52%)</title><rect x="50.9266%" y="565" width="1.5196%" height="15" fill="rgb(236,173,5)" fg:x="2748" fg:w="82"/><text x="51.1766%" y="575.50"></text></g><g><title>lluvia::Snapshot&lt;T&gt;::new (49 samples, 0.91%)</title><rect x="51.5382%" y="549" width="0.9081%" height="15" fill="rgb(230,95,12)" fg:x="2781" fg:w="49"/><text x="51.7882%" y="559.50"></text></g><g><title>lluvia::Table&lt;T,C&gt;::new (9 samples, 0.17%)</title><rect x="52.2795%" y="533" width="0.1668%" height="15" fill="rgb(232,209,1)" fg:x="2821" fg:w="9"/><text x="52.5295%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (9 samples, 0.17%)</title><rect x="52.2795%" y="517" width="0.1668%" height="15" fill="rgb(232,6,1)" fg:x="2821" fg:w="9"/><text x="52.5295%" y="527.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (9 samples, 0.17%)</title><rect x="52.2795%" y="501" width="0.1668%" height="15" fill="rgb(210,224,50)" fg:x="2821" fg:w="9"/><text x="52.5295%" y="511.50"></text></g><g><title>alloc::alloc::exchange_malloc (9 samples, 0.17%)</title><rect x="52.2795%" y="485" width="0.1668%" height="15" fill="rgb(228,127,35)" fg:x="2821" fg:w="9"/><text x="52.5295%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.11%)</title><rect x="52.3351%" y="469" width="0.1112%" height="15" fill="rgb(245,102,45)" fg:x="2824" fg:w="6"/><text x="52.5851%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.11%)</title><rect x="52.3351%" y="453" width="0.1112%" height="15" fill="rgb(214,1,49)" fg:x="2824" fg:w="6"/><text x="52.5851%" y="463.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.11%)</title><rect x="52.3351%" y="437" width="0.1112%" height="15" fill="rgb(226,163,40)" fg:x="2824" fg:w="6"/><text x="52.5851%" y="447.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="52.4277%" y="421" width="0.0185%" height="15" fill="rgb(239,212,28)" fg:x="2829" fg:w="1"/><text x="52.6777%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.04%)</title><rect x="54.2254%" y="533" width="0.0371%" height="15" fill="rgb(220,20,13)" fg:x="2926" fg:w="2"/><text x="54.4754%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (2 samples, 0.04%)</title><rect x="54.2254%" y="517" width="0.0371%" height="15" fill="rgb(210,164,35)" fg:x="2926" fg:w="2"/><text x="54.4754%" y="527.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.04%)</title><rect x="54.2254%" y="501" width="0.0371%" height="15" fill="rgb(248,109,41)" fg:x="2926" fg:w="2"/><text x="54.4754%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (13 samples, 0.24%)</title><rect x="54.8925%" y="517" width="0.2409%" height="15" fill="rgb(238,23,50)" fg:x="2962" fg:w="13"/><text x="55.1425%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (13 samples, 0.24%)</title><rect x="54.8925%" y="501" width="0.2409%" height="15" fill="rgb(211,48,49)" fg:x="2962" fg:w="13"/><text x="55.1425%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (13 samples, 0.24%)</title><rect x="54.8925%" y="485" width="0.2409%" height="15" fill="rgb(223,36,21)" fg:x="2962" fg:w="13"/><text x="55.1425%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (6 samples, 0.11%)</title><rect x="55.1334%" y="517" width="0.1112%" height="15" fill="rgb(207,123,46)" fg:x="2975" fg:w="6"/><text x="55.3834%" y="527.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (2 samples, 0.04%)</title><rect x="55.2446%" y="485" width="0.0371%" height="15" fill="rgb(240,218,32)" fg:x="2981" fg:w="2"/><text x="55.4946%" y="495.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (2 samples, 0.04%)</title><rect x="55.2446%" y="469" width="0.0371%" height="15" fill="rgb(252,5,43)" fg:x="2981" fg:w="2"/><text x="55.4946%" y="479.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.06%)</title><rect x="55.2446%" y="517" width="0.0556%" height="15" fill="rgb(252,84,19)" fg:x="2981" fg:w="3"/><text x="55.4946%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.06%)</title><rect x="55.2446%" y="501" width="0.0556%" height="15" fill="rgb(243,152,39)" fg:x="2981" fg:w="3"/><text x="55.4946%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.02%)</title><rect x="55.2817%" y="485" width="0.0185%" height="15" fill="rgb(234,160,15)" fg:x="2983" fg:w="1"/><text x="55.5317%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (14 samples, 0.26%)</title><rect x="55.3002%" y="517" width="0.2595%" height="15" fill="rgb(237,34,20)" fg:x="2984" fg:w="14"/><text x="55.5502%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (2 samples, 0.04%)</title><rect x="55.5597%" y="517" width="0.0371%" height="15" fill="rgb(229,97,13)" fg:x="2998" fg:w="2"/><text x="55.8097%" y="527.50"></text></g><g><title>lluvia::VecContainer&lt;T&gt;::get_indices (36 samples, 0.67%)</title><rect x="55.5967%" y="517" width="0.6672%" height="15" fill="rgb(234,71,50)" fg:x="3000" fg:w="36"/><text x="55.8467%" y="527.50"></text></g><g><title>&lt;lluvia::VecContainer&lt;T&gt; as lluvia::Container&lt;T&gt;&gt;::get_next_id (116 samples, 2.15%)</title><rect x="54.2624%" y="533" width="2.1497%" height="15" fill="rgb(253,155,4)" fg:x="2928" fg:w="116"/><text x="54.5124%" y="543.50">&lt;..</text></g><g><title>lluvia::VecContainer&lt;T&gt;::make_index (8 samples, 0.15%)</title><rect x="56.2639%" y="517" width="0.1483%" height="15" fill="rgb(222,185,37)" fg:x="3036" fg:w="8"/><text x="56.5139%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.04%)</title><rect x="56.5789%" y="517" width="0.0371%" height="15" fill="rgb(251,177,13)" fg:x="3053" fg:w="2"/><text x="56.8289%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (4 samples, 0.07%)</title><rect x="56.6160%" y="517" width="0.0741%" height="15" fill="rgb(250,179,40)" fg:x="3055" fg:w="4"/><text x="56.8660%" y="527.50"></text></g><g><title>&lt;lluvia::VecContainer&lt;T&gt; as lluvia::Container&lt;T&gt;&gt;::index (22 samples, 0.41%)</title><rect x="56.4122%" y="533" width="0.4077%" height="15" fill="rgb(242,44,2)" fg:x="3044" fg:w="22"/><text x="56.6622%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (7 samples, 0.13%)</title><rect x="56.6901%" y="517" width="0.1297%" height="15" fill="rgb(216,177,13)" fg:x="3059" fg:w="7"/><text x="56.9401%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (7 samples, 0.13%)</title><rect x="56.6901%" y="501" width="0.1297%" height="15" fill="rgb(216,106,43)" fg:x="3059" fg:w="7"/><text x="56.9401%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (3 samples, 0.06%)</title><rect x="56.8199%" y="533" width="0.0556%" height="15" fill="rgb(216,183,2)" fg:x="3066" fg:w="3"/><text x="57.0699%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (3 samples, 0.06%)</title><rect x="56.8199%" y="517" width="0.0556%" height="15" fill="rgb(249,75,3)" fg:x="3066" fg:w="3"/><text x="57.0699%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;lluvia::TableInternal&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;,lluvia::VecContainer&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt;&gt; (9 samples, 0.17%)</title><rect x="56.8755%" y="533" width="0.1668%" height="15" fill="rgb(219,67,39)" fg:x="3069" fg:w="9"/><text x="57.1255%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.17%)</title><rect x="56.8755%" y="517" width="0.1668%" height="15" fill="rgb(253,228,2)" fg:x="3069" fg:w="9"/><text x="57.1255%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (9 samples, 0.17%)</title><rect x="56.8755%" y="501" width="0.1668%" height="15" fill="rgb(235,138,27)" fg:x="3069" fg:w="9"/><text x="57.1255%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (8 samples, 0.15%)</title><rect x="56.8940%" y="485" width="0.1483%" height="15" fill="rgb(236,97,51)" fg:x="3070" fg:w="8"/><text x="57.1440%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_sub (8 samples, 0.15%)</title><rect x="56.8940%" y="469" width="0.1483%" height="15" fill="rgb(240,80,30)" fg:x="3070" fg:w="8"/><text x="57.1440%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (30 samples, 0.56%)</title><rect x="57.0793%" y="501" width="0.5560%" height="15" fill="rgb(230,178,19)" fg:x="3080" fg:w="30"/><text x="57.3293%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (30 samples, 0.56%)</title><rect x="57.0793%" y="485" width="0.5560%" height="15" fill="rgb(210,190,27)" fg:x="3080" fg:w="30"/><text x="57.3293%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (16 samples, 0.30%)</title><rect x="57.6353%" y="501" width="0.2965%" height="15" fill="rgb(222,107,31)" fg:x="3110" fg:w="16"/><text x="57.8853%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (16 samples, 0.30%)</title><rect x="57.6353%" y="485" width="0.2965%" height="15" fill="rgb(216,127,34)" fg:x="3110" fg:w="16"/><text x="57.8853%" y="495.50"></text></g><g><title>&lt;lluvia::ComponentIterator&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (240 samples, 4.45%)</title><rect x="53.7064%" y="549" width="4.4477%" height="15" fill="rgb(234,116,52)" fg:x="2898" fg:w="240"/><text x="53.9564%" y="559.50">&lt;lluv..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (60 samples, 1.11%)</title><rect x="57.0423%" y="533" width="1.1119%" height="15" fill="rgb(222,124,15)" fg:x="3078" fg:w="60"/><text x="57.2923%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (60 samples, 1.11%)</title><rect x="57.0423%" y="517" width="1.1119%" height="15" fill="rgb(231,179,28)" fg:x="3078" fg:w="60"/><text x="57.2923%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::is_read_lockable (12 samples, 0.22%)</title><rect x="57.9318%" y="501" width="0.2224%" height="15" fill="rgb(226,93,45)" fg:x="3126" fg:w="12"/><text x="58.1818%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (6 samples, 0.11%)</title><rect x="58.5063%" y="517" width="0.1112%" height="15" fill="rgb(215,8,51)" fg:x="3157" fg:w="6"/><text x="58.7563%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="58.5990%" y="501" width="0.0185%" height="15" fill="rgb(223,106,5)" fg:x="3162" fg:w="1"/><text x="58.8490%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="58.5990%" y="485" width="0.0185%" height="15" fill="rgb(250,191,5)" fg:x="3162" fg:w="1"/><text x="58.8490%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (13 samples, 0.24%)</title><rect x="58.6175%" y="517" width="0.2409%" height="15" fill="rgb(242,132,44)" fg:x="3163" fg:w="13"/><text x="58.8675%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (16 samples, 0.30%)</title><rect x="58.8584%" y="517" width="0.2965%" height="15" fill="rgb(251,152,29)" fg:x="3176" fg:w="16"/><text x="59.1084%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (16 samples, 0.30%)</title><rect x="58.8584%" y="501" width="0.2965%" height="15" fill="rgb(218,179,5)" fg:x="3176" fg:w="16"/><text x="59.1084%" y="511.50"></text></g><g><title>&lt;lluvia::VecContainer&lt;T&gt; as lluvia::Container&lt;T&gt;&gt;::index (79 samples, 1.46%)</title><rect x="58.3210%" y="533" width="1.4640%" height="15" fill="rgb(227,67,19)" fg:x="3147" fg:w="79"/><text x="58.5710%" y="543.50"></text></g><g><title>lluvia::VecContainer&lt;T&gt;::get_indices (34 samples, 0.63%)</title><rect x="59.1549%" y="517" width="0.6301%" height="15" fill="rgb(233,119,31)" fg:x="3192" fg:w="34"/><text x="59.4049%" y="527.50"></text></g><g><title>&lt;lluvia::TableRef&lt;T,C&gt; as core::ops::deref::Deref&gt;::deref (89 samples, 1.65%)</title><rect x="58.1542%" y="549" width="1.6494%" height="15" fill="rgb(241,120,22)" fg:x="3138" fg:w="89"/><text x="58.4042%" y="559.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="59.7850%" y="533" width="0.0185%" height="15" fill="rgb(224,102,30)" fg:x="3226" fg:w="1"/><text x="60.0350%" y="543.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="59.7850%" y="517" width="0.0185%" height="15" fill="rgb(210,164,37)" fg:x="3226" fg:w="1"/><text x="60.0350%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::TableRefEntityType&gt; (3 samples, 0.06%)</title><rect x="59.8036%" y="517" width="0.0556%" height="15" fill="rgb(226,191,16)" fg:x="3227" fg:w="3"/><text x="60.0536%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;lluvia::TableRef&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;,lluvia::VecContainer&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt;&gt; (12 samples, 0.22%)</title><rect x="59.8036%" y="549" width="0.2224%" height="15" fill="rgb(214,40,45)" fg:x="3227" fg:w="12"/><text x="60.0536%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::TableRef&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;,lluvia::VecContainer&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt; (12 samples, 0.22%)</title><rect x="59.8036%" y="533" width="0.2224%" height="15" fill="rgb(244,29,26)" fg:x="3227" fg:w="12"/><text x="60.0536%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;lluvia::TableInternal&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;,lluvia::VecContainer&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt;&gt; (9 samples, 0.17%)</title><rect x="59.8592%" y="517" width="0.1668%" height="15" fill="rgb(216,16,5)" fg:x="3230" fg:w="9"/><text x="60.1092%" y="527.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.17%)</title><rect x="59.8592%" y="501" width="0.1668%" height="15" fill="rgb(249,76,35)" fg:x="3230" fg:w="9"/><text x="60.1092%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (7 samples, 0.13%)</title><rect x="59.8962%" y="485" width="0.1297%" height="15" fill="rgb(207,11,44)" fg:x="3232" fg:w="7"/><text x="60.1462%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (7 samples, 0.13%)</title><rect x="59.8962%" y="469" width="0.1297%" height="15" fill="rgb(228,190,49)" fg:x="3232" fg:w="7"/><text x="60.1462%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (7 samples, 0.13%)</title><rect x="59.8962%" y="453" width="0.1297%" height="15" fill="rgb(214,173,12)" fg:x="3232" fg:w="7"/><text x="60.1462%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.11%)</title><rect x="60.4893%" y="533" width="0.1112%" height="15" fill="rgb(218,26,35)" fg:x="3264" fg:w="6"/><text x="60.7393%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (6 samples, 0.11%)</title><rect x="60.4893%" y="517" width="0.1112%" height="15" fill="rgb(220,200,19)" fg:x="3264" fg:w="6"/><text x="60.7393%" y="527.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (6 samples, 0.11%)</title><rect x="60.4893%" y="501" width="0.1112%" height="15" fill="rgb(239,95,49)" fg:x="3264" fg:w="6"/><text x="60.7393%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (7 samples, 0.13%)</title><rect x="60.7487%" y="517" width="0.1297%" height="15" fill="rgb(235,85,53)" fg:x="3278" fg:w="7"/><text x="60.9987%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (7 samples, 0.13%)</title><rect x="60.7487%" y="501" width="0.1297%" height="15" fill="rgb(233,133,31)" fg:x="3278" fg:w="7"/><text x="60.9987%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (7 samples, 0.13%)</title><rect x="60.7487%" y="485" width="0.1297%" height="15" fill="rgb(218,25,20)" fg:x="3278" fg:w="7"/><text x="60.9987%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (9 samples, 0.17%)</title><rect x="60.8784%" y="501" width="0.1668%" height="15" fill="rgb(252,210,38)" fg:x="3285" fg:w="9"/><text x="61.1284%" y="511.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (9 samples, 0.17%)</title><rect x="60.8784%" y="485" width="0.1668%" height="15" fill="rgb(242,134,21)" fg:x="3285" fg:w="9"/><text x="61.1284%" y="495.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (9 samples, 0.17%)</title><rect x="60.8784%" y="469" width="0.1668%" height="15" fill="rgb(213,28,48)" fg:x="3285" fg:w="9"/><text x="61.1284%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (4 samples, 0.07%)</title><rect x="61.0452%" y="501" width="0.0741%" height="15" fill="rgb(250,196,2)" fg:x="3294" fg:w="4"/><text x="61.2952%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (4 samples, 0.07%)</title><rect x="61.0452%" y="485" width="0.0741%" height="15" fill="rgb(227,5,17)" fg:x="3294" fg:w="4"/><text x="61.2952%" y="495.50"></text></g><g><title>lluvia::VecContainer&lt;T&gt;::ensure_space_for_id (35 samples, 0.65%)</title><rect x="60.8784%" y="517" width="0.6486%" height="15" fill="rgb(221,226,24)" fg:x="3285" fg:w="35"/><text x="61.1284%" y="527.50"></text></g><g><title>lluvia::VecContainer&lt;T&gt;::get_indices (22 samples, 0.41%)</title><rect x="61.1193%" y="501" width="0.4077%" height="15" fill="rgb(211,5,48)" fg:x="3298" fg:w="22"/><text x="61.3693%" y="511.50"></text></g><g><title>&lt;lluvia::VecContainer&lt;T&gt; as lluvia::Container&lt;T&gt;&gt;::set (84 samples, 1.56%)</title><rect x="60.6004%" y="533" width="1.5567%" height="15" fill="rgb(219,150,6)" fg:x="3270" fg:w="84"/><text x="60.8504%" y="543.50"></text></g><g><title>lluvia::VecContainer&lt;T&gt;::get_indices (34 samples, 0.63%)</title><rect x="61.5271%" y="517" width="0.6301%" height="15" fill="rgb(251,46,16)" fg:x="3320" fg:w="34"/><text x="61.7771%" y="527.50"></text></g><g><title>std::sync::poison::Flag::done (3 samples, 0.06%)</title><rect x="62.2498%" y="501" width="0.0556%" height="15" fill="rgb(220,204,40)" fg:x="3359" fg:w="3"/><text x="62.4998%" y="511.50"></text></g><g><title>std::thread::panicking (1 samples, 0.02%)</title><rect x="62.2869%" y="485" width="0.0185%" height="15" fill="rgb(211,85,2)" fg:x="3361" fg:w="1"/><text x="62.5369%" y="495.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.02%)</title><rect x="62.2869%" y="469" width="0.0185%" height="15" fill="rgb(229,17,7)" fg:x="3361" fg:w="1"/><text x="62.5369%" y="479.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.02%)</title><rect x="62.2869%" y="453" width="0.0185%" height="15" fill="rgb(239,72,28)" fg:x="3361" fg:w="1"/><text x="62.5369%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;lluvia::TableInternal&lt;&amp;str,lluvia::VecContainer&lt;&amp;str&gt;&gt;&gt;&gt; (12 samples, 0.22%)</title><rect x="62.1572%" y="533" width="0.2224%" height="15" fill="rgb(230,47,54)" fg:x="3354" fg:w="12"/><text x="62.4072%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.22%)</title><rect x="62.1572%" y="517" width="0.2224%" height="15" fill="rgb(214,50,8)" fg:x="3354" fg:w="12"/><text x="62.4072%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_unlock (4 samples, 0.07%)</title><rect x="62.3054%" y="501" width="0.0741%" height="15" fill="rgb(216,198,43)" fg:x="3362" fg:w="4"/><text x="62.5554%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (4 samples, 0.07%)</title><rect x="62.3054%" y="485" width="0.0741%" height="15" fill="rgb(234,20,35)" fg:x="3362" fg:w="4"/><text x="62.5554%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.07%)</title><rect x="62.3054%" y="469" width="0.0741%" height="15" fill="rgb(254,45,19)" fg:x="3362" fg:w="4"/><text x="62.5554%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="62.4907%" y="517" width="0.0185%" height="15" fill="rgb(219,14,44)" fg:x="3372" fg:w="1"/><text x="62.7407%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.02%)</title><rect x="62.4907%" y="501" width="0.0185%" height="15" fill="rgb(217,220,26)" fg:x="3372" fg:w="1"/><text x="62.7407%" y="511.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="62.4907%" y="485" width="0.0185%" height="15" fill="rgb(213,158,28)" fg:x="3372" fg:w="1"/><text x="62.7407%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;lluvia::InstanceInternal&gt;&gt; (9 samples, 0.17%)</title><rect x="62.5093%" y="517" width="0.1668%" height="15" fill="rgb(252,51,52)" fg:x="3373" fg:w="9"/><text x="62.7593%" y="527.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.17%)</title><rect x="62.5093%" y="501" width="0.1668%" height="15" fill="rgb(246,89,16)" fg:x="3373" fg:w="9"/><text x="62.7593%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (9 samples, 0.17%)</title><rect x="62.5093%" y="485" width="0.1668%" height="15" fill="rgb(216,158,49)" fg:x="3373" fg:w="9"/><text x="62.7593%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (8 samples, 0.15%)</title><rect x="62.5278%" y="469" width="0.1483%" height="15" fill="rgb(236,107,19)" fg:x="3374" fg:w="8"/><text x="62.7778%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (8 samples, 0.15%)</title><rect x="62.5278%" y="453" width="0.1483%" height="15" fill="rgb(228,185,30)" fg:x="3374" fg:w="8"/><text x="62.7778%" y="463.50"></text></g><g><title>lluvia::IdTable::id_is_valid (5 samples, 0.09%)</title><rect x="62.6761%" y="517" width="0.0927%" height="15" fill="rgb(246,134,8)" fg:x="3382" fg:w="5"/><text x="62.9261%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (7 samples, 0.13%)</title><rect x="62.7687%" y="485" width="0.1297%" height="15" fill="rgb(214,143,50)" fg:x="3387" fg:w="7"/><text x="63.0187%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (7 samples, 0.13%)</title><rect x="62.7687%" y="469" width="0.1297%" height="15" fill="rgb(228,75,8)" fg:x="3387" fg:w="7"/><text x="63.0187%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (1 samples, 0.02%)</title><rect x="62.8984%" y="485" width="0.0185%" height="15" fill="rgb(207,175,4)" fg:x="3394" fg:w="1"/><text x="63.1484%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="62.8984%" y="469" width="0.0185%" height="15" fill="rgb(205,108,24)" fg:x="3394" fg:w="1"/><text x="63.1484%" y="479.50"></text></g><g><title>lluvia::Instance::id_is_valid (33 samples, 0.61%)</title><rect x="62.3795%" y="533" width="0.6116%" height="15" fill="rgb(244,120,49)" fg:x="3366" fg:w="33"/><text x="62.6295%" y="543.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (12 samples, 0.22%)</title><rect x="62.7687%" y="517" width="0.2224%" height="15" fill="rgb(223,47,38)" fg:x="3387" fg:w="12"/><text x="63.0187%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (12 samples, 0.22%)</title><rect x="62.7687%" y="501" width="0.2224%" height="15" fill="rgb(229,179,11)" fg:x="3387" fg:w="12"/><text x="63.0187%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::is_read_lockable (4 samples, 0.07%)</title><rect x="62.9170%" y="485" width="0.0741%" height="15" fill="rgb(231,122,1)" fg:x="3395" fg:w="4"/><text x="63.1670%" y="495.50"></text></g><g><title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="62.9911%" y="517" width="0.0185%" height="15" fill="rgb(245,119,9)" fg:x="3399" fg:w="1"/><text x="63.2411%" y="527.50"></text></g><g><title>std::sync::poison::Flag::guard (1 samples, 0.02%)</title><rect x="62.9911%" y="501" width="0.0185%" height="15" fill="rgb(241,163,25)" fg:x="3399" fg:w="1"/><text x="63.2411%" y="511.50"></text></g><g><title>std::thread::panicking (1 samples, 0.02%)</title><rect x="62.9911%" y="485" width="0.0185%" height="15" fill="rgb(217,214,3)" fg:x="3399" fg:w="1"/><text x="63.2411%" y="495.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.02%)</title><rect x="62.9911%" y="469" width="0.0185%" height="15" fill="rgb(240,86,28)" fg:x="3399" fg:w="1"/><text x="63.2411%" y="479.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.02%)</title><rect x="62.9911%" y="453" width="0.0185%" height="15" fill="rgb(215,47,9)" fg:x="3399" fg:w="1"/><text x="63.2411%" y="463.50"></text></g><g><title>lluvia::RawComponent&lt;T,C&gt;::set (176 samples, 3.26%)</title><rect x="60.0259%" y="549" width="3.2617%" height="15" fill="rgb(252,25,45)" fg:x="3239" fg:w="176"/><text x="60.2759%" y="559.50">llu..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (16 samples, 0.30%)</title><rect x="62.9911%" y="533" width="0.2965%" height="15" fill="rgb(251,164,9)" fg:x="3399" fg:w="16"/><text x="63.2411%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write (15 samples, 0.28%)</title><rect x="63.0096%" y="517" width="0.2780%" height="15" fill="rgb(233,194,0)" fg:x="3400" fg:w="15"/><text x="63.2596%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (15 samples, 0.28%)</title><rect x="63.0096%" y="501" width="0.2780%" height="15" fill="rgb(249,111,24)" fg:x="3400" fg:w="15"/><text x="63.2596%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (15 samples, 0.28%)</title><rect x="63.0096%" y="485" width="0.2780%" height="15" fill="rgb(250,223,3)" fg:x="3400" fg:w="15"/><text x="63.2596%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (20 samples, 0.37%)</title><rect x="63.8251%" y="533" width="0.3706%" height="15" fill="rgb(236,178,37)" fg:x="3444" fg:w="20"/><text x="64.0751%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (20 samples, 0.37%)</title><rect x="63.8251%" y="517" width="0.3706%" height="15" fill="rgb(241,158,50)" fg:x="3444" fg:w="20"/><text x="64.0751%" y="527.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (20 samples, 0.37%)</title><rect x="63.8251%" y="501" width="0.3706%" height="15" fill="rgb(213,121,41)" fg:x="3444" fg:w="20"/><text x="64.0751%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (8 samples, 0.15%)</title><rect x="64.3625%" y="517" width="0.1483%" height="15" fill="rgb(240,92,3)" fg:x="3473" fg:w="8"/><text x="64.6125%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (8 samples, 0.15%)</title><rect x="64.3625%" y="501" width="0.1483%" height="15" fill="rgb(205,123,3)" fg:x="3473" fg:w="8"/><text x="64.6125%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (8 samples, 0.15%)</title><rect x="64.3625%" y="485" width="0.1483%" height="15" fill="rgb(205,97,47)" fg:x="3473" fg:w="8"/><text x="64.6125%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.02%)</title><rect x="64.5107%" y="517" width="0.0185%" height="15" fill="rgb(247,152,14)" fg:x="3481" fg:w="1"/><text x="64.7607%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (9 samples, 0.17%)</title><rect x="64.5293%" y="517" width="0.1668%" height="15" fill="rgb(248,195,53)" fg:x="3482" fg:w="9"/><text x="64.7793%" y="527.50"></text></g><g><title>core::mem::replace (9 samples, 0.17%)</title><rect x="64.5293%" y="501" width="0.1668%" height="15" fill="rgb(226,201,16)" fg:x="3482" fg:w="9"/><text x="64.7793%" y="511.50"></text></g><g><title>core::ptr::write (9 samples, 0.17%)</title><rect x="64.5293%" y="485" width="0.1668%" height="15" fill="rgb(205,98,0)" fg:x="3482" fg:w="9"/><text x="64.7793%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.02%)</title><rect x="64.6961%" y="517" width="0.0185%" height="15" fill="rgb(214,191,48)" fg:x="3491" fg:w="1"/><text x="64.9461%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (5 samples, 0.09%)</title><rect x="64.8443%" y="501" width="0.0927%" height="15" fill="rgb(237,112,39)" fg:x="3499" fg:w="5"/><text x="65.0943%" y="511.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (5 samples, 0.09%)</title><rect x="64.8443%" y="485" width="0.0927%" height="15" fill="rgb(247,203,27)" fg:x="3499" fg:w="5"/><text x="65.0943%" y="495.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (5 samples, 0.09%)</title><rect x="64.8443%" y="469" width="0.0927%" height="15" fill="rgb(235,124,28)" fg:x="3499" fg:w="5"/><text x="65.0943%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (8 samples, 0.15%)</title><rect x="64.9370%" y="501" width="0.1483%" height="15" fill="rgb(208,207,46)" fg:x="3504" fg:w="8"/><text x="65.1870%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (8 samples, 0.15%)</title><rect x="64.9370%" y="485" width="0.1483%" height="15" fill="rgb(234,176,4)" fg:x="3504" fg:w="8"/><text x="65.1870%" y="495.50"></text></g><g><title>lluvia::VecContainer&lt;T&gt;::ensure_space_for_id (76 samples, 1.41%)</title><rect x="64.7146%" y="517" width="1.4085%" height="15" fill="rgb(230,133,28)" fg:x="3492" fg:w="76"/><text x="64.9646%" y="527.50"></text></g><g><title>lluvia::VecContainer&lt;T&gt;::get_indices (56 samples, 1.04%)</title><rect x="65.0852%" y="501" width="1.0378%" height="15" fill="rgb(211,137,40)" fg:x="3512" fg:w="56"/><text x="65.3352%" y="511.50"></text></g><g><title>&lt;lluvia::VecContainer&lt;T&gt; as lluvia::Container&lt;T&gt;&gt;::take (136 samples, 2.52%)</title><rect x="64.1957%" y="533" width="2.5204%" height="15" fill="rgb(254,35,13)" fg:x="3464" fg:w="136"/><text x="64.4457%" y="543.50">&lt;l..</text></g><g><title>lluvia::VecContainer&lt;T&gt;::get_indices (32 samples, 0.59%)</title><rect x="66.1231%" y="517" width="0.5930%" height="15" fill="rgb(225,49,51)" fg:x="3568" fg:w="32"/><text x="66.3731%" y="527.50"></text></g><g><title>std::sync::poison::Flag::done (7 samples, 0.13%)</title><rect x="66.7161%" y="501" width="0.1297%" height="15" fill="rgb(251,10,15)" fg:x="3600" fg:w="7"/><text x="66.9661%" y="511.50"></text></g><g><title>std::thread::panicking (5 samples, 0.09%)</title><rect x="66.7532%" y="485" width="0.0927%" height="15" fill="rgb(228,207,15)" fg:x="3602" fg:w="5"/><text x="67.0032%" y="495.50"></text></g><g><title>std::panicking::panicking (5 samples, 0.09%)</title><rect x="66.7532%" y="469" width="0.0927%" height="15" fill="rgb(241,99,19)" fg:x="3602" fg:w="5"/><text x="67.0032%" y="479.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (5 samples, 0.09%)</title><rect x="66.7532%" y="453" width="0.0927%" height="15" fill="rgb(207,104,49)" fg:x="3602" fg:w="5"/><text x="67.0032%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.06%)</title><rect x="66.7902%" y="437" width="0.0556%" height="15" fill="rgb(234,99,18)" fg:x="3604" fg:w="3"/><text x="67.0402%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.06%)</title><rect x="66.7902%" y="421" width="0.0556%" height="15" fill="rgb(213,191,49)" fg:x="3604" fg:w="3"/><text x="67.0402%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;lluvia::TableInternal&lt;&amp;str,lluvia::VecContainer&lt;&amp;str&gt;&gt;&gt;&gt; (14 samples, 0.26%)</title><rect x="66.7161%" y="533" width="0.2595%" height="15" fill="rgb(210,226,19)" fg:x="3600" fg:w="14"/><text x="66.9661%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.26%)</title><rect x="66.7161%" y="517" width="0.2595%" height="15" fill="rgb(229,97,18)" fg:x="3600" fg:w="14"/><text x="66.9661%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_unlock (7 samples, 0.13%)</title><rect x="66.8458%" y="501" width="0.1297%" height="15" fill="rgb(211,167,15)" fg:x="3607" fg:w="7"/><text x="67.0958%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (7 samples, 0.13%)</title><rect x="66.8458%" y="485" width="0.1297%" height="15" fill="rgb(210,169,34)" fg:x="3607" fg:w="7"/><text x="67.0958%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_sub (7 samples, 0.13%)</title><rect x="66.8458%" y="469" width="0.1297%" height="15" fill="rgb(241,121,31)" fg:x="3607" fg:w="7"/><text x="67.0958%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (12 samples, 0.22%)</title><rect x="67.2165%" y="517" width="0.2224%" height="15" fill="rgb(232,40,11)" fg:x="3627" fg:w="12"/><text x="67.4665%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (12 samples, 0.22%)</title><rect x="67.2165%" y="501" width="0.2224%" height="15" fill="rgb(205,86,26)" fg:x="3627" fg:w="12"/><text x="67.4665%" y="511.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (12 samples, 0.22%)</title><rect x="67.2165%" y="485" width="0.2224%" height="15" fill="rgb(231,126,28)" fg:x="3627" fg:w="12"/><text x="67.4665%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;lluvia::InstanceInternal&gt;&gt; (15 samples, 0.28%)</title><rect x="67.4388%" y="517" width="0.2780%" height="15" fill="rgb(219,221,18)" fg:x="3639" fg:w="15"/><text x="67.6888%" y="527.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.28%)</title><rect x="67.4388%" y="501" width="0.2780%" height="15" fill="rgb(211,40,0)" fg:x="3639" fg:w="15"/><text x="67.6888%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (15 samples, 0.28%)</title><rect x="67.4388%" y="485" width="0.2780%" height="15" fill="rgb(239,85,43)" fg:x="3639" fg:w="15"/><text x="67.6888%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (13 samples, 0.24%)</title><rect x="67.4759%" y="469" width="0.2409%" height="15" fill="rgb(231,55,21)" fg:x="3641" fg:w="13"/><text x="67.7259%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (13 samples, 0.24%)</title><rect x="67.4759%" y="453" width="0.2409%" height="15" fill="rgb(225,184,43)" fg:x="3641" fg:w="13"/><text x="67.7259%" y="463.50"></text></g><g><title>lluvia::IdTable::id_is_valid (8 samples, 0.15%)</title><rect x="67.7168%" y="517" width="0.1483%" height="15" fill="rgb(251,158,41)" fg:x="3654" fg:w="8"/><text x="67.9668%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (33 samples, 0.61%)</title><rect x="67.8651%" y="485" width="0.6116%" height="15" fill="rgb(234,159,37)" fg:x="3662" fg:w="33"/><text x="68.1151%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (33 samples, 0.61%)</title><rect x="67.8651%" y="469" width="0.6116%" height="15" fill="rgb(216,204,22)" fg:x="3662" fg:w="33"/><text x="68.1151%" y="479.50"></text></g><g><title>lluvia::Instance::id_is_valid (92 samples, 1.70%)</title><rect x="66.9755%" y="533" width="1.7050%" height="15" fill="rgb(214,17,3)" fg:x="3614" fg:w="92"/><text x="67.2255%" y="543.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (44 samples, 0.82%)</title><rect x="67.8651%" y="517" width="0.8154%" height="15" fill="rgb(212,111,17)" fg:x="3662" fg:w="44"/><text x="68.1151%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (44 samples, 0.82%)</title><rect x="67.8651%" y="501" width="0.8154%" height="15" fill="rgb(221,157,24)" fg:x="3662" fg:w="44"/><text x="68.1151%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::is_read_lockable (11 samples, 0.20%)</title><rect x="68.4766%" y="485" width="0.2039%" height="15" fill="rgb(252,16,13)" fg:x="3695" fg:w="11"/><text x="68.7266%" y="495.50"></text></g><g><title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (6 samples, 0.11%)</title><rect x="68.6805%" y="517" width="0.1112%" height="15" fill="rgb(221,62,2)" fg:x="3706" fg:w="6"/><text x="68.9305%" y="527.50"></text></g><g><title>std::sync::poison::Flag::guard (6 samples, 0.11%)</title><rect x="68.6805%" y="501" width="0.1112%" height="15" fill="rgb(247,87,22)" fg:x="3706" fg:w="6"/><text x="68.9305%" y="511.50"></text></g><g><title>std::thread::panicking (6 samples, 0.11%)</title><rect x="68.6805%" y="485" width="0.1112%" height="15" fill="rgb(215,73,9)" fg:x="3706" fg:w="6"/><text x="68.9305%" y="495.50"></text></g><g><title>std::panicking::panicking (6 samples, 0.11%)</title><rect x="68.6805%" y="469" width="0.1112%" height="15" fill="rgb(207,175,33)" fg:x="3706" fg:w="6"/><text x="68.9305%" y="479.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (6 samples, 0.11%)</title><rect x="68.6805%" y="453" width="0.1112%" height="15" fill="rgb(243,129,54)" fg:x="3706" fg:w="6"/><text x="68.9305%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (5 samples, 0.09%)</title><rect x="68.6990%" y="437" width="0.0927%" height="15" fill="rgb(227,119,45)" fg:x="3707" fg:w="5"/><text x="68.9490%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.09%)</title><rect x="68.6990%" y="421" width="0.0927%" height="15" fill="rgb(205,109,36)" fg:x="3707" fg:w="5"/><text x="68.9490%" y="431.50"></text></g><g><title>lluvia::RawComponent&lt;T,C&gt;::take (322 samples, 5.97%)</title><rect x="63.2876%" y="549" width="5.9674%" height="15" fill="rgb(205,6,39)" fg:x="3415" fg:w="322"/><text x="63.5376%" y="559.50">lluvia::..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (31 samples, 0.57%)</title><rect x="68.6805%" y="533" width="0.5745%" height="15" fill="rgb(221,32,16)" fg:x="3706" fg:w="31"/><text x="68.9305%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write (25 samples, 0.46%)</title><rect x="68.7917%" y="517" width="0.4633%" height="15" fill="rgb(228,144,50)" fg:x="3712" fg:w="25"/><text x="69.0417%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (25 samples, 0.46%)</title><rect x="68.7917%" y="501" width="0.4633%" height="15" fill="rgb(229,201,53)" fg:x="3712" fg:w="25"/><text x="69.0417%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (25 samples, 0.46%)</title><rect x="68.7917%" y="485" width="0.4633%" height="15" fill="rgb(249,153,27)" fg:x="3712" fg:w="25"/><text x="69.0417%" y="495.50"></text></g><g><title>lluvia::Snapshot&lt;T&gt;::commit (911 samples, 16.88%)</title><rect x="52.4463%" y="565" width="16.8829%" height="15" fill="rgb(227,106,25)" fg:x="2830" fg:w="911"/><text x="52.6963%" y="575.50">lluvia::Snapshot&lt;T&gt;::commit</text></g><g><title>lluvia::Snapshot&lt;T&gt;::set_committed (4 samples, 0.07%)</title><rect x="69.2550%" y="549" width="0.0741%" height="15" fill="rgb(230,65,29)" fg:x="3737" fg:w="4"/><text x="69.5050%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (4 samples, 0.07%)</title><rect x="69.2550%" y="533" width="0.0741%" height="15" fill="rgb(221,57,46)" fg:x="3737" fg:w="4"/><text x="69.5050%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_store (4 samples, 0.07%)</title><rect x="69.2550%" y="517" width="0.0741%" height="15" fill="rgb(229,161,17)" fg:x="3737" fg:w="4"/><text x="69.5050%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (4 samples, 0.07%)</title><rect x="69.5145%" y="549" width="0.0741%" height="15" fill="rgb(222,213,11)" fg:x="3751" fg:w="4"/><text x="69.7645%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.28%)</title><rect x="69.8110%" y="533" width="0.2780%" height="15" fill="rgb(235,35,13)" fg:x="3767" fg:w="15"/><text x="70.0610%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (15 samples, 0.28%)</title><rect x="69.8110%" y="517" width="0.2780%" height="15" fill="rgb(233,158,34)" fg:x="3767" fg:w="15"/><text x="70.0610%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_add (15 samples, 0.28%)</title><rect x="69.8110%" y="501" width="0.2780%" height="15" fill="rgb(215,151,48)" fg:x="3767" fg:w="15"/><text x="70.0610%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (9 samples, 0.17%)</title><rect x="70.0890%" y="533" width="0.1668%" height="15" fill="rgb(229,84,14)" fg:x="3782" fg:w="9"/><text x="70.3390%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (9 samples, 0.17%)</title><rect x="70.0890%" y="517" width="0.1668%" height="15" fill="rgb(229,68,14)" fg:x="3782" fg:w="9"/><text x="70.3390%" y="527.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (9 samples, 0.17%)</title><rect x="70.0890%" y="501" width="0.1668%" height="15" fill="rgb(243,106,26)" fg:x="3782" fg:w="9"/><text x="70.3390%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (3 samples, 0.06%)</title><rect x="70.3113%" y="517" width="0.0556%" height="15" fill="rgb(206,45,38)" fg:x="3794" fg:w="3"/><text x="70.5613%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (11 samples, 0.20%)</title><rect x="70.3669%" y="517" width="0.2039%" height="15" fill="rgb(226,6,15)" fg:x="3797" fg:w="11"/><text x="70.6169%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (1 samples, 0.02%)</title><rect x="70.5708%" y="517" width="0.0185%" height="15" fill="rgb(232,22,54)" fg:x="3808" fg:w="1"/><text x="70.8208%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.02%)</title><rect x="70.5708%" y="501" width="0.0185%" height="15" fill="rgb(229,222,32)" fg:x="3808" fg:w="1"/><text x="70.8208%" y="511.50"></text></g><g><title>&lt;lluvia::VecContainer&lt;T&gt; as lluvia::Container&lt;T&gt;&gt;::index (42 samples, 0.78%)</title><rect x="70.2557%" y="533" width="0.7784%" height="15" fill="rgb(228,62,29)" fg:x="3791" fg:w="42"/><text x="70.5057%" y="543.50"></text></g><g><title>lluvia::VecContainer&lt;T&gt;::get_indices (24 samples, 0.44%)</title><rect x="70.5893%" y="517" width="0.4448%" height="15" fill="rgb(251,103,34)" fg:x="3809" fg:w="24"/><text x="70.8393%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;lluvia::TableInternal&lt;&amp;str,lluvia::VecContainer&lt;&amp;str&gt;&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="71.0341%" y="533" width="0.0371%" height="15" fill="rgb(233,12,30)" fg:x="3833" fg:w="2"/><text x="71.2841%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="71.0341%" y="517" width="0.0371%" height="15" fill="rgb(238,52,0)" fg:x="3833" fg:w="2"/><text x="71.2841%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (2 samples, 0.04%)</title><rect x="71.0341%" y="501" width="0.0371%" height="15" fill="rgb(223,98,5)" fg:x="3833" fg:w="2"/><text x="71.2841%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (2 samples, 0.04%)</title><rect x="71.0341%" y="485" width="0.0371%" height="15" fill="rgb(228,75,37)" fg:x="3833" fg:w="2"/><text x="71.2841%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.04%)</title><rect x="71.0341%" y="469" width="0.0371%" height="15" fill="rgb(205,115,49)" fg:x="3833" fg:w="2"/><text x="71.2841%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.06%)</title><rect x="71.4233%" y="517" width="0.0556%" height="15" fill="rgb(250,154,43)" fg:x="3854" fg:w="3"/><text x="71.6733%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (3 samples, 0.06%)</title><rect x="71.4233%" y="501" width="0.0556%" height="15" fill="rgb(226,43,29)" fg:x="3854" fg:w="3"/><text x="71.6733%" y="511.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (3 samples, 0.06%)</title><rect x="71.4233%" y="485" width="0.0556%" height="15" fill="rgb(249,228,39)" fg:x="3854" fg:w="3"/><text x="71.6733%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;lluvia::InstanceInternal&gt;&gt; (16 samples, 0.30%)</title><rect x="71.4789%" y="517" width="0.2965%" height="15" fill="rgb(216,79,43)" fg:x="3857" fg:w="16"/><text x="71.7289%" y="527.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.30%)</title><rect x="71.4789%" y="501" width="0.2965%" height="15" fill="rgb(228,95,12)" fg:x="3857" fg:w="16"/><text x="71.7289%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (16 samples, 0.30%)</title><rect x="71.4789%" y="485" width="0.2965%" height="15" fill="rgb(249,221,15)" fg:x="3857" fg:w="16"/><text x="71.7289%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (16 samples, 0.30%)</title><rect x="71.4789%" y="469" width="0.2965%" height="15" fill="rgb(233,34,13)" fg:x="3857" fg:w="16"/><text x="71.7289%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (16 samples, 0.30%)</title><rect x="71.4789%" y="453" width="0.2965%" height="15" fill="rgb(214,103,39)" fg:x="3857" fg:w="16"/><text x="71.7289%" y="463.50"></text></g><g><title>lluvia::IdTable::id_is_valid (9 samples, 0.17%)</title><rect x="71.7754%" y="517" width="0.1668%" height="15" fill="rgb(251,126,39)" fg:x="3873" fg:w="9"/><text x="72.0254%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (34 samples, 0.63%)</title><rect x="72.0719%" y="485" width="0.6301%" height="15" fill="rgb(214,216,36)" fg:x="3889" fg:w="34"/><text x="72.3219%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (34 samples, 0.63%)</title><rect x="72.0719%" y="469" width="0.6301%" height="15" fill="rgb(220,221,8)" fg:x="3889" fg:w="34"/><text x="72.3219%" y="479.50"></text></g><g><title>lluvia::Instance::id_is_valid (92 samples, 1.70%)</title><rect x="71.0712%" y="533" width="1.7050%" height="15" fill="rgb(240,216,3)" fg:x="3835" fg:w="92"/><text x="71.3212%" y="543.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (45 samples, 0.83%)</title><rect x="71.9422%" y="517" width="0.8340%" height="15" fill="rgb(232,218,17)" fg:x="3882" fg:w="45"/><text x="72.1922%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (45 samples, 0.83%)</title><rect x="71.9422%" y="501" width="0.8340%" height="15" fill="rgb(229,163,45)" fg:x="3882" fg:w="45"/><text x="72.1922%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::is_read_lockable (4 samples, 0.07%)</title><rect x="72.7020%" y="485" width="0.0741%" height="15" fill="rgb(231,110,42)" fg:x="3923" fg:w="4"/><text x="72.9520%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (20 samples, 0.37%)</title><rect x="72.7947%" y="501" width="0.3706%" height="15" fill="rgb(208,170,48)" fg:x="3928" fg:w="20"/><text x="73.0447%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (20 samples, 0.37%)</title><rect x="72.7947%" y="485" width="0.3706%" height="15" fill="rgb(239,116,25)" fg:x="3928" fg:w="20"/><text x="73.0447%" y="495.50"></text></g><g><title>lluvia::RawComponent&lt;T,C&gt;::get (205 samples, 3.80%)</title><rect x="69.5886%" y="549" width="3.7991%" height="15" fill="rgb(219,200,50)" fg:x="3755" fg:w="205"/><text x="69.8386%" y="559.50">lluv..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (33 samples, 0.61%)</title><rect x="72.7761%" y="533" width="0.6116%" height="15" fill="rgb(245,200,0)" fg:x="3927" fg:w="33"/><text x="73.0261%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (33 samples, 0.61%)</title><rect x="72.7761%" y="517" width="0.6116%" height="15" fill="rgb(245,119,33)" fg:x="3927" fg:w="33"/><text x="73.0261%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::is_read_lockable (12 samples, 0.22%)</title><rect x="73.1653%" y="501" width="0.2224%" height="15" fill="rgb(231,125,12)" fg:x="3948" fg:w="12"/><text x="73.4153%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.06%)</title><rect x="73.4248%" y="517" width="0.0556%" height="15" fill="rgb(216,96,41)" fg:x="3962" fg:w="3"/><text x="73.6748%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (3 samples, 0.06%)</title><rect x="73.4248%" y="501" width="0.0556%" height="15" fill="rgb(248,43,45)" fg:x="3962" fg:w="3"/><text x="73.6748%" y="511.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (3 samples, 0.06%)</title><rect x="73.4248%" y="485" width="0.0556%" height="15" fill="rgb(217,222,7)" fg:x="3962" fg:w="3"/><text x="73.6748%" y="495.50"></text></g><g><title>lluvia::Snapshot&lt;T&gt;::assert_alive (7 samples, 0.13%)</title><rect x="73.3877%" y="549" width="0.1297%" height="15" fill="rgb(233,28,6)" fg:x="3960" fg:w="7"/><text x="73.6377%" y="559.50"></text></g><g><title>lluvia::Snapshot&lt;T&gt;::is_committed (5 samples, 0.09%)</title><rect x="73.4248%" y="533" width="0.0927%" height="15" fill="rgb(231,218,15)" fg:x="3962" fg:w="5"/><text x="73.6748%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (2 samples, 0.04%)</title><rect x="73.4804%" y="517" width="0.0371%" height="15" fill="rgb(226,171,48)" fg:x="3965" fg:w="2"/><text x="73.7304%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::TableRefEntityType&gt; (21 samples, 0.39%)</title><rect x="73.9251%" y="501" width="0.3892%" height="15" fill="rgb(235,201,9)" fg:x="3989" fg:w="21"/><text x="74.1751%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt; (17 samples, 0.32%)</title><rect x="73.9993%" y="485" width="0.3150%" height="15" fill="rgb(217,80,15)" fg:x="3993" fg:w="17"/><text x="74.2493%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.32%)</title><rect x="73.9993%" y="469" width="0.3150%" height="15" fill="rgb(219,152,8)" fg:x="3993" fg:w="17"/><text x="74.2493%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (16 samples, 0.30%)</title><rect x="74.0178%" y="453" width="0.2965%" height="15" fill="rgb(243,107,38)" fg:x="3994" fg:w="16"/><text x="74.2678%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (16 samples, 0.30%)</title><rect x="74.0178%" y="437" width="0.2965%" height="15" fill="rgb(231,17,5)" fg:x="3994" fg:w="16"/><text x="74.2678%" y="447.50"></text></g><g><title>asm_sysvec_irq_work (1 samples, 0.02%)</title><rect x="74.3143%" y="453" width="0.0185%" height="15" fill="rgb(209,25,54)" fg:x="4010" fg:w="1"/><text x="74.5643%" y="463.50"></text></g><g><title>sysvec_irq_work (1 samples, 0.02%)</title><rect x="74.3143%" y="437" width="0.0185%" height="15" fill="rgb(219,0,2)" fg:x="4010" fg:w="1"/><text x="74.5643%" y="447.50"></text></g><g><title>irqentry_exit (1 samples, 0.02%)</title><rect x="74.3143%" y="421" width="0.0185%" height="15" fill="rgb(246,9,5)" fg:x="4010" fg:w="1"/><text x="74.5643%" y="431.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.02%)</title><rect x="74.3143%" y="405" width="0.0185%" height="15" fill="rgb(226,159,4)" fg:x="4010" fg:w="1"/><text x="74.5643%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;lluvia::TableRef&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;,lluvia::VecContainer&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt;&gt; (42 samples, 0.78%)</title><rect x="73.7213%" y="533" width="0.7784%" height="15" fill="rgb(219,175,34)" fg:x="3978" fg:w="42"/><text x="73.9713%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::TableRef&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;,lluvia::VecContainer&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt; (31 samples, 0.57%)</title><rect x="73.9251%" y="517" width="0.5745%" height="15" fill="rgb(236,10,46)" fg:x="3989" fg:w="31"/><text x="74.1751%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;lluvia::TableInternal&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;,lluvia::VecContainer&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt;&gt; (10 samples, 0.19%)</title><rect x="74.3143%" y="501" width="0.1853%" height="15" fill="rgb(240,211,16)" fg:x="4010" fg:w="10"/><text x="74.5643%" y="511.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.19%)</title><rect x="74.3143%" y="485" width="0.1853%" height="15" fill="rgb(205,3,43)" fg:x="4010" fg:w="10"/><text x="74.5643%" y="495.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (10 samples, 0.19%)</title><rect x="74.3143%" y="469" width="0.1853%" height="15" fill="rgb(245,7,22)" fg:x="4010" fg:w="10"/><text x="74.5643%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (9 samples, 0.17%)</title><rect x="74.3328%" y="453" width="0.1668%" height="15" fill="rgb(239,132,32)" fg:x="4011" fg:w="9"/><text x="74.5828%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (9 samples, 0.17%)</title><rect x="74.3328%" y="437" width="0.1668%" height="15" fill="rgb(228,202,34)" fg:x="4011" fg:w="9"/><text x="74.5828%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.15%)</title><rect x="74.6479%" y="517" width="0.1483%" height="15" fill="rgb(254,200,22)" fg:x="4028" fg:w="8"/><text x="74.8979%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (8 samples, 0.15%)</title><rect x="74.6479%" y="501" width="0.1483%" height="15" fill="rgb(219,10,39)" fg:x="4028" fg:w="8"/><text x="74.8979%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_add (8 samples, 0.15%)</title><rect x="74.6479%" y="485" width="0.1483%" height="15" fill="rgb(226,210,39)" fg:x="4028" fg:w="8"/><text x="74.8979%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.09%)</title><rect x="74.7961%" y="517" width="0.0927%" height="15" fill="rgb(208,219,16)" fg:x="4036" fg:w="5"/><text x="75.0461%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (5 samples, 0.09%)</title><rect x="74.7961%" y="501" width="0.0927%" height="15" fill="rgb(216,158,51)" fg:x="4036" fg:w="5"/><text x="75.0461%" y="511.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (5 samples, 0.09%)</title><rect x="74.7961%" y="485" width="0.0927%" height="15" fill="rgb(233,14,44)" fg:x="4036" fg:w="5"/><text x="75.0461%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (3 samples, 0.06%)</title><rect x="74.9444%" y="501" width="0.0556%" height="15" fill="rgb(237,97,39)" fg:x="4044" fg:w="3"/><text x="75.1944%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (9 samples, 0.17%)</title><rect x="75.0000%" y="501" width="0.1668%" height="15" fill="rgb(218,198,43)" fg:x="4047" fg:w="9"/><text x="75.2500%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (1 samples, 0.02%)</title><rect x="75.1668%" y="501" width="0.0185%" height="15" fill="rgb(231,104,20)" fg:x="4056" fg:w="1"/><text x="75.4168%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.02%)</title><rect x="75.1668%" y="485" width="0.0185%" height="15" fill="rgb(254,36,13)" fg:x="4056" fg:w="1"/><text x="75.4168%" y="495.50"></text></g><g><title>&lt;lluvia::VecContainer&lt;T&gt; as lluvia::Container&lt;T&gt;&gt;::index (46 samples, 0.85%)</title><rect x="74.8888%" y="517" width="0.8525%" height="15" fill="rgb(248,14,50)" fg:x="4041" fg:w="46"/><text x="75.1388%" y="527.50"></text></g><g><title>lluvia::VecContainer&lt;T&gt;::get_indices (30 samples, 0.56%)</title><rect x="75.1853%" y="501" width="0.5560%" height="15" fill="rgb(217,107,29)" fg:x="4057" fg:w="30"/><text x="75.4353%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;lluvia::TableInternal&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;,lluvia::VecContainer&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt;&gt; (5 samples, 0.09%)</title><rect x="75.7413%" y="517" width="0.0927%" height="15" fill="rgb(251,169,33)" fg:x="4087" fg:w="5"/><text x="75.9913%" y="527.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.09%)</title><rect x="75.7413%" y="501" width="0.0927%" height="15" fill="rgb(217,108,32)" fg:x="4087" fg:w="5"/><text x="75.9913%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (5 samples, 0.09%)</title><rect x="75.7413%" y="485" width="0.0927%" height="15" fill="rgb(219,66,42)" fg:x="4087" fg:w="5"/><text x="75.9913%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (5 samples, 0.09%)</title><rect x="75.7413%" y="469" width="0.0927%" height="15" fill="rgb(206,180,7)" fg:x="4087" fg:w="5"/><text x="75.9913%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (5 samples, 0.09%)</title><rect x="75.7413%" y="453" width="0.0927%" height="15" fill="rgb(208,226,31)" fg:x="4087" fg:w="5"/><text x="75.9913%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;lluvia::InstanceInternal&gt;&gt; (5 samples, 0.09%)</title><rect x="76.2231%" y="501" width="0.0927%" height="15" fill="rgb(218,26,49)" fg:x="4113" fg:w="5"/><text x="76.4731%" y="511.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.09%)</title><rect x="76.2231%" y="485" width="0.0927%" height="15" fill="rgb(233,197,48)" fg:x="4113" fg:w="5"/><text x="76.4731%" y="495.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (5 samples, 0.09%)</title><rect x="76.2231%" y="469" width="0.0927%" height="15" fill="rgb(252,181,51)" fg:x="4113" fg:w="5"/><text x="76.4731%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (5 samples, 0.09%)</title><rect x="76.2231%" y="453" width="0.0927%" height="15" fill="rgb(253,90,19)" fg:x="4113" fg:w="5"/><text x="76.4731%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (5 samples, 0.09%)</title><rect x="76.2231%" y="437" width="0.0927%" height="15" fill="rgb(215,171,30)" fg:x="4113" fg:w="5"/><text x="76.4731%" y="447.50"></text></g><g><title>lluvia::IdTable::id_is_valid (13 samples, 0.24%)</title><rect x="76.3158%" y="501" width="0.2409%" height="15" fill="rgb(214,222,9)" fg:x="4118" fg:w="13"/><text x="76.5658%" y="511.50"></text></g><g><title>asm_sysvec_reschedule_ipi (6 samples, 0.11%)</title><rect x="76.6123%" y="469" width="0.1112%" height="15" fill="rgb(223,3,22)" fg:x="4134" fg:w="6"/><text x="76.8623%" y="479.50"></text></g><g><title>sysvec_reschedule_ipi (6 samples, 0.11%)</title><rect x="76.6123%" y="453" width="0.1112%" height="15" fill="rgb(225,196,46)" fg:x="4134" fg:w="6"/><text x="76.8623%" y="463.50"></text></g><g><title>irqentry_exit (6 samples, 0.11%)</title><rect x="76.6123%" y="437" width="0.1112%" height="15" fill="rgb(209,110,37)" fg:x="4134" fg:w="6"/><text x="76.8623%" y="447.50"></text></g><g><title>irqentry_exit_to_user_mode (6 samples, 0.11%)</title><rect x="76.6123%" y="421" width="0.1112%" height="15" fill="rgb(249,89,12)" fg:x="4134" fg:w="6"/><text x="76.8623%" y="431.50"></text></g><g><title>exit_to_user_mode_prepare (6 samples, 0.11%)</title><rect x="76.6123%" y="405" width="0.1112%" height="15" fill="rgb(226,27,33)" fg:x="4134" fg:w="6"/><text x="76.8623%" y="415.50"></text></g><g><title>schedule (6 samples, 0.11%)</title><rect x="76.6123%" y="389" width="0.1112%" height="15" fill="rgb(213,82,22)" fg:x="4134" fg:w="6"/><text x="76.8623%" y="399.50"></text></g><g><title>__sched_text_start (6 samples, 0.11%)</title><rect x="76.6123%" y="373" width="0.1112%" height="15" fill="rgb(248,140,0)" fg:x="4134" fg:w="6"/><text x="76.8623%" y="383.50"></text></g><g><title>finish_task_switch (5 samples, 0.09%)</title><rect x="76.6308%" y="357" width="0.0927%" height="15" fill="rgb(228,106,3)" fg:x="4135" fg:w="5"/><text x="76.8808%" y="367.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.09%)</title><rect x="76.6308%" y="341" width="0.0927%" height="15" fill="rgb(209,23,37)" fg:x="4135" fg:w="5"/><text x="76.8808%" y="351.50"></text></g><g><title>perf_pmu_enable.part.0 (5 samples, 0.09%)</title><rect x="76.6308%" y="325" width="0.0927%" height="15" fill="rgb(241,93,50)" fg:x="4135" fg:w="5"/><text x="76.8808%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (12 samples, 0.22%)</title><rect x="76.7235%" y="469" width="0.2224%" height="15" fill="rgb(253,46,43)" fg:x="4140" fg:w="12"/><text x="76.9735%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (12 samples, 0.22%)</title><rect x="76.7235%" y="453" width="0.2224%" height="15" fill="rgb(226,206,43)" fg:x="4140" fg:w="12"/><text x="76.9735%" y="463.50"></text></g><g><title>lluvia::Instance::id_is_valid (63 samples, 1.17%)</title><rect x="75.8340%" y="517" width="1.1675%" height="15" fill="rgb(217,54,7)" fg:x="4092" fg:w="63"/><text x="76.0840%" y="527.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (24 samples, 0.44%)</title><rect x="76.5567%" y="501" width="0.4448%" height="15" fill="rgb(223,5,52)" fg:x="4131" fg:w="24"/><text x="76.8067%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (24 samples, 0.44%)</title><rect x="76.5567%" y="485" width="0.4448%" height="15" fill="rgb(206,52,46)" fg:x="4131" fg:w="24"/><text x="76.8067%" y="495.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::is_read_lockable (3 samples, 0.06%)</title><rect x="76.9459%" y="469" width="0.0556%" height="15" fill="rgb(253,136,11)" fg:x="4152" fg:w="3"/><text x="77.1959%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (24 samples, 0.44%)</title><rect x="77.0015%" y="485" width="0.4448%" height="15" fill="rgb(208,106,33)" fg:x="4155" fg:w="24"/><text x="77.2515%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (24 samples, 0.44%)</title><rect x="77.0015%" y="469" width="0.4448%" height="15" fill="rgb(206,54,4)" fg:x="4155" fg:w="24"/><text x="77.2515%" y="479.50"></text></g><g><title>lluvia::Snapshot&lt;T&gt;::get (452 samples, 8.38%)</title><rect x="69.3291%" y="565" width="8.3766%" height="15" fill="rgb(213,3,15)" fg:x="3741" fg:w="452"/><text x="69.5791%" y="575.50">lluvia::Snap..</text></g><g><title>lluvia::Snapshot&lt;T&gt;::is_id_in_snapshot (226 samples, 4.19%)</title><rect x="73.5174%" y="549" width="4.1883%" height="15" fill="rgb(252,211,39)" fg:x="3967" fg:w="226"/><text x="73.7674%" y="559.50">lluvi..</text></g><g><title>lluvia::RawComponent&lt;T,C&gt;::get (173 samples, 3.21%)</title><rect x="74.4996%" y="533" width="3.2061%" height="15" fill="rgb(223,6,36)" fg:x="4020" fg:w="173"/><text x="74.7496%" y="543.50">llu..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (38 samples, 0.70%)</title><rect x="77.0015%" y="517" width="0.7042%" height="15" fill="rgb(252,169,45)" fg:x="4155" fg:w="38"/><text x="77.2515%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (38 samples, 0.70%)</title><rect x="77.0015%" y="501" width="0.7042%" height="15" fill="rgb(212,48,26)" fg:x="4155" fg:w="38"/><text x="77.2515%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::is_read_lockable (14 samples, 0.26%)</title><rect x="77.4463%" y="485" width="0.2595%" height="15" fill="rgb(251,102,48)" fg:x="4179" fg:w="14"/><text x="77.6963%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="77.7057%" y="533" width="0.0185%" height="15" fill="rgb(243,208,16)" fg:x="4193" fg:w="1"/><text x="77.9557%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.02%)</title><rect x="77.7057%" y="517" width="0.0185%" height="15" fill="rgb(219,96,24)" fg:x="4193" fg:w="1"/><text x="77.9557%" y="527.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="77.7057%" y="501" width="0.0185%" height="15" fill="rgb(219,33,29)" fg:x="4193" fg:w="1"/><text x="77.9557%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.02%)</title><rect x="77.9466%" y="517" width="0.0185%" height="15" fill="rgb(223,176,5)" fg:x="4206" fg:w="1"/><text x="78.1966%" y="527.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.39%)</title><rect x="77.9652%" y="517" width="0.3892%" height="15" fill="rgb(228,140,14)" fg:x="4207" fg:w="21"/><text x="78.2152%" y="527.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.09%)</title><rect x="78.2617%" y="501" width="0.0927%" height="15" fill="rgb(217,179,31)" fg:x="4223" fg:w="5"/><text x="78.5117%" y="511.50"></text></g><g><title>&lt;lluvia::VecContainer&lt;T&gt; as lluvia::Container&lt;T&gt;&gt;::clear (63 samples, 1.17%)</title><rect x="77.7242%" y="533" width="1.1675%" height="15" fill="rgb(230,9,30)" fg:x="4194" fg:w="63"/><text x="77.9742%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt; (29 samples, 0.54%)</title><rect x="78.3543%" y="517" width="0.5374%" height="15" fill="rgb(230,136,20)" fg:x="4228" fg:w="29"/><text x="78.6043%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt; (24 samples, 0.44%)</title><rect x="78.4470%" y="501" width="0.4448%" height="15" fill="rgb(215,210,22)" fg:x="4233" fg:w="24"/><text x="78.6970%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.44%)</title><rect x="78.4470%" y="485" width="0.4448%" height="15" fill="rgb(218,43,5)" fg:x="4233" fg:w="24"/><text x="78.6970%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (22 samples, 0.41%)</title><rect x="78.4841%" y="469" width="0.4077%" height="15" fill="rgb(216,11,5)" fg:x="4235" fg:w="22"/><text x="78.7341%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (22 samples, 0.41%)</title><rect x="78.4841%" y="453" width="0.4077%" height="15" fill="rgb(209,82,29)" fg:x="4235" fg:w="22"/><text x="78.7341%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;lluvia::TableInternal&lt;&amp;str,lluvia::VecContainer&lt;&amp;str&gt;&gt;&gt;&gt; (9 samples, 0.17%)</title><rect x="78.8918%" y="533" width="0.1668%" height="15" fill="rgb(244,115,12)" fg:x="4257" fg:w="9"/><text x="79.1418%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.17%)</title><rect x="78.8918%" y="517" width="0.1668%" height="15" fill="rgb(222,82,18)" fg:x="4257" fg:w="9"/><text x="79.1418%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_unlock (8 samples, 0.15%)</title><rect x="78.9103%" y="501" width="0.1483%" height="15" fill="rgb(249,227,8)" fg:x="4258" fg:w="8"/><text x="79.1603%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (8 samples, 0.15%)</title><rect x="78.9103%" y="485" width="0.1483%" height="15" fill="rgb(253,141,45)" fg:x="4258" fg:w="8"/><text x="79.1603%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_sub (8 samples, 0.15%)</title><rect x="78.9103%" y="469" width="0.1483%" height="15" fill="rgb(234,184,4)" fg:x="4258" fg:w="8"/><text x="79.1603%" y="479.50"></text></g><g><title>std::sync::poison::Flag::done (3 samples, 0.06%)</title><rect x="79.0771%" y="501" width="0.0556%" height="15" fill="rgb(218,194,23)" fg:x="4267" fg:w="3"/><text x="79.3271%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;lluvia::TableInternal&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;,lluvia::VecContainer&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt;&gt; (9 samples, 0.17%)</title><rect x="79.0586%" y="533" width="0.1668%" height="15" fill="rgb(235,66,41)" fg:x="4266" fg:w="9"/><text x="79.3086%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.17%)</title><rect x="79.0586%" y="517" width="0.1668%" height="15" fill="rgb(245,217,1)" fg:x="4266" fg:w="9"/><text x="79.3086%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_unlock (5 samples, 0.09%)</title><rect x="79.1327%" y="501" width="0.0927%" height="15" fill="rgb(229,91,1)" fg:x="4270" fg:w="5"/><text x="79.3827%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (5 samples, 0.09%)</title><rect x="79.1327%" y="485" width="0.0927%" height="15" fill="rgb(207,101,30)" fg:x="4270" fg:w="5"/><text x="79.3827%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_sub (5 samples, 0.09%)</title><rect x="79.1327%" y="469" width="0.0927%" height="15" fill="rgb(223,82,49)" fg:x="4270" fg:w="5"/><text x="79.3827%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (4 samples, 0.07%)</title><rect x="79.2254%" y="533" width="0.0741%" height="15" fill="rgb(218,167,17)" fg:x="4275" fg:w="4"/><text x="79.4754%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_store (4 samples, 0.07%)</title><rect x="79.2254%" y="517" width="0.0741%" height="15" fill="rgb(208,103,14)" fg:x="4275" fg:w="4"/><text x="79.4754%" y="527.50"></text></g><g><title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (2 samples, 0.04%)</title><rect x="79.2995%" y="517" width="0.0371%" height="15" fill="rgb(238,20,8)" fg:x="4279" fg:w="2"/><text x="79.5495%" y="527.50"></text></g><g><title>std::sync::poison::Flag::guard (2 samples, 0.04%)</title><rect x="79.2995%" y="501" width="0.0371%" height="15" fill="rgb(218,80,54)" fg:x="4279" fg:w="2"/><text x="79.5495%" y="511.50"></text></g><g><title>std::thread::panicking (2 samples, 0.04%)</title><rect x="79.2995%" y="485" width="0.0371%" height="15" fill="rgb(240,144,17)" fg:x="4279" fg:w="2"/><text x="79.5495%" y="495.50"></text></g><g><title>std::panicking::panicking (2 samples, 0.04%)</title><rect x="79.2995%" y="469" width="0.0371%" height="15" fill="rgb(245,27,50)" fg:x="4279" fg:w="2"/><text x="79.5495%" y="479.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (2 samples, 0.04%)</title><rect x="79.2995%" y="453" width="0.0371%" height="15" fill="rgb(251,51,7)" fg:x="4279" fg:w="2"/><text x="79.5495%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.04%)</title><rect x="79.2995%" y="437" width="0.0371%" height="15" fill="rgb(245,217,29)" fg:x="4279" fg:w="2"/><text x="79.5495%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.04%)</title><rect x="79.2995%" y="421" width="0.0371%" height="15" fill="rgb(221,176,29)" fg:x="4279" fg:w="2"/><text x="79.5495%" y="431.50"></text></g><g><title>lluvia::Snapshot&lt;T&gt;::reset (107 samples, 1.98%)</title><rect x="77.7057%" y="565" width="1.9830%" height="15" fill="rgb(212,180,24)" fg:x="4193" fg:w="107"/><text x="77.9557%" y="575.50">l..</text></g><g><title>lluvia::RawComponent&lt;T,C&gt;::clear (107 samples, 1.98%)</title><rect x="77.7057%" y="549" width="1.9830%" height="15" fill="rgb(254,24,2)" fg:x="4193" fg:w="107"/><text x="77.9557%" y="559.50">l..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (21 samples, 0.39%)</title><rect x="79.2995%" y="533" width="0.3892%" height="15" fill="rgb(230,100,2)" fg:x="4279" fg:w="21"/><text x="79.5495%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write (19 samples, 0.35%)</title><rect x="79.3365%" y="517" width="0.3521%" height="15" fill="rgb(219,142,25)" fg:x="4281" fg:w="19"/><text x="79.5865%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (19 samples, 0.35%)</title><rect x="79.3365%" y="501" width="0.3521%" height="15" fill="rgb(240,73,43)" fg:x="4281" fg:w="19"/><text x="79.5865%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (19 samples, 0.35%)</title><rect x="79.3365%" y="485" width="0.3521%" height="15" fill="rgb(214,114,15)" fg:x="4281" fg:w="19"/><text x="79.5865%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.20%)</title><rect x="80.5782%" y="533" width="0.2039%" height="15" fill="rgb(207,130,4)" fg:x="4348" fg:w="11"/><text x="80.8282%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (11 samples, 0.20%)</title><rect x="80.5782%" y="517" width="0.2039%" height="15" fill="rgb(221,25,40)" fg:x="4348" fg:w="11"/><text x="80.8282%" y="527.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (11 samples, 0.20%)</title><rect x="80.5782%" y="501" width="0.2039%" height="15" fill="rgb(241,184,7)" fg:x="4348" fg:w="11"/><text x="80.8282%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (7 samples, 0.13%)</title><rect x="81.0044%" y="517" width="0.1297%" height="15" fill="rgb(235,159,4)" fg:x="4371" fg:w="7"/><text x="81.2544%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (7 samples, 0.13%)</title><rect x="81.0044%" y="501" width="0.1297%" height="15" fill="rgb(214,87,48)" fg:x="4371" fg:w="7"/><text x="81.2544%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (7 samples, 0.13%)</title><rect x="81.0044%" y="485" width="0.1297%" height="15" fill="rgb(246,198,24)" fg:x="4371" fg:w="7"/><text x="81.2544%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.02%)</title><rect x="81.1342%" y="517" width="0.0185%" height="15" fill="rgb(209,66,40)" fg:x="4378" fg:w="1"/><text x="81.3842%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (6 samples, 0.11%)</title><rect x="81.1898%" y="501" width="0.1112%" height="15" fill="rgb(233,147,39)" fg:x="4381" fg:w="6"/><text x="81.4398%" y="511.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (6 samples, 0.11%)</title><rect x="81.1898%" y="485" width="0.1112%" height="15" fill="rgb(231,145,52)" fg:x="4381" fg:w="6"/><text x="81.4398%" y="495.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (6 samples, 0.11%)</title><rect x="81.1898%" y="469" width="0.1112%" height="15" fill="rgb(206,20,26)" fg:x="4381" fg:w="6"/><text x="81.4398%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="81.3195%" y="453" width="0.0185%" height="15" fill="rgb(238,220,4)" fg:x="4388" fg:w="1"/><text x="81.5695%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.15%)</title><rect x="81.3380%" y="453" width="0.1483%" height="15" fill="rgb(252,195,42)" fg:x="4389" fg:w="8"/><text x="81.5880%" y="463.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.11%)</title><rect x="81.3751%" y="437" width="0.1112%" height="15" fill="rgb(209,10,6)" fg:x="4391" fg:w="6"/><text x="81.6251%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.04%)</title><rect x="81.4863%" y="453" width="0.0371%" height="15" fill="rgb(229,3,52)" fg:x="4397" fg:w="2"/><text x="81.7363%" y="463.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (2 samples, 0.04%)</title><rect x="81.4863%" y="437" width="0.0371%" height="15" fill="rgb(253,49,37)" fg:x="4397" fg:w="2"/><text x="81.7363%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (12 samples, 0.22%)</title><rect x="81.3195%" y="485" width="0.2224%" height="15" fill="rgb(240,103,49)" fg:x="4388" fg:w="12"/><text x="81.5695%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.22%)</title><rect x="81.3195%" y="469" width="0.2224%" height="15" fill="rgb(250,182,30)" fg:x="4388" fg:w="12"/><text x="81.5695%" y="479.50"></text></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect x="81.5234%" y="453" width="0.0185%" height="15" fill="rgb(248,8,30)" fg:x="4399" fg:w="1"/><text x="81.7734%" y="463.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="81.5234%" y="437" width="0.0185%" height="15" fill="rgb(237,120,30)" fg:x="4399" fg:w="1"/><text x="81.7734%" y="447.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.02%)</title><rect x="81.5234%" y="421" width="0.0185%" height="15" fill="rgb(221,146,34)" fg:x="4399" fg:w="1"/><text x="81.7734%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="81.5419%" y="485" width="0.0185%" height="15" fill="rgb(242,55,13)" fg:x="4400" fg:w="1"/><text x="81.7919%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (16 samples, 0.30%)</title><rect x="81.3010%" y="501" width="0.2965%" height="15" fill="rgb(242,112,31)" fg:x="4387" fg:w="16"/><text x="81.5510%" y="511.50"></text></g><g><title>core::ptr::write (2 samples, 0.04%)</title><rect x="81.5604%" y="485" width="0.0371%" height="15" fill="rgb(249,192,27)" fg:x="4401" fg:w="2"/><text x="81.8104%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (1 samples, 0.02%)</title><rect x="81.5975%" y="469" width="0.0185%" height="15" fill="rgb(208,204,44)" fg:x="4403" fg:w="1"/><text x="81.8475%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.02%)</title><rect x="81.7087%" y="437" width="0.0185%" height="15" fill="rgb(208,93,54)" fg:x="4409" fg:w="1"/><text x="81.9587%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.02%)</title><rect x="81.7087%" y="421" width="0.0185%" height="15" fill="rgb(242,1,31)" fg:x="4409" fg:w="1"/><text x="81.9587%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="81.8013%" y="405" width="0.0185%" height="15" fill="rgb(241,83,25)" fg:x="4414" fg:w="1"/><text x="82.0513%" y="415.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.04%)</title><rect x="81.8940%" y="389" width="0.0371%" height="15" fill="rgb(205,169,50)" fg:x="4419" fg:w="2"/><text x="82.1440%" y="399.50"></text></g><g><title>__rust_alloc (2 samples, 0.04%)</title><rect x="81.9311%" y="389" width="0.0371%" height="15" fill="rgb(239,186,37)" fg:x="4421" fg:w="2"/><text x="82.1811%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.17%)</title><rect x="81.8199%" y="405" width="0.1668%" height="15" fill="rgb(205,221,10)" fg:x="4415" fg:w="9"/><text x="82.0699%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="81.9681%" y="389" width="0.0185%" height="15" fill="rgb(218,196,15)" fg:x="4423" fg:w="1"/><text x="82.2181%" y="399.50"></text></g><g><title>core::cmp::max (3 samples, 0.06%)</title><rect x="81.9867%" y="405" width="0.0556%" height="15" fill="rgb(218,196,35)" fg:x="4424" fg:w="3"/><text x="82.2367%" y="415.50"></text></g><g><title>core::cmp::Ord::max (3 samples, 0.06%)</title><rect x="81.9867%" y="389" width="0.0556%" height="15" fill="rgb(233,63,24)" fg:x="4424" fg:w="3"/><text x="82.2367%" y="399.50"></text></g><g><title>core::cmp::max_by (3 samples, 0.06%)</title><rect x="81.9867%" y="373" width="0.0556%" height="15" fill="rgb(225,8,4)" fg:x="4424" fg:w="3"/><text x="82.2367%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (25 samples, 0.46%)</title><rect x="81.6160%" y="469" width="0.4633%" height="15" fill="rgb(234,105,35)" fg:x="4404" fg:w="25"/><text x="81.8660%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (25 samples, 0.46%)</title><rect x="81.6160%" y="453" width="0.4633%" height="15" fill="rgb(236,21,32)" fg:x="4404" fg:w="25"/><text x="81.8660%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (19 samples, 0.35%)</title><rect x="81.7272%" y="437" width="0.3521%" height="15" fill="rgb(228,109,6)" fg:x="4410" fg:w="19"/><text x="81.9772%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (19 samples, 0.35%)</title><rect x="81.7272%" y="421" width="0.3521%" height="15" fill="rgb(229,215,31)" fg:x="4410" fg:w="19"/><text x="81.9772%" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.04%)</title><rect x="82.0423%" y="405" width="0.0371%" height="15" fill="rgb(221,52,54)" fg:x="4427" fg:w="2"/><text x="82.2923%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.04%)</title><rect x="82.0423%" y="389" width="0.0371%" height="15" fill="rgb(252,129,43)" fg:x="4427" fg:w="2"/><text x="82.2923%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (27 samples, 0.50%)</title><rect x="81.5975%" y="501" width="0.5004%" height="15" fill="rgb(248,183,27)" fg:x="4403" fg:w="27"/><text x="81.8475%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (27 samples, 0.50%)</title><rect x="81.5975%" y="485" width="0.5004%" height="15" fill="rgb(250,0,22)" fg:x="4403" fg:w="27"/><text x="81.8475%" y="495.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::new (1 samples, 0.02%)</title><rect x="82.0793%" y="469" width="0.0185%" height="15" fill="rgb(213,166,10)" fg:x="4429" fg:w="1"/><text x="82.3293%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (2 samples, 0.04%)</title><rect x="82.0979%" y="501" width="0.0371%" height="15" fill="rgb(207,163,36)" fg:x="4430" fg:w="2"/><text x="82.3479%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (2 samples, 0.04%)</title><rect x="82.0979%" y="485" width="0.0371%" height="15" fill="rgb(208,122,22)" fg:x="4430" fg:w="2"/><text x="82.3479%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;lluvia::VCBlock&lt;&amp;str&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="82.1349%" y="501" width="0.0185%" height="15" fill="rgb(207,104,49)" fg:x="4432" fg:w="1"/><text x="82.3849%" y="511.50"></text></g><g><title>lluvia::VecContainer&lt;T&gt;::ensure_space_for_id (81 samples, 1.50%)</title><rect x="81.1527%" y="517" width="1.5011%" height="15" fill="rgb(248,211,50)" fg:x="4379" fg:w="81"/><text x="81.4027%" y="527.50"></text></g><g><title>lluvia::VecContainer&lt;T&gt;::get_indices (27 samples, 0.50%)</title><rect x="82.1534%" y="501" width="0.5004%" height="15" fill="rgb(217,13,45)" fg:x="4433" fg:w="27"/><text x="82.4034%" y="511.50"></text></g><g><title>&lt;lluvia::VecContainer&lt;T&gt; as lluvia::Container&lt;T&gt;&gt;::set (127 samples, 2.35%)</title><rect x="80.7821%" y="533" width="2.3536%" height="15" fill="rgb(211,216,49)" fg:x="4359" fg:w="127"/><text x="81.0321%" y="543.50">&lt;..</text></g><g><title>lluvia::VecContainer&lt;T&gt;::get_indices (26 samples, 0.48%)</title><rect x="82.6538%" y="517" width="0.4818%" height="15" fill="rgb(221,58,53)" fg:x="4460" fg:w="26"/><text x="82.9038%" y="527.50"></text></g><g><title>std::sync::poison::Flag::done (7 samples, 0.13%)</title><rect x="83.2283%" y="501" width="0.1297%" height="15" fill="rgb(220,112,41)" fg:x="4491" fg:w="7"/><text x="83.4783%" y="511.50"></text></g><g><title>std::thread::panicking (1 samples, 0.02%)</title><rect x="83.3395%" y="485" width="0.0185%" height="15" fill="rgb(236,38,28)" fg:x="4497" fg:w="1"/><text x="83.5895%" y="495.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.02%)</title><rect x="83.3395%" y="469" width="0.0185%" height="15" fill="rgb(227,195,22)" fg:x="4497" fg:w="1"/><text x="83.5895%" y="479.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.02%)</title><rect x="83.3395%" y="453" width="0.0185%" height="15" fill="rgb(214,55,33)" fg:x="4497" fg:w="1"/><text x="83.5895%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="83.3395%" y="437" width="0.0185%" height="15" fill="rgb(248,80,13)" fg:x="4497" fg:w="1"/><text x="83.5895%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="83.3395%" y="421" width="0.0185%" height="15" fill="rgb(238,52,6)" fg:x="4497" fg:w="1"/><text x="83.5895%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;lluvia::TableInternal&lt;&amp;str,lluvia::VecContainer&lt;&amp;str&gt;&gt;&gt;&gt; (21 samples, 0.39%)</title><rect x="83.1357%" y="533" width="0.3892%" height="15" fill="rgb(224,198,47)" fg:x="4486" fg:w="21"/><text x="83.3857%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.39%)</title><rect x="83.1357%" y="517" width="0.3892%" height="15" fill="rgb(233,171,20)" fg:x="4486" fg:w="21"/><text x="83.3857%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_unlock (9 samples, 0.17%)</title><rect x="83.3580%" y="501" width="0.1668%" height="15" fill="rgb(241,30,25)" fg:x="4498" fg:w="9"/><text x="83.6080%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (9 samples, 0.17%)</title><rect x="83.3580%" y="485" width="0.1668%" height="15" fill="rgb(207,171,38)" fg:x="4498" fg:w="9"/><text x="83.6080%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_sub (9 samples, 0.17%)</title><rect x="83.3580%" y="469" width="0.1668%" height="15" fill="rgb(234,70,1)" fg:x="4498" fg:w="9"/><text x="83.6080%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="83.7658%" y="517" width="0.0185%" height="15" fill="rgb(232,178,18)" fg:x="4520" fg:w="1"/><text x="84.0158%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.02%)</title><rect x="83.7658%" y="501" width="0.0185%" height="15" fill="rgb(241,78,40)" fg:x="4520" fg:w="1"/><text x="84.0158%" y="511.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="83.7658%" y="485" width="0.0185%" height="15" fill="rgb(222,35,25)" fg:x="4520" fg:w="1"/><text x="84.0158%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;lluvia::InstanceInternal&gt;&gt; (7 samples, 0.13%)</title><rect x="83.7843%" y="517" width="0.1297%" height="15" fill="rgb(207,92,16)" fg:x="4521" fg:w="7"/><text x="84.0343%" y="527.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.13%)</title><rect x="83.7843%" y="501" width="0.1297%" height="15" fill="rgb(216,59,51)" fg:x="4521" fg:w="7"/><text x="84.0343%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (7 samples, 0.13%)</title><rect x="83.7843%" y="485" width="0.1297%" height="15" fill="rgb(213,80,28)" fg:x="4521" fg:w="7"/><text x="84.0343%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (7 samples, 0.13%)</title><rect x="83.7843%" y="469" width="0.1297%" height="15" fill="rgb(220,93,7)" fg:x="4521" fg:w="7"/><text x="84.0343%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (7 samples, 0.13%)</title><rect x="83.7843%" y="453" width="0.1297%" height="15" fill="rgb(225,24,44)" fg:x="4521" fg:w="7"/><text x="84.0343%" y="463.50"></text></g><g><title>lluvia::IdTable::id_is_valid (5 samples, 0.09%)</title><rect x="83.9140%" y="517" width="0.0927%" height="15" fill="rgb(243,74,40)" fg:x="4528" fg:w="5"/><text x="84.1640%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (12 samples, 0.22%)</title><rect x="84.0067%" y="485" width="0.2224%" height="15" fill="rgb(228,39,7)" fg:x="4533" fg:w="12"/><text x="84.2567%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (12 samples, 0.22%)</title><rect x="84.0067%" y="469" width="0.2224%" height="15" fill="rgb(227,79,8)" fg:x="4533" fg:w="12"/><text x="84.2567%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (7 samples, 0.13%)</title><rect x="84.2291%" y="485" width="0.1297%" height="15" fill="rgb(236,58,11)" fg:x="4545" fg:w="7"/><text x="84.4791%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (7 samples, 0.13%)</title><rect x="84.2291%" y="469" width="0.1297%" height="15" fill="rgb(249,63,35)" fg:x="4545" fg:w="7"/><text x="84.4791%" y="479.50"></text></g><g><title>lluvia::Instance::id_is_valid (49 samples, 0.91%)</title><rect x="83.5248%" y="533" width="0.9081%" height="15" fill="rgb(252,114,16)" fg:x="4507" fg:w="49"/><text x="83.7748%" y="543.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (23 samples, 0.43%)</title><rect x="84.0067%" y="517" width="0.4262%" height="15" fill="rgb(254,151,24)" fg:x="4533" fg:w="23"/><text x="84.2567%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (23 samples, 0.43%)</title><rect x="84.0067%" y="501" width="0.4262%" height="15" fill="rgb(253,54,39)" fg:x="4533" fg:w="23"/><text x="84.2567%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::is_read_lockable (4 samples, 0.07%)</title><rect x="84.3588%" y="485" width="0.0741%" height="15" fill="rgb(243,25,45)" fg:x="4552" fg:w="4"/><text x="84.6088%" y="495.50"></text></g><g><title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (4 samples, 0.07%)</title><rect x="84.4329%" y="517" width="0.0741%" height="15" fill="rgb(234,134,9)" fg:x="4556" fg:w="4"/><text x="84.6829%" y="527.50"></text></g><g><title>std::sync::poison::Flag::guard (4 samples, 0.07%)</title><rect x="84.4329%" y="501" width="0.0741%" height="15" fill="rgb(227,166,31)" fg:x="4556" fg:w="4"/><text x="84.6829%" y="511.50"></text></g><g><title>std::thread::panicking (4 samples, 0.07%)</title><rect x="84.4329%" y="485" width="0.0741%" height="15" fill="rgb(245,143,41)" fg:x="4556" fg:w="4"/><text x="84.6829%" y="495.50"></text></g><g><title>std::panicking::panicking (4 samples, 0.07%)</title><rect x="84.4329%" y="469" width="0.0741%" height="15" fill="rgb(238,181,32)" fg:x="4556" fg:w="4"/><text x="84.6829%" y="479.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (4 samples, 0.07%)</title><rect x="84.4329%" y="453" width="0.0741%" height="15" fill="rgb(224,113,18)" fg:x="4556" fg:w="4"/><text x="84.6829%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="84.4885%" y="437" width="0.0185%" height="15" fill="rgb(240,229,28)" fg:x="4559" fg:w="1"/><text x="84.7385%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="84.4885%" y="421" width="0.0185%" height="15" fill="rgb(250,185,3)" fg:x="4559" fg:w="1"/><text x="84.7385%" y="431.50"></text></g><g><title>lluvia::RawComponent&lt;T,C&gt;::set (279 samples, 5.17%)</title><rect x="79.7443%" y="549" width="5.1705%" height="15" fill="rgb(212,59,25)" fg:x="4303" fg:w="279"/><text x="79.9943%" y="559.50">lluvia..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (26 samples, 0.48%)</title><rect x="84.4329%" y="533" width="0.4818%" height="15" fill="rgb(221,87,20)" fg:x="4556" fg:w="26"/><text x="84.6829%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write (22 samples, 0.41%)</title><rect x="84.5070%" y="517" width="0.4077%" height="15" fill="rgb(213,74,28)" fg:x="4560" fg:w="22"/><text x="84.7570%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (18 samples, 0.33%)</title><rect x="84.5812%" y="501" width="0.3336%" height="15" fill="rgb(224,132,34)" fg:x="4564" fg:w="18"/><text x="84.8312%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (18 samples, 0.33%)</title><rect x="84.5812%" y="485" width="0.3336%" height="15" fill="rgb(222,101,24)" fg:x="4564" fg:w="18"/><text x="84.8312%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.19%)</title><rect x="84.9333%" y="533" width="0.1853%" height="15" fill="rgb(254,142,4)" fg:x="4583" fg:w="10"/><text x="85.1833%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (10 samples, 0.19%)</title><rect x="84.9333%" y="517" width="0.1853%" height="15" fill="rgb(230,229,49)" fg:x="4583" fg:w="10"/><text x="85.1833%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_add (10 samples, 0.19%)</title><rect x="84.9333%" y="501" width="0.1853%" height="15" fill="rgb(238,70,47)" fg:x="4583" fg:w="10"/><text x="85.1833%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.07%)</title><rect x="85.5078%" y="517" width="0.0741%" height="15" fill="rgb(231,160,17)" fg:x="4614" fg:w="4"/><text x="85.7578%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (4 samples, 0.07%)</title><rect x="85.5078%" y="501" width="0.0741%" height="15" fill="rgb(218,68,53)" fg:x="4614" fg:w="4"/><text x="85.7578%" y="511.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (4 samples, 0.07%)</title><rect x="85.5078%" y="485" width="0.0741%" height="15" fill="rgb(236,111,10)" fg:x="4614" fg:w="4"/><text x="85.7578%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (2 samples, 0.04%)</title><rect x="85.8599%" y="501" width="0.0371%" height="15" fill="rgb(224,34,41)" fg:x="4633" fg:w="2"/><text x="86.1099%" y="511.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (2 samples, 0.04%)</title><rect x="85.8599%" y="485" width="0.0371%" height="15" fill="rgb(241,118,19)" fg:x="4633" fg:w="2"/><text x="86.1099%" y="495.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.04%)</title><rect x="85.8599%" y="469" width="0.0371%" height="15" fill="rgb(238,129,25)" fg:x="4633" fg:w="2"/><text x="86.1099%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (2 samples, 0.04%)</title><rect x="85.8970%" y="501" width="0.0371%" height="15" fill="rgb(238,22,31)" fg:x="4635" fg:w="2"/><text x="86.1470%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt; (3 samples, 0.06%)</title><rect x="85.9340%" y="501" width="0.0556%" height="15" fill="rgb(222,174,48)" fg:x="4637" fg:w="3"/><text x="86.1840%" y="511.50"></text></g><g><title>_int_malloc (13 samples, 0.24%)</title><rect x="86.6568%" y="405" width="0.2409%" height="15" fill="rgb(206,152,40)" fg:x="4676" fg:w="13"/><text x="86.9068%" y="415.50"></text></g><g><title>__GI___libc_malloc (25 samples, 0.46%)</title><rect x="86.4529%" y="421" width="0.4633%" height="15" fill="rgb(218,99,54)" fg:x="4665" fg:w="25"/><text x="86.7029%" y="431.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="86.8977%" y="405" width="0.0185%" height="15" fill="rgb(220,174,26)" fg:x="4689" fg:w="1"/><text x="87.1477%" y="415.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="86.8977%" y="389" width="0.0185%" height="15" fill="rgb(245,116,9)" fg:x="4689" fg:w="1"/><text x="87.1477%" y="399.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="86.8977%" y="373" width="0.0185%" height="15" fill="rgb(209,72,35)" fg:x="4689" fg:w="1"/><text x="87.1477%" y="383.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="86.8977%" y="357" width="0.0185%" height="15" fill="rgb(226,126,21)" fg:x="4689" fg:w="1"/><text x="87.1477%" y="367.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="86.8977%" y="341" width="0.0185%" height="15" fill="rgb(227,192,1)" fg:x="4689" fg:w="1"/><text x="87.1477%" y="351.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="86.8977%" y="325" width="0.0185%" height="15" fill="rgb(237,180,29)" fg:x="4689" fg:w="1"/><text x="87.1477%" y="335.50"></text></g><g><title>tick_sched_handle.isra.0 (1 samples, 0.02%)</title><rect x="86.8977%" y="309" width="0.0185%" height="15" fill="rgb(230,197,35)" fg:x="4689" fg:w="1"/><text x="87.1477%" y="319.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="86.8977%" y="293" width="0.0185%" height="15" fill="rgb(246,193,31)" fg:x="4689" fg:w="1"/><text x="87.1477%" y="303.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="86.8977%" y="277" width="0.0185%" height="15" fill="rgb(241,36,4)" fg:x="4689" fg:w="1"/><text x="87.1477%" y="287.50"></text></g><g><title>task_tick_fair (1 samples, 0.02%)</title><rect x="86.8977%" y="261" width="0.0185%" height="15" fill="rgb(241,130,17)" fg:x="4689" fg:w="1"/><text x="87.1477%" y="271.50"></text></g><g><title>update_load_avg (1 samples, 0.02%)</title><rect x="86.8977%" y="245" width="0.0185%" height="15" fill="rgb(206,137,32)" fg:x="4689" fg:w="1"/><text x="87.1477%" y="255.50"></text></g><g><title>cpufreq_this_cpu_can_update (1 samples, 0.02%)</title><rect x="86.8977%" y="229" width="0.0185%" height="15" fill="rgb(237,228,51)" fg:x="4689" fg:w="1"/><text x="87.1477%" y="239.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="86.9162%" y="421" width="0.0185%" height="15" fill="rgb(243,6,42)" fg:x="4690" fg:w="1"/><text x="87.1662%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="86.9162%" y="405" width="0.0185%" height="15" fill="rgb(251,74,28)" fg:x="4690" fg:w="1"/><text x="87.1662%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (32 samples, 0.59%)</title><rect x="86.4344%" y="437" width="0.5930%" height="15" fill="rgb(218,20,49)" fg:x="4664" fg:w="32"/><text x="86.6844%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (5 samples, 0.09%)</title><rect x="86.9348%" y="421" width="0.0927%" height="15" fill="rgb(238,28,14)" fg:x="4691" fg:w="5"/><text x="87.1848%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (39 samples, 0.72%)</title><rect x="86.3232%" y="485" width="0.7228%" height="15" fill="rgb(229,40,46)" fg:x="4658" fg:w="39"/><text x="86.5732%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (34 samples, 0.63%)</title><rect x="86.4159%" y="469" width="0.6301%" height="15" fill="rgb(244,195,20)" fg:x="4663" fg:w="34"/><text x="86.6659%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (34 samples, 0.63%)</title><rect x="86.4159%" y="453" width="0.6301%" height="15" fill="rgb(253,56,35)" fg:x="4663" fg:w="34"/><text x="86.6659%" y="463.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="87.0274%" y="437" width="0.0185%" height="15" fill="rgb(210,149,44)" fg:x="4696" fg:w="1"/><text x="87.2774%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.02%)</title><rect x="87.0274%" y="421" width="0.0185%" height="15" fill="rgb(240,135,12)" fg:x="4696" fg:w="1"/><text x="87.2774%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (3 samples, 0.06%)</title><rect x="87.1016%" y="453" width="0.0556%" height="15" fill="rgb(251,24,50)" fg:x="4700" fg:w="3"/><text x="87.3516%" y="463.50"></text></g><g><title>&lt;core::iter::sources::repeat_with::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.06%)</title><rect x="87.1016%" y="437" width="0.0556%" height="15" fill="rgb(243,200,47)" fg:x="4700" fg:w="3"/><text x="87.3516%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.02%)</title><rect x="87.2313%" y="421" width="0.0185%" height="15" fill="rgb(224,166,26)" fg:x="4707" fg:w="1"/><text x="87.4813%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.02%)</title><rect x="87.2313%" y="405" width="0.0185%" height="15" fill="rgb(233,0,47)" fg:x="4707" fg:w="1"/><text x="87.4813%" y="415.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="87.3054%" y="373" width="0.0185%" height="15" fill="rgb(253,80,5)" fg:x="4711" fg:w="1"/><text x="87.5554%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.06%)</title><rect x="87.2869%" y="389" width="0.0556%" height="15" fill="rgb(214,133,25)" fg:x="4710" fg:w="3"/><text x="87.5369%" y="399.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="87.3239%" y="373" width="0.0185%" height="15" fill="rgb(209,27,14)" fg:x="4712" fg:w="1"/><text x="87.5739%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (14 samples, 0.26%)</title><rect x="87.1572%" y="453" width="0.2595%" height="15" fill="rgb(219,102,51)" fg:x="4703" fg:w="14"/><text x="87.4072%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (14 samples, 0.26%)</title><rect x="87.1572%" y="437" width="0.2595%" height="15" fill="rgb(237,18,16)" fg:x="4703" fg:w="14"/><text x="87.4072%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.17%)</title><rect x="87.2498%" y="421" width="0.1668%" height="15" fill="rgb(241,85,17)" fg:x="4708" fg:w="9"/><text x="87.4998%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.17%)</title><rect x="87.2498%" y="405" width="0.1668%" height="15" fill="rgb(236,90,42)" fg:x="4708" fg:w="9"/><text x="87.4998%" y="415.50"></text></g><g><title>core::cmp::max (4 samples, 0.07%)</title><rect x="87.3425%" y="389" width="0.0741%" height="15" fill="rgb(249,57,21)" fg:x="4713" fg:w="4"/><text x="87.5925%" y="399.50"></text></g><g><title>core::cmp::Ord::max (4 samples, 0.07%)</title><rect x="87.3425%" y="373" width="0.0741%" height="15" fill="rgb(243,12,36)" fg:x="4713" fg:w="4"/><text x="87.5925%" y="383.50"></text></g><g><title>core::cmp::max_by (4 samples, 0.07%)</title><rect x="87.3425%" y="357" width="0.0741%" height="15" fill="rgb(253,128,47)" fg:x="4713" fg:w="4"/><text x="87.5925%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (21 samples, 0.39%)</title><rect x="87.0460%" y="485" width="0.3892%" height="15" fill="rgb(207,33,20)" fg:x="4697" fg:w="21"/><text x="87.2960%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (18 samples, 0.33%)</title><rect x="87.1016%" y="469" width="0.3336%" height="15" fill="rgb(233,215,35)" fg:x="4700" fg:w="18"/><text x="87.3516%" y="479.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::new (1 samples, 0.02%)</title><rect x="87.4166%" y="453" width="0.0185%" height="15" fill="rgb(249,188,52)" fg:x="4717" fg:w="1"/><text x="87.6666%" y="463.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="87.4351%" y="485" width="0.0185%" height="15" fill="rgb(225,12,32)" fg:x="4718" fg:w="1"/><text x="87.6851%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="87.4351%" y="469" width="0.0185%" height="15" fill="rgb(247,98,14)" fg:x="4718" fg:w="1"/><text x="87.6851%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.02%)</title><rect x="87.4351%" y="453" width="0.0185%" height="15" fill="rgb(247,219,48)" fg:x="4718" fg:w="1"/><text x="87.6851%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (4 samples, 0.07%)</title><rect x="87.4537%" y="485" width="0.0741%" height="15" fill="rgb(253,60,48)" fg:x="4719" fg:w="4"/><text x="87.7037%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (4 samples, 0.07%)</title><rect x="87.4537%" y="469" width="0.0741%" height="15" fill="rgb(245,15,52)" fg:x="4719" fg:w="4"/><text x="87.7037%" y="479.50"></text></g><g><title>lluvia::VecContainer&lt;T&gt;::ensure_space_for_id (119 samples, 2.21%)</title><rect x="85.9896%" y="501" width="2.2053%" height="15" fill="rgb(220,133,28)" fg:x="4640" fg:w="119"/><text x="86.2396%" y="511.50">l..</text></g><g><title>lluvia::VecContainer&lt;T&gt;::get_indices (36 samples, 0.67%)</title><rect x="87.5278%" y="485" width="0.6672%" height="15" fill="rgb(217,180,4)" fg:x="4723" fg:w="36"/><text x="87.7778%" y="495.50"></text></g><g><title>&lt;lluvia::VecContainer&lt;T&gt; as lluvia::Container&lt;T&gt;&gt;::set (173 samples, 3.21%)</title><rect x="85.5819%" y="517" width="3.2061%" height="15" fill="rgb(251,24,1)" fg:x="4618" fg:w="173"/><text x="85.8319%" y="527.50">&lt;ll..</text></g><g><title>lluvia::VecContainer&lt;T&gt;::get_indices (32 samples, 0.59%)</title><rect x="88.1950%" y="501" width="0.5930%" height="15" fill="rgb(212,185,49)" fg:x="4759" fg:w="32"/><text x="88.4450%" y="511.50"></text></g><g><title>std::sync::poison::Flag::done (13 samples, 0.24%)</title><rect x="88.8251%" y="485" width="0.2409%" height="15" fill="rgb(215,175,22)" fg:x="4793" fg:w="13"/><text x="89.0751%" y="495.50"></text></g><g><title>std::thread::panicking (4 samples, 0.07%)</title><rect x="88.9918%" y="469" width="0.0741%" height="15" fill="rgb(250,205,14)" fg:x="4802" fg:w="4"/><text x="89.2418%" y="479.50"></text></g><g><title>std::panicking::panicking (4 samples, 0.07%)</title><rect x="88.9918%" y="453" width="0.0741%" height="15" fill="rgb(225,211,22)" fg:x="4802" fg:w="4"/><text x="89.2418%" y="463.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (4 samples, 0.07%)</title><rect x="88.9918%" y="437" width="0.0741%" height="15" fill="rgb(251,179,42)" fg:x="4802" fg:w="4"/><text x="89.2418%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="89.0474%" y="421" width="0.0185%" height="15" fill="rgb(208,216,51)" fg:x="4805" fg:w="1"/><text x="89.2974%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="89.0474%" y="405" width="0.0185%" height="15" fill="rgb(235,36,11)" fg:x="4805" fg:w="1"/><text x="89.2974%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;lluvia::TableInternal&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;,lluvia::VecContainer&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt;&gt; (29 samples, 0.54%)</title><rect x="88.7880%" y="517" width="0.5374%" height="15" fill="rgb(213,189,28)" fg:x="4791" fg:w="29"/><text x="89.0380%" y="527.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.54%)</title><rect x="88.7880%" y="501" width="0.5374%" height="15" fill="rgb(227,203,42)" fg:x="4791" fg:w="29"/><text x="89.0380%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_unlock (14 samples, 0.26%)</title><rect x="89.0660%" y="485" width="0.2595%" height="15" fill="rgb(244,72,36)" fg:x="4806" fg:w="14"/><text x="89.3160%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (14 samples, 0.26%)</title><rect x="89.0660%" y="469" width="0.2595%" height="15" fill="rgb(213,53,17)" fg:x="4806" fg:w="14"/><text x="89.3160%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (14 samples, 0.26%)</title><rect x="89.0660%" y="453" width="0.2595%" height="15" fill="rgb(207,167,3)" fg:x="4806" fg:w="14"/><text x="89.3160%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (4 samples, 0.07%)</title><rect x="89.3254%" y="517" width="0.0741%" height="15" fill="rgb(216,98,30)" fg:x="4820" fg:w="4"/><text x="89.5754%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (9 samples, 0.17%)</title><rect x="89.6961%" y="501" width="0.1668%" height="15" fill="rgb(236,123,15)" fg:x="4840" fg:w="9"/><text x="89.9461%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (9 samples, 0.17%)</title><rect x="89.6961%" y="485" width="0.1668%" height="15" fill="rgb(248,81,50)" fg:x="4840" fg:w="9"/><text x="89.9461%" y="495.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (9 samples, 0.17%)</title><rect x="89.6961%" y="469" width="0.1668%" height="15" fill="rgb(214,120,4)" fg:x="4840" fg:w="9"/><text x="89.9461%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;lluvia::InstanceInternal&gt;&gt; (12 samples, 0.22%)</title><rect x="89.8629%" y="501" width="0.2224%" height="15" fill="rgb(208,179,34)" fg:x="4849" fg:w="12"/><text x="90.1129%" y="511.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.22%)</title><rect x="89.8629%" y="485" width="0.2224%" height="15" fill="rgb(227,140,7)" fg:x="4849" fg:w="12"/><text x="90.1129%" y="495.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (12 samples, 0.22%)</title><rect x="89.8629%" y="469" width="0.2224%" height="15" fill="rgb(214,22,6)" fg:x="4849" fg:w="12"/><text x="90.1129%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (11 samples, 0.20%)</title><rect x="89.8814%" y="453" width="0.2039%" height="15" fill="rgb(207,137,27)" fg:x="4850" fg:w="11"/><text x="90.1314%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (11 samples, 0.20%)</title><rect x="89.8814%" y="437" width="0.2039%" height="15" fill="rgb(210,8,46)" fg:x="4850" fg:w="11"/><text x="90.1314%" y="447.50"></text></g><g><title>lluvia::IdTable::id_is_valid (13 samples, 0.24%)</title><rect x="90.0852%" y="501" width="0.2409%" height="15" fill="rgb(240,16,54)" fg:x="4861" fg:w="13"/><text x="90.3352%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (30 samples, 0.56%)</title><rect x="90.3447%" y="469" width="0.5560%" height="15" fill="rgb(211,209,29)" fg:x="4875" fg:w="30"/><text x="90.5947%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (30 samples, 0.56%)</title><rect x="90.3447%" y="453" width="0.5560%" height="15" fill="rgb(226,228,24)" fg:x="4875" fg:w="30"/><text x="90.5947%" y="463.50"></text></g><g><title>lluvia::Instance::id_is_valid (84 samples, 1.56%)</title><rect x="89.3996%" y="517" width="1.5567%" height="15" fill="rgb(222,84,9)" fg:x="4824" fg:w="84"/><text x="89.6496%" y="527.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (34 samples, 0.63%)</title><rect x="90.3262%" y="501" width="0.6301%" height="15" fill="rgb(234,203,30)" fg:x="4874" fg:w="34"/><text x="90.5762%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (34 samples, 0.63%)</title><rect x="90.3262%" y="485" width="0.6301%" height="15" fill="rgb(238,109,14)" fg:x="4874" fg:w="34"/><text x="90.5762%" y="495.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::is_read_lockable (3 samples, 0.06%)</title><rect x="90.9007%" y="469" width="0.0556%" height="15" fill="rgb(233,206,34)" fg:x="4905" fg:w="3"/><text x="91.1507%" y="479.50"></text></g><g><title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (5 samples, 0.09%)</title><rect x="90.9563%" y="501" width="0.0927%" height="15" fill="rgb(220,167,47)" fg:x="4908" fg:w="5"/><text x="91.2063%" y="511.50"></text></g><g><title>std::sync::poison::Flag::guard (5 samples, 0.09%)</title><rect x="90.9563%" y="485" width="0.0927%" height="15" fill="rgb(238,105,10)" fg:x="4908" fg:w="5"/><text x="91.2063%" y="495.50"></text></g><g><title>std::thread::panicking (5 samples, 0.09%)</title><rect x="90.9563%" y="469" width="0.0927%" height="15" fill="rgb(213,227,17)" fg:x="4908" fg:w="5"/><text x="91.2063%" y="479.50"></text></g><g><title>std::panicking::panicking (5 samples, 0.09%)</title><rect x="90.9563%" y="453" width="0.0927%" height="15" fill="rgb(217,132,38)" fg:x="4908" fg:w="5"/><text x="91.2063%" y="463.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (5 samples, 0.09%)</title><rect x="90.9563%" y="437" width="0.0927%" height="15" fill="rgb(242,146,4)" fg:x="4908" fg:w="5"/><text x="91.2063%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.06%)</title><rect x="90.9933%" y="421" width="0.0556%" height="15" fill="rgb(212,61,9)" fg:x="4910" fg:w="3"/><text x="91.2433%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.06%)</title><rect x="90.9933%" y="405" width="0.0556%" height="15" fill="rgb(247,126,22)" fg:x="4910" fg:w="3"/><text x="91.2433%" y="415.50"></text></g><g><title>lluvia::RawComponent&lt;T,C&gt;::set (359 samples, 6.65%)</title><rect x="85.1186%" y="533" width="6.6531%" height="15" fill="rgb(220,196,2)" fg:x="4593" fg:w="359"/><text x="85.3686%" y="543.50">lluvia::R..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (44 samples, 0.82%)</title><rect x="90.9563%" y="517" width="0.8154%" height="15" fill="rgb(208,46,4)" fg:x="4908" fg:w="44"/><text x="91.2063%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write (39 samples, 0.72%)</title><rect x="91.0489%" y="501" width="0.7228%" height="15" fill="rgb(252,104,46)" fg:x="4913" fg:w="39"/><text x="91.2989%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (38 samples, 0.70%)</title><rect x="91.0675%" y="485" width="0.7042%" height="15" fill="rgb(237,152,48)" fg:x="4914" fg:w="38"/><text x="91.3175%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (38 samples, 0.70%)</title><rect x="91.0675%" y="469" width="0.7042%" height="15" fill="rgb(221,59,37)" fg:x="4914" fg:w="38"/><text x="91.3175%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="91.7717%" y="501" width="0.0185%" height="15" fill="rgb(209,202,51)" fg:x="4952" fg:w="1"/><text x="92.0217%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.02%)</title><rect x="91.7717%" y="485" width="0.0185%" height="15" fill="rgb(228,81,30)" fg:x="4952" fg:w="1"/><text x="92.0217%" y="495.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="91.7717%" y="469" width="0.0185%" height="15" fill="rgb(227,42,39)" fg:x="4952" fg:w="1"/><text x="92.0217%" y="479.50"></text></g><g><title>lluvia::Snapshot&lt;T&gt;::set (660 samples, 12.23%)</title><rect x="79.6887%" y="565" width="12.2313%" height="15" fill="rgb(221,26,2)" fg:x="4300" fg:w="660"/><text x="79.9387%" y="575.50">lluvia::Snapshot&lt;T..</text></g><g><title>lluvia::Snapshot&lt;T&gt;::mark_entity (378 samples, 7.01%)</title><rect x="84.9148%" y="549" width="7.0052%" height="15" fill="rgb(254,61,31)" fg:x="4582" fg:w="378"/><text x="85.1648%" y="559.50">lluvia::S..</text></g><g><title>lluvia::Snapshot&lt;T&gt;::assert_alive (8 samples, 0.15%)</title><rect x="91.7717%" y="533" width="0.1483%" height="15" fill="rgb(222,173,38)" fg:x="4952" fg:w="8"/><text x="92.0217%" y="543.50"></text></g><g><title>lluvia::Snapshot&lt;T&gt;::is_committed (8 samples, 0.15%)</title><rect x="91.7717%" y="517" width="0.1483%" height="15" fill="rgb(218,50,12)" fg:x="4952" fg:w="8"/><text x="92.0217%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (7 samples, 0.13%)</title><rect x="91.7902%" y="501" width="0.1297%" height="15" fill="rgb(223,88,40)" fg:x="4953" fg:w="7"/><text x="92.0402%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (7 samples, 0.13%)</title><rect x="91.7902%" y="485" width="0.1297%" height="15" fill="rgb(237,54,19)" fg:x="4953" fg:w="7"/><text x="92.0402%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.07%)</title><rect x="91.9199%" y="501" width="0.0741%" height="15" fill="rgb(251,129,25)" fg:x="4960" fg:w="4"/><text x="92.1699%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (4 samples, 0.07%)</title><rect x="91.9199%" y="485" width="0.0741%" height="15" fill="rgb(238,97,19)" fg:x="4960" fg:w="4"/><text x="92.1699%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (4 samples, 0.07%)</title><rect x="91.9199%" y="469" width="0.0741%" height="15" fill="rgb(240,169,18)" fg:x="4960" fg:w="4"/><text x="92.1699%" y="479.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (5 samples, 0.09%)</title><rect x="91.9199%" y="533" width="0.0927%" height="15" fill="rgb(230,187,49)" fg:x="4960" fg:w="5"/><text x="92.1699%" y="543.50"></text></g><g><title>&lt;lluvia::RawComponent&lt;T,C&gt; as core::clone::Clone&gt;::clone (5 samples, 0.09%)</title><rect x="91.9199%" y="517" width="0.0927%" height="15" fill="rgb(209,44,26)" fg:x="4960" fg:w="5"/><text x="92.1699%" y="527.50"></text></g><g><title>&lt;lluvia::Table&lt;T,C&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="91.9941%" y="501" width="0.0185%" height="15" fill="rgb(244,0,6)" fg:x="4964" fg:w="1"/><text x="92.2441%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="91.9941%" y="485" width="0.0185%" height="15" fill="rgb(248,18,21)" fg:x="4964" fg:w="1"/><text x="92.2441%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.02%)</title><rect x="91.9941%" y="469" width="0.0185%" height="15" fill="rgb(245,180,19)" fg:x="4964" fg:w="1"/><text x="92.2441%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.02%)</title><rect x="91.9941%" y="453" width="0.0185%" height="15" fill="rgb(252,118,36)" fg:x="4964" fg:w="1"/><text x="92.2441%" y="463.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.22%)</title><rect x="91.9199%" y="549" width="0.2224%" height="15" fill="rgb(210,224,19)" fg:x="4960" fg:w="12"/><text x="92.1699%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (7 samples, 0.13%)</title><rect x="92.0126%" y="533" width="0.1297%" height="15" fill="rgb(218,30,24)" fg:x="4965" fg:w="7"/><text x="92.2626%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (7 samples, 0.13%)</title><rect x="92.0126%" y="517" width="0.1297%" height="15" fill="rgb(219,75,50)" fg:x="4965" fg:w="7"/><text x="92.2626%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.13%)</title><rect x="92.0126%" y="501" width="0.1297%" height="15" fill="rgb(234,72,50)" fg:x="4965" fg:w="7"/><text x="92.2626%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.13%)</title><rect x="92.0126%" y="485" width="0.1297%" height="15" fill="rgb(219,100,48)" fg:x="4965" fg:w="7"/><text x="92.2626%" y="495.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.13%)</title><rect x="92.0126%" y="469" width="0.1297%" height="15" fill="rgb(253,5,41)" fg:x="4965" fg:w="7"/><text x="92.2626%" y="479.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.13%)</title><rect x="92.0126%" y="453" width="0.1297%" height="15" fill="rgb(247,181,11)" fg:x="4965" fg:w="7"/><text x="92.2626%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.19%)</title><rect x="92.1979%" y="485" width="0.1853%" height="15" fill="rgb(222,223,25)" fg:x="4975" fg:w="10"/><text x="92.4479%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (10 samples, 0.19%)</title><rect x="92.1979%" y="469" width="0.1853%" height="15" fill="rgb(214,198,28)" fg:x="4975" fg:w="10"/><text x="92.4479%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_add (10 samples, 0.19%)</title><rect x="92.1979%" y="453" width="0.1853%" height="15" fill="rgb(230,46,43)" fg:x="4975" fg:w="10"/><text x="92.4479%" y="463.50"></text></g><g><title>&lt;lluvia::Instance as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="92.3832%" y="485" width="0.0371%" height="15" fill="rgb(233,65,53)" fg:x="4985" fg:w="2"/><text x="92.6332%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="92.3832%" y="469" width="0.0371%" height="15" fill="rgb(221,121,27)" fg:x="4985" fg:w="2"/><text x="92.6332%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.04%)</title><rect x="92.3832%" y="453" width="0.0371%" height="15" fill="rgb(247,70,47)" fg:x="4985" fg:w="2"/><text x="92.6332%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.04%)</title><rect x="92.3832%" y="437" width="0.0371%" height="15" fill="rgb(228,85,35)" fg:x="4985" fg:w="2"/><text x="92.6332%" y="447.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (14 samples, 0.26%)</title><rect x="92.1979%" y="517" width="0.2595%" height="15" fill="rgb(209,50,18)" fg:x="4975" fg:w="14"/><text x="92.4479%" y="527.50"></text></g><g><title>&lt;lluvia::RawComponent&lt;T,C&gt; as core::clone::Clone&gt;::clone (14 samples, 0.26%)</title><rect x="92.1979%" y="501" width="0.2595%" height="15" fill="rgb(250,19,35)" fg:x="4975" fg:w="14"/><text x="92.4479%" y="511.50"></text></g><g><title>&lt;lluvia::Table&lt;T,C&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="92.4203%" y="485" width="0.0371%" height="15" fill="rgb(253,107,29)" fg:x="4987" fg:w="2"/><text x="92.6703%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="92.4203%" y="469" width="0.0371%" height="15" fill="rgb(252,179,29)" fg:x="4987" fg:w="2"/><text x="92.6703%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.04%)</title><rect x="92.4203%" y="453" width="0.0371%" height="15" fill="rgb(238,194,6)" fg:x="4987" fg:w="2"/><text x="92.6703%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.04%)</title><rect x="92.4203%" y="437" width="0.0371%" height="15" fill="rgb(238,164,29)" fg:x="4987" fg:w="2"/><text x="92.6703%" y="447.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (23 samples, 0.43%)</title><rect x="92.1979%" y="533" width="0.4262%" height="15" fill="rgb(224,25,9)" fg:x="4975" fg:w="23"/><text x="92.4479%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (9 samples, 0.17%)</title><rect x="92.4574%" y="517" width="0.1668%" height="15" fill="rgb(244,153,23)" fg:x="4989" fg:w="9"/><text x="92.7074%" y="527.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (9 samples, 0.17%)</title><rect x="92.4574%" y="501" width="0.1668%" height="15" fill="rgb(212,203,14)" fg:x="4989" fg:w="9"/><text x="92.7074%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.17%)</title><rect x="92.4574%" y="485" width="0.1668%" height="15" fill="rgb(220,164,20)" fg:x="4989" fg:w="9"/><text x="92.7074%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.17%)</title><rect x="92.4574%" y="469" width="0.1668%" height="15" fill="rgb(222,203,48)" fg:x="4989" fg:w="9"/><text x="92.7074%" y="479.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.17%)</title><rect x="92.4574%" y="453" width="0.1668%" height="15" fill="rgb(215,159,22)" fg:x="4989" fg:w="9"/><text x="92.7074%" y="463.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.15%)</title><rect x="92.4759%" y="437" width="0.1483%" height="15" fill="rgb(216,183,47)" fg:x="4990" fg:w="8"/><text x="92.7259%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.17%)</title><rect x="92.6242%" y="533" width="0.1668%" height="15" fill="rgb(229,195,25)" fg:x="4998" fg:w="9"/><text x="92.8742%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (9 samples, 0.17%)</title><rect x="92.6242%" y="517" width="0.1668%" height="15" fill="rgb(224,132,51)" fg:x="4998" fg:w="9"/><text x="92.8742%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_add (9 samples, 0.17%)</title><rect x="92.6242%" y="501" width="0.1668%" height="15" fill="rgb(240,63,7)" fg:x="4998" fg:w="9"/><text x="92.8742%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.17%)</title><rect x="92.7910%" y="517" width="0.1668%" height="15" fill="rgb(249,182,41)" fg:x="5007" fg:w="9"/><text x="93.0410%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (9 samples, 0.17%)</title><rect x="92.7910%" y="501" width="0.1668%" height="15" fill="rgb(243,47,26)" fg:x="5007" fg:w="9"/><text x="93.0410%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_add (9 samples, 0.17%)</title><rect x="92.7910%" y="485" width="0.1668%" height="15" fill="rgb(233,48,2)" fg:x="5007" fg:w="9"/><text x="93.0410%" y="495.50"></text></g><g><title>&lt;lluvia::Instance as core::clone::Clone&gt;::clone (17 samples, 0.32%)</title><rect x="92.9577%" y="517" width="0.3150%" height="15" fill="rgb(244,165,34)" fg:x="5016" fg:w="17"/><text x="93.2077%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.32%)</title><rect x="92.9577%" y="501" width="0.3150%" height="15" fill="rgb(207,89,7)" fg:x="5016" fg:w="17"/><text x="93.2077%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (17 samples, 0.32%)</title><rect x="92.9577%" y="485" width="0.3150%" height="15" fill="rgb(244,117,36)" fg:x="5016" fg:w="17"/><text x="93.2077%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (17 samples, 0.32%)</title><rect x="92.9577%" y="469" width="0.3150%" height="15" fill="rgb(226,144,34)" fg:x="5016" fg:w="17"/><text x="93.2077%" y="479.50"></text></g><g><title>&lt;lluvia::Snapshot&lt;T&gt; as core::clone::Clone&gt;::clone (69 samples, 1.28%)</title><rect x="92.1423%" y="549" width="1.2787%" height="15" fill="rgb(213,23,19)" fg:x="4972" fg:w="69"/><text x="92.3923%" y="559.50"></text></g><g><title>&lt;lluvia::RawComponent&lt;T,C&gt; as core::clone::Clone&gt;::clone (34 samples, 0.63%)</title><rect x="92.7910%" y="533" width="0.6301%" height="15" fill="rgb(217,75,12)" fg:x="5007" fg:w="34"/><text x="93.0410%" y="543.50"></text></g><g><title>&lt;lluvia::Table&lt;T,C&gt; as core::clone::Clone&gt;::clone (8 samples, 0.15%)</title><rect x="93.2728%" y="517" width="0.1483%" height="15" fill="rgb(224,159,17)" fg:x="5033" fg:w="8"/><text x="93.5228%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.13%)</title><rect x="93.2913%" y="501" width="0.1297%" height="15" fill="rgb(217,118,1)" fg:x="5034" fg:w="7"/><text x="93.5413%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (7 samples, 0.13%)</title><rect x="93.2913%" y="485" width="0.1297%" height="15" fill="rgb(232,180,48)" fg:x="5034" fg:w="7"/><text x="93.5413%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (7 samples, 0.13%)</title><rect x="93.2913%" y="469" width="0.1297%" height="15" fill="rgb(230,27,33)" fg:x="5034" fg:w="7"/><text x="93.5413%" y="479.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.24%)</title><rect x="93.4766%" y="469" width="0.2409%" height="15" fill="rgb(205,31,21)" fg:x="5044" fg:w="13"/><text x="93.7266%" y="479.50"></text></g><g><title>__rdl_alloc (2 samples, 0.04%)</title><rect x="93.7176%" y="469" width="0.0371%" height="15" fill="rgb(253,59,4)" fg:x="5057" fg:w="2"/><text x="93.9676%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.04%)</title><rect x="93.7176%" y="453" width="0.0371%" height="15" fill="rgb(224,201,9)" fg:x="5057" fg:w="2"/><text x="93.9676%" y="463.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (19 samples, 0.35%)</title><rect x="93.4211%" y="549" width="0.3521%" height="15" fill="rgb(229,206,30)" fg:x="5041" fg:w="19"/><text x="93.6711%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (19 samples, 0.35%)</title><rect x="93.4211%" y="533" width="0.3521%" height="15" fill="rgb(212,67,47)" fg:x="5041" fg:w="19"/><text x="93.6711%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.33%)</title><rect x="93.4396%" y="517" width="0.3336%" height="15" fill="rgb(211,96,50)" fg:x="5042" fg:w="18"/><text x="93.6896%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.33%)</title><rect x="93.4396%" y="501" width="0.3336%" height="15" fill="rgb(252,114,18)" fg:x="5042" fg:w="18"/><text x="93.6896%" y="511.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.33%)</title><rect x="93.4396%" y="485" width="0.3336%" height="15" fill="rgb(223,58,37)" fg:x="5042" fg:w="18"/><text x="93.6896%" y="495.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="93.7546%" y="469" width="0.0185%" height="15" fill="rgb(237,70,4)" fg:x="5059" fg:w="1"/><text x="94.0046%" y="479.50"></text></g><g><title>&lt;lluvia::Instance as core::clone::Clone&gt;::clone (3 samples, 0.06%)</title><rect x="93.8844%" y="533" width="0.0556%" height="15" fill="rgb(244,85,46)" fg:x="5066" fg:w="3"/><text x="94.1344%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.06%)</title><rect x="93.8844%" y="517" width="0.0556%" height="15" fill="rgb(223,39,52)" fg:x="5066" fg:w="3"/><text x="94.1344%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.06%)</title><rect x="93.8844%" y="501" width="0.0556%" height="15" fill="rgb(218,200,14)" fg:x="5066" fg:w="3"/><text x="94.1344%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.06%)</title><rect x="93.8844%" y="485" width="0.0556%" height="15" fill="rgb(208,171,16)" fg:x="5066" fg:w="3"/><text x="94.1344%" y="495.50"></text></g><g><title>__GI___libc_malloc (57 samples, 1.06%)</title><rect x="94.0882%" y="437" width="1.0563%" height="15" fill="rgb(234,200,18)" fg:x="5077" fg:w="57"/><text x="94.3382%" y="447.50"></text></g><g><title>_int_malloc (15 samples, 0.28%)</title><rect x="94.8666%" y="421" width="0.2780%" height="15" fill="rgb(228,45,11)" fg:x="5119" fg:w="15"/><text x="95.1166%" y="431.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="95.1446%" y="437" width="0.0185%" height="15" fill="rgb(237,182,11)" fg:x="5134" fg:w="1"/><text x="95.3946%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="95.1446%" y="421" width="0.0185%" height="15" fill="rgb(241,175,49)" fg:x="5134" fg:w="1"/><text x="95.3946%" y="431.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (68 samples, 1.26%)</title><rect x="93.9400%" y="533" width="1.2602%" height="15" fill="rgb(247,38,35)" fg:x="5069" fg:w="68"/><text x="94.1900%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (68 samples, 1.26%)</title><rect x="93.9400%" y="517" width="1.2602%" height="15" fill="rgb(228,39,49)" fg:x="5069" fg:w="68"/><text x="94.1900%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (66 samples, 1.22%)</title><rect x="93.9770%" y="501" width="1.2231%" height="15" fill="rgb(226,101,26)" fg:x="5071" fg:w="66"/><text x="94.2270%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (64 samples, 1.19%)</title><rect x="94.0141%" y="485" width="1.1861%" height="15" fill="rgb(206,141,19)" fg:x="5073" fg:w="64"/><text x="94.2641%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (64 samples, 1.19%)</title><rect x="94.0141%" y="469" width="1.1861%" height="15" fill="rgb(211,200,13)" fg:x="5073" fg:w="64"/><text x="94.2641%" y="479.50"></text></g><g><title>alloc::alloc::alloc (64 samples, 1.19%)</title><rect x="94.0141%" y="453" width="1.1861%" height="15" fill="rgb(241,121,6)" fg:x="5073" fg:w="64"/><text x="94.2641%" y="463.50"></text></g><g><title>__rust_alloc (2 samples, 0.04%)</title><rect x="95.1631%" y="437" width="0.0371%" height="15" fill="rgb(234,221,29)" fg:x="5135" fg:w="2"/><text x="95.4131%" y="447.50"></text></g><g><title>lluvia::Snapshot&lt;T&gt;::snapshot (214 samples, 3.97%)</title><rect x="91.9199%" y="565" width="3.9659%" height="15" fill="rgb(229,136,5)" fg:x="4960" fg:w="214"/><text x="92.1699%" y="575.50">lluv..</text></g><g><title>lluvia::Snapshot&lt;T&gt;::new (114 samples, 2.11%)</title><rect x="93.7732%" y="549" width="2.1127%" height="15" fill="rgb(238,36,11)" fg:x="5060" fg:w="114"/><text x="94.0232%" y="559.50">l..</text></g><g><title>lluvia::Table&lt;T,C&gt;::new (37 samples, 0.69%)</title><rect x="95.2001%" y="533" width="0.6857%" height="15" fill="rgb(251,55,41)" fg:x="5137" fg:w="37"/><text x="95.4501%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (37 samples, 0.69%)</title><rect x="95.2001%" y="517" width="0.6857%" height="15" fill="rgb(242,34,40)" fg:x="5137" fg:w="37"/><text x="95.4501%" y="527.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (36 samples, 0.67%)</title><rect x="95.2187%" y="501" width="0.6672%" height="15" fill="rgb(215,42,17)" fg:x="5138" fg:w="36"/><text x="95.4687%" y="511.50"></text></g><g><title>alloc::alloc::exchange_malloc (32 samples, 0.59%)</title><rect x="95.2928%" y="485" width="0.5930%" height="15" fill="rgb(207,44,46)" fg:x="5142" fg:w="32"/><text x="95.5428%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (32 samples, 0.59%)</title><rect x="95.2928%" y="469" width="0.5930%" height="15" fill="rgb(211,206,28)" fg:x="5142" fg:w="32"/><text x="95.5428%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (32 samples, 0.59%)</title><rect x="95.2928%" y="453" width="0.5930%" height="15" fill="rgb(237,167,16)" fg:x="5142" fg:w="32"/><text x="95.5428%" y="463.50"></text></g><g><title>alloc::alloc::alloc (32 samples, 0.59%)</title><rect x="95.2928%" y="437" width="0.5930%" height="15" fill="rgb(233,66,6)" fg:x="5142" fg:w="32"/><text x="95.5428%" y="447.50"></text></g><g><title>__GI___libc_malloc (32 samples, 0.59%)</title><rect x="95.2928%" y="421" width="0.5930%" height="15" fill="rgb(246,123,29)" fg:x="5142" fg:w="32"/><text x="95.5428%" y="431.50"></text></g><g><title>_int_malloc (22 samples, 0.41%)</title><rect x="95.4781%" y="405" width="0.4077%" height="15" fill="rgb(209,62,40)" fg:x="5152" fg:w="22"/><text x="95.7281%" y="415.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.04%)</title><rect x="95.9414%" y="533" width="0.0371%" height="15" fill="rgb(218,4,25)" fg:x="5177" fg:w="2"/><text x="96.1914%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (2 samples, 0.04%)</title><rect x="95.9414%" y="517" width="0.0371%" height="15" fill="rgb(253,91,49)" fg:x="5177" fg:w="2"/><text x="96.1914%" y="527.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.04%)</title><rect x="95.9414%" y="501" width="0.0371%" height="15" fill="rgb(228,155,29)" fg:x="5177" fg:w="2"/><text x="96.1914%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.02%)</title><rect x="95.9785%" y="517" width="0.0185%" height="15" fill="rgb(243,57,37)" fg:x="5179" fg:w="1"/><text x="96.2285%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.02%)</title><rect x="95.9785%" y="501" width="0.0185%" height="15" fill="rgb(244,167,17)" fg:x="5179" fg:w="1"/><text x="96.2285%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.02%)</title><rect x="95.9785%" y="485" width="0.0185%" height="15" fill="rgb(207,181,38)" fg:x="5179" fg:w="1"/><text x="96.2285%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (3 samples, 0.06%)</title><rect x="95.9970%" y="517" width="0.0556%" height="15" fill="rgb(211,8,23)" fg:x="5180" fg:w="3"/><text x="96.2470%" y="527.50"></text></g><g><title>core::mem::replace (3 samples, 0.06%)</title><rect x="95.9970%" y="501" width="0.0556%" height="15" fill="rgb(235,11,44)" fg:x="5180" fg:w="3"/><text x="96.2470%" y="511.50"></text></g><g><title>core::ptr::read (3 samples, 0.06%)</title><rect x="95.9970%" y="485" width="0.0556%" height="15" fill="rgb(248,18,52)" fg:x="5180" fg:w="3"/><text x="96.2470%" y="495.50"></text></g><g><title>lluvia::VecContainer&lt;T&gt;::ensure_space_for_id (5 samples, 0.09%)</title><rect x="96.0526%" y="517" width="0.0927%" height="15" fill="rgb(208,4,7)" fg:x="5183" fg:w="5"/><text x="96.3026%" y="527.50"></text></g><g><title>lluvia::VecContainer&lt;T&gt;::get_indices (4 samples, 0.07%)</title><rect x="96.0712%" y="501" width="0.0741%" height="15" fill="rgb(240,17,39)" fg:x="5184" fg:w="4"/><text x="96.3212%" y="511.50"></text></g><g><title>&lt;lluvia::VecContainer&lt;T&gt; as lluvia::Container&lt;T&gt;&gt;::take (14 samples, 0.26%)</title><rect x="95.9785%" y="533" width="0.2595%" height="15" fill="rgb(207,170,3)" fg:x="5179" fg:w="14"/><text x="96.2285%" y="543.50"></text></g><g><title>lluvia::VecContainer&lt;T&gt;::get_indices (5 samples, 0.09%)</title><rect x="96.1453%" y="517" width="0.0927%" height="15" fill="rgb(236,100,52)" fg:x="5188" fg:w="5"/><text x="96.3953%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;lluvia::TableInternal&lt;&amp;str,lluvia::VecContainer&lt;&amp;str&gt;&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="96.2380%" y="533" width="0.0371%" height="15" fill="rgb(246,78,51)" fg:x="5193" fg:w="2"/><text x="96.4880%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="96.2380%" y="517" width="0.0371%" height="15" fill="rgb(211,17,15)" fg:x="5193" fg:w="2"/><text x="96.4880%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_unlock (1 samples, 0.02%)</title><rect x="96.2565%" y="501" width="0.0185%" height="15" fill="rgb(209,59,46)" fg:x="5194" fg:w="1"/><text x="96.5065%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (1 samples, 0.02%)</title><rect x="96.2565%" y="485" width="0.0185%" height="15" fill="rgb(210,92,25)" fg:x="5194" fg:w="1"/><text x="96.5065%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.02%)</title><rect x="96.2565%" y="469" width="0.0185%" height="15" fill="rgb(238,174,52)" fg:x="5194" fg:w="1"/><text x="96.5065%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;lluvia::InstanceInternal&gt;&gt; (5 samples, 0.09%)</title><rect x="96.2936%" y="517" width="0.0927%" height="15" fill="rgb(230,73,7)" fg:x="5196" fg:w="5"/><text x="96.5436%" y="527.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.09%)</title><rect x="96.2936%" y="501" width="0.0927%" height="15" fill="rgb(243,124,40)" fg:x="5196" fg:w="5"/><text x="96.5436%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (5 samples, 0.09%)</title><rect x="96.2936%" y="485" width="0.0927%" height="15" fill="rgb(244,170,11)" fg:x="5196" fg:w="5"/><text x="96.5436%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (5 samples, 0.09%)</title><rect x="96.2936%" y="469" width="0.0927%" height="15" fill="rgb(207,114,54)" fg:x="5196" fg:w="5"/><text x="96.5436%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (5 samples, 0.09%)</title><rect x="96.2936%" y="453" width="0.0927%" height="15" fill="rgb(205,42,20)" fg:x="5196" fg:w="5"/><text x="96.5436%" y="463.50"></text></g><g><title>lluvia::IdTable::id_is_valid (3 samples, 0.06%)</title><rect x="96.3862%" y="517" width="0.0556%" height="15" fill="rgb(230,30,28)" fg:x="5201" fg:w="3"/><text x="96.6362%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (2 samples, 0.04%)</title><rect x="96.4418%" y="485" width="0.0371%" height="15" fill="rgb(205,73,54)" fg:x="5204" fg:w="2"/><text x="96.6918%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.04%)</title><rect x="96.4418%" y="469" width="0.0371%" height="15" fill="rgb(254,227,23)" fg:x="5204" fg:w="2"/><text x="96.6918%" y="479.50"></text></g><g><title>lluvia::Instance::id_is_valid (12 samples, 0.22%)</title><rect x="96.2750%" y="533" width="0.2224%" height="15" fill="rgb(228,202,34)" fg:x="5195" fg:w="12"/><text x="96.5250%" y="543.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (3 samples, 0.06%)</title><rect x="96.4418%" y="517" width="0.0556%" height="15" fill="rgb(222,225,37)" fg:x="5204" fg:w="3"/><text x="96.6918%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (3 samples, 0.06%)</title><rect x="96.4418%" y="501" width="0.0556%" height="15" fill="rgb(221,14,54)" fg:x="5204" fg:w="3"/><text x="96.6918%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::is_read_lockable (1 samples, 0.02%)</title><rect x="96.4789%" y="485" width="0.0185%" height="15" fill="rgb(254,102,2)" fg:x="5206" fg:w="1"/><text x="96.7289%" y="495.50"></text></g><g><title>lluvia::RawComponent&lt;T,C&gt;::take (35 samples, 0.65%)</title><rect x="95.9044%" y="549" width="0.6486%" height="15" fill="rgb(232,104,17)" fg:x="5175" fg:w="35"/><text x="96.1544%" y="559.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (3 samples, 0.06%)</title><rect x="96.4974%" y="533" width="0.0556%" height="15" fill="rgb(250,220,14)" fg:x="5207" fg:w="3"/><text x="96.7474%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write (3 samples, 0.06%)</title><rect x="96.4974%" y="517" width="0.0556%" height="15" fill="rgb(241,158,9)" fg:x="5207" fg:w="3"/><text x="96.7474%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (3 samples, 0.06%)</title><rect x="96.4974%" y="501" width="0.0556%" height="15" fill="rgb(246,9,43)" fg:x="5207" fg:w="3"/><text x="96.7474%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.06%)</title><rect x="96.4974%" y="485" width="0.0556%" height="15" fill="rgb(206,73,33)" fg:x="5207" fg:w="3"/><text x="96.7474%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (1 samples, 0.02%)</title><rect x="96.6827%" y="501" width="0.0185%" height="15" fill="rgb(222,79,8)" fg:x="5217" fg:w="1"/><text x="96.9327%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.02%)</title><rect x="96.6827%" y="485" width="0.0185%" height="15" fill="rgb(234,8,54)" fg:x="5217" fg:w="1"/><text x="96.9327%" y="495.50"></text></g><g><title>&lt;lluvia::VecContainer&lt;T&gt; as lluvia::Container&lt;T&gt;&gt;::index (5 samples, 0.09%)</title><rect x="96.6642%" y="517" width="0.0927%" height="15" fill="rgb(209,134,38)" fg:x="5216" fg:w="5"/><text x="96.9142%" y="527.50"></text></g><g><title>lluvia::VecContainer&lt;T&gt;::get_indices (3 samples, 0.06%)</title><rect x="96.7013%" y="501" width="0.0556%" height="15" fill="rgb(230,127,29)" fg:x="5218" fg:w="3"/><text x="96.9513%" y="511.50"></text></g><g><title>&lt;lluvia::TableRef&lt;T,C&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.11%)</title><rect x="96.6642%" y="533" width="0.1112%" height="15" fill="rgb(242,44,41)" fg:x="5216" fg:w="6"/><text x="96.9142%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="96.7569%" y="517" width="0.0185%" height="15" fill="rgb(222,56,43)" fg:x="5221" fg:w="1"/><text x="97.0069%" y="527.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="96.7569%" y="501" width="0.0185%" height="15" fill="rgb(238,39,47)" fg:x="5221" fg:w="1"/><text x="97.0069%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (1 samples, 0.02%)</title><rect x="96.7754%" y="533" width="0.0185%" height="15" fill="rgb(226,79,43)" fg:x="5222" fg:w="1"/><text x="97.0254%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.02%)</title><rect x="96.7754%" y="517" width="0.0185%" height="15" fill="rgb(242,105,53)" fg:x="5222" fg:w="1"/><text x="97.0254%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::TableRefEntityType&gt; (2 samples, 0.04%)</title><rect x="96.7939%" y="517" width="0.0371%" height="15" fill="rgb(251,132,46)" fg:x="5223" fg:w="2"/><text x="97.0439%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt; (2 samples, 0.04%)</title><rect x="96.7939%" y="501" width="0.0371%" height="15" fill="rgb(231,77,14)" fg:x="5223" fg:w="2"/><text x="97.0439%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="96.7939%" y="485" width="0.0371%" height="15" fill="rgb(240,135,9)" fg:x="5223" fg:w="2"/><text x="97.0439%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.04%)</title><rect x="96.7939%" y="469" width="0.0371%" height="15" fill="rgb(248,109,14)" fg:x="5223" fg:w="2"/><text x="97.0439%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.04%)</title><rect x="96.7939%" y="453" width="0.0371%" height="15" fill="rgb(227,146,52)" fg:x="5223" fg:w="2"/><text x="97.0439%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;lluvia::TableRef&lt;&amp;str,lluvia::VecContainer&lt;&amp;str&gt;&gt;&gt; (3 samples, 0.06%)</title><rect x="96.7939%" y="533" width="0.0556%" height="15" fill="rgb(232,54,3)" fg:x="5223" fg:w="3"/><text x="97.0439%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;lluvia::TableInternal&lt;&amp;str,lluvia::VecContainer&lt;&amp;str&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="96.8310%" y="517" width="0.0185%" height="15" fill="rgb(229,201,43)" fg:x="5225" fg:w="1"/><text x="97.0810%" y="527.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="96.8310%" y="501" width="0.0185%" height="15" fill="rgb(252,161,33)" fg:x="5225" fg:w="1"/><text x="97.0810%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="96.8681%" y="517" width="0.0371%" height="15" fill="rgb(226,146,40)" fg:x="5227" fg:w="2"/><text x="97.1181%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.04%)</title><rect x="96.8681%" y="501" width="0.0371%" height="15" fill="rgb(219,47,25)" fg:x="5227" fg:w="2"/><text x="97.1181%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.04%)</title><rect x="96.8681%" y="485" width="0.0371%" height="15" fill="rgb(250,135,13)" fg:x="5227" fg:w="2"/><text x="97.1181%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.06%)</title><rect x="96.9051%" y="517" width="0.0556%" height="15" fill="rgb(219,229,18)" fg:x="5229" fg:w="3"/><text x="97.1551%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (3 samples, 0.06%)</title><rect x="96.9051%" y="501" width="0.0556%" height="15" fill="rgb(217,152,27)" fg:x="5229" fg:w="3"/><text x="97.1551%" y="511.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (3 samples, 0.06%)</title><rect x="96.9051%" y="485" width="0.0556%" height="15" fill="rgb(225,71,47)" fg:x="5229" fg:w="3"/><text x="97.1551%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="96.9607%" y="501" width="0.0185%" height="15" fill="rgb(220,139,14)" fg:x="5232" fg:w="1"/><text x="97.2107%" y="511.50"></text></g><g><title>&lt;lluvia::VecContainer&lt;T&gt; as lluvia::Container&lt;T&gt;&gt;::index (7 samples, 0.13%)</title><rect x="96.9607%" y="517" width="0.1297%" height="15" fill="rgb(247,54,32)" fg:x="5232" fg:w="7"/><text x="97.2107%" y="527.50"></text></g><g><title>lluvia::VecContainer&lt;T&gt;::get_indices (6 samples, 0.11%)</title><rect x="96.9792%" y="501" width="0.1112%" height="15" fill="rgb(252,131,39)" fg:x="5233" fg:w="6"/><text x="97.2292%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;lluvia::TableInternal&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;,lluvia::VecContainer&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="97.0904%" y="517" width="0.0371%" height="15" fill="rgb(210,108,39)" fg:x="5239" fg:w="2"/><text x="97.3404%" y="527.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="97.0904%" y="501" width="0.0371%" height="15" fill="rgb(205,23,29)" fg:x="5239" fg:w="2"/><text x="97.3404%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (2 samples, 0.04%)</title><rect x="97.0904%" y="485" width="0.0371%" height="15" fill="rgb(246,139,46)" fg:x="5239" fg:w="2"/><text x="97.3404%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (2 samples, 0.04%)</title><rect x="97.0904%" y="469" width="0.0371%" height="15" fill="rgb(250,81,26)" fg:x="5239" fg:w="2"/><text x="97.3404%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.04%)</title><rect x="97.0904%" y="453" width="0.0371%" height="15" fill="rgb(214,104,7)" fg:x="5239" fg:w="2"/><text x="97.3404%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;lluvia::InstanceInternal&gt;&gt; (1 samples, 0.02%)</title><rect x="97.2016%" y="501" width="0.0185%" height="15" fill="rgb(233,189,8)" fg:x="5245" fg:w="1"/><text x="97.4516%" y="511.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="97.2016%" y="485" width="0.0185%" height="15" fill="rgb(228,141,17)" fg:x="5245" fg:w="1"/><text x="97.4516%" y="495.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (1 samples, 0.02%)</title><rect x="97.2016%" y="469" width="0.0185%" height="15" fill="rgb(247,157,1)" fg:x="5245" fg:w="1"/><text x="97.4516%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (1 samples, 0.02%)</title><rect x="97.2016%" y="453" width="0.0185%" height="15" fill="rgb(249,225,5)" fg:x="5245" fg:w="1"/><text x="97.4516%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.02%)</title><rect x="97.2016%" y="437" width="0.0185%" height="15" fill="rgb(242,55,13)" fg:x="5245" fg:w="1"/><text x="97.4516%" y="447.50"></text></g><g><title>lluvia::IdTable::id_is_valid (1 samples, 0.02%)</title><rect x="97.2202%" y="501" width="0.0185%" height="15" fill="rgb(230,49,50)" fg:x="5246" fg:w="1"/><text x="97.4702%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (4 samples, 0.07%)</title><rect x="97.2387%" y="469" width="0.0741%" height="15" fill="rgb(241,111,38)" fg:x="5247" fg:w="4"/><text x="97.4887%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (4 samples, 0.07%)</title><rect x="97.2387%" y="453" width="0.0741%" height="15" fill="rgb(252,155,4)" fg:x="5247" fg:w="4"/><text x="97.4887%" y="463.50"></text></g><g><title>lluvia::Instance::id_is_valid (12 samples, 0.22%)</title><rect x="97.1275%" y="517" width="0.2224%" height="15" fill="rgb(212,69,32)" fg:x="5241" fg:w="12"/><text x="97.3775%" y="527.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (6 samples, 0.11%)</title><rect x="97.2387%" y="501" width="0.1112%" height="15" fill="rgb(243,107,47)" fg:x="5247" fg:w="6"/><text x="97.4887%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (6 samples, 0.11%)</title><rect x="97.2387%" y="485" width="0.1112%" height="15" fill="rgb(247,130,12)" fg:x="5247" fg:w="6"/><text x="97.4887%" y="495.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::is_read_lockable (2 samples, 0.04%)</title><rect x="97.3128%" y="469" width="0.0371%" height="15" fill="rgb(233,74,16)" fg:x="5251" fg:w="2"/><text x="97.5628%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (4 samples, 0.07%)</title><rect x="97.3499%" y="485" width="0.0741%" height="15" fill="rgb(208,58,18)" fg:x="5253" fg:w="4"/><text x="97.5999%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (4 samples, 0.07%)</title><rect x="97.3499%" y="469" width="0.0741%" height="15" fill="rgb(242,225,1)" fg:x="5253" fg:w="4"/><text x="97.5999%" y="479.50"></text></g><g><title>lluvia::RawComponent&lt;T,C&gt;::get (33 samples, 0.61%)</title><rect x="96.8495%" y="533" width="0.6116%" height="15" fill="rgb(249,39,40)" fg:x="5226" fg:w="33"/><text x="97.0995%" y="543.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (6 samples, 0.11%)</title><rect x="97.3499%" y="517" width="0.1112%" height="15" fill="rgb(207,72,44)" fg:x="5253" fg:w="6"/><text x="97.5999%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (6 samples, 0.11%)</title><rect x="97.3499%" y="501" width="0.1112%" height="15" fill="rgb(215,193,12)" fg:x="5253" fg:w="6"/><text x="97.5999%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::is_read_lockable (2 samples, 0.04%)</title><rect x="97.4240%" y="485" width="0.0371%" height="15" fill="rgb(248,41,39)" fg:x="5257" fg:w="2"/><text x="97.6740%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.02%)</title><rect x="97.6649%" y="485" width="0.0185%" height="15" fill="rgb(253,85,4)" fg:x="5270" fg:w="1"/><text x="97.9149%" y="495.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="97.6649%" y="469" width="0.0185%" height="15" fill="rgb(243,70,31)" fg:x="5270" fg:w="1"/><text x="97.9149%" y="479.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="97.6649%" y="453" width="0.0185%" height="15" fill="rgb(253,195,26)" fg:x="5270" fg:w="1"/><text x="97.9149%" y="463.50"></text></g><g><title>lluvia::VecContainer&lt;T&gt;::ensure_space_for_id (5 samples, 0.09%)</title><rect x="97.6649%" y="501" width="0.0927%" height="15" fill="rgb(243,42,11)" fg:x="5270" fg:w="5"/><text x="97.9149%" y="511.50"></text></g><g><title>lluvia::VecContainer&lt;T&gt;::get_indices (4 samples, 0.07%)</title><rect x="97.6835%" y="485" width="0.0741%" height="15" fill="rgb(239,66,17)" fg:x="5271" fg:w="4"/><text x="97.9335%" y="495.50"></text></g><g><title>&lt;lluvia::VecContainer&lt;T&gt; as lluvia::Container&lt;T&gt;&gt;::set (8 samples, 0.15%)</title><rect x="97.6464%" y="517" width="0.1483%" height="15" fill="rgb(217,132,21)" fg:x="5269" fg:w="8"/><text x="97.8964%" y="527.50"></text></g><g><title>lluvia::VecContainer&lt;T&gt;::get_indices (2 samples, 0.04%)</title><rect x="97.7576%" y="501" width="0.0371%" height="15" fill="rgb(252,202,21)" fg:x="5275" fg:w="2"/><text x="98.0076%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;lluvia::TableInternal&lt;&amp;str,lluvia::VecContainer&lt;&amp;str&gt;&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="97.7947%" y="517" width="0.0371%" height="15" fill="rgb(233,98,36)" fg:x="5277" fg:w="2"/><text x="98.0447%" y="527.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="97.7947%" y="501" width="0.0371%" height="15" fill="rgb(216,153,54)" fg:x="5277" fg:w="2"/><text x="98.0447%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;lluvia::InstanceInternal&gt;&gt; (2 samples, 0.04%)</title><rect x="97.8503%" y="501" width="0.0371%" height="15" fill="rgb(250,99,7)" fg:x="5280" fg:w="2"/><text x="98.1003%" y="511.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="97.8503%" y="485" width="0.0371%" height="15" fill="rgb(207,56,50)" fg:x="5280" fg:w="2"/><text x="98.1003%" y="495.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (2 samples, 0.04%)</title><rect x="97.8503%" y="469" width="0.0371%" height="15" fill="rgb(244,61,34)" fg:x="5280" fg:w="2"/><text x="98.1003%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (2 samples, 0.04%)</title><rect x="97.8503%" y="453" width="0.0371%" height="15" fill="rgb(241,50,38)" fg:x="5280" fg:w="2"/><text x="98.1003%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.04%)</title><rect x="97.8503%" y="437" width="0.0371%" height="15" fill="rgb(212,166,30)" fg:x="5280" fg:w="2"/><text x="98.1003%" y="447.50"></text></g><g><title>lluvia::IdTable::id_is_valid (3 samples, 0.06%)</title><rect x="97.8873%" y="501" width="0.0556%" height="15" fill="rgb(249,127,32)" fg:x="5282" fg:w="3"/><text x="98.1373%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (4 samples, 0.07%)</title><rect x="97.9429%" y="469" width="0.0741%" height="15" fill="rgb(209,103,0)" fg:x="5285" fg:w="4"/><text x="98.1929%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (4 samples, 0.07%)</title><rect x="97.9429%" y="453" width="0.0741%" height="15" fill="rgb(238,209,51)" fg:x="5285" fg:w="4"/><text x="98.1929%" y="463.50"></text></g><g><title>lluvia::Instance::id_is_valid (13 samples, 0.24%)</title><rect x="97.8317%" y="517" width="0.2409%" height="15" fill="rgb(237,56,23)" fg:x="5279" fg:w="13"/><text x="98.0817%" y="527.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (7 samples, 0.13%)</title><rect x="97.9429%" y="501" width="0.1297%" height="15" fill="rgb(215,153,46)" fg:x="5285" fg:w="7"/><text x="98.1929%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (7 samples, 0.13%)</title><rect x="97.9429%" y="485" width="0.1297%" height="15" fill="rgb(224,49,31)" fg:x="5285" fg:w="7"/><text x="98.1929%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (3 samples, 0.06%)</title><rect x="98.0170%" y="469" width="0.0556%" height="15" fill="rgb(250,18,42)" fg:x="5289" fg:w="3"/><text x="98.2670%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.06%)</title><rect x="98.0170%" y="453" width="0.0556%" height="15" fill="rgb(215,176,39)" fg:x="5289" fg:w="3"/><text x="98.2670%" y="463.50"></text></g><g><title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="98.0726%" y="501" width="0.0185%" height="15" fill="rgb(223,77,29)" fg:x="5292" fg:w="1"/><text x="98.3226%" y="511.50"></text></g><g><title>std::sync::poison::Flag::guard (1 samples, 0.02%)</title><rect x="98.0726%" y="485" width="0.0185%" height="15" fill="rgb(234,94,52)" fg:x="5292" fg:w="1"/><text x="98.3226%" y="495.50"></text></g><g><title>std::thread::panicking (1 samples, 0.02%)</title><rect x="98.0726%" y="469" width="0.0185%" height="15" fill="rgb(220,154,50)" fg:x="5292" fg:w="1"/><text x="98.3226%" y="479.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.02%)</title><rect x="98.0726%" y="453" width="0.0185%" height="15" fill="rgb(212,11,10)" fg:x="5292" fg:w="1"/><text x="98.3226%" y="463.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.02%)</title><rect x="98.0726%" y="437" width="0.0185%" height="15" fill="rgb(205,166,19)" fg:x="5292" fg:w="1"/><text x="98.3226%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="98.0726%" y="421" width="0.0185%" height="15" fill="rgb(244,198,16)" fg:x="5292" fg:w="1"/><text x="98.3226%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="98.0726%" y="405" width="0.0185%" height="15" fill="rgb(219,69,12)" fg:x="5292" fg:w="1"/><text x="98.3226%" y="415.50"></text></g><g><title>lluvia::RawComponent&lt;T,C&gt;::set (35 samples, 0.65%)</title><rect x="97.4611%" y="533" width="0.6486%" height="15" fill="rgb(245,30,7)" fg:x="5259" fg:w="35"/><text x="97.7111%" y="543.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (2 samples, 0.04%)</title><rect x="98.0726%" y="517" width="0.0371%" height="15" fill="rgb(218,221,48)" fg:x="5292" fg:w="2"/><text x="98.3226%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write (1 samples, 0.02%)</title><rect x="98.0912%" y="501" width="0.0185%" height="15" fill="rgb(216,66,15)" fg:x="5293" fg:w="1"/><text x="98.3412%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.06%)</title><rect x="98.1097%" y="517" width="0.0556%" height="15" fill="rgb(226,122,50)" fg:x="5294" fg:w="3"/><text x="98.3597%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.06%)</title><rect x="98.1097%" y="501" width="0.0556%" height="15" fill="rgb(239,156,16)" fg:x="5294" fg:w="3"/><text x="98.3597%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.06%)</title><rect x="98.1097%" y="485" width="0.0556%" height="15" fill="rgb(224,27,38)" fg:x="5294" fg:w="3"/><text x="98.3597%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.02%)</title><rect x="98.3321%" y="469" width="0.0185%" height="15" fill="rgb(224,39,27)" fg:x="5306" fg:w="1"/><text x="98.5821%" y="479.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="98.3321%" y="453" width="0.0185%" height="15" fill="rgb(215,92,29)" fg:x="5306" fg:w="1"/><text x="98.5821%" y="463.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="98.3321%" y="437" width="0.0185%" height="15" fill="rgb(207,159,16)" fg:x="5306" fg:w="1"/><text x="98.5821%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (1 samples, 0.02%)</title><rect x="98.3506%" y="469" width="0.0185%" height="15" fill="rgb(238,163,47)" fg:x="5307" fg:w="1"/><text x="98.6006%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.02%)</title><rect x="98.3506%" y="453" width="0.0185%" height="15" fill="rgb(219,91,49)" fg:x="5307" fg:w="1"/><text x="98.6006%" y="463.50"></text></g><g><title>lluvia::VecContainer&lt;T&gt;::ensure_space_for_id (8 samples, 0.15%)</title><rect x="98.2765%" y="485" width="0.1483%" height="15" fill="rgb(227,167,31)" fg:x="5303" fg:w="8"/><text x="98.5265%" y="495.50"></text></g><g><title>lluvia::VecContainer&lt;T&gt;::get_indices (3 samples, 0.06%)</title><rect x="98.3692%" y="469" width="0.0556%" height="15" fill="rgb(234,80,54)" fg:x="5308" fg:w="3"/><text x="98.6192%" y="479.50"></text></g><g><title>&lt;lluvia::VecContainer&lt;T&gt; as lluvia::Container&lt;T&gt;&gt;::set (13 samples, 0.24%)</title><rect x="98.2394%" y="501" width="0.2409%" height="15" fill="rgb(212,114,2)" fg:x="5301" fg:w="13"/><text x="98.4894%" y="511.50"></text></g><g><title>lluvia::VecContainer&lt;T&gt;::get_indices (3 samples, 0.06%)</title><rect x="98.4248%" y="485" width="0.0556%" height="15" fill="rgb(234,50,24)" fg:x="5311" fg:w="3"/><text x="98.6748%" y="495.50"></text></g><g><title>std::sync::poison::Flag::done (1 samples, 0.02%)</title><rect x="98.4804%" y="469" width="0.0185%" height="15" fill="rgb(221,68,8)" fg:x="5314" fg:w="1"/><text x="98.7304%" y="479.50"></text></g><g><title>std::thread::panicking (1 samples, 0.02%)</title><rect x="98.4804%" y="453" width="0.0185%" height="15" fill="rgb(254,180,31)" fg:x="5314" fg:w="1"/><text x="98.7304%" y="463.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.02%)</title><rect x="98.4804%" y="437" width="0.0185%" height="15" fill="rgb(247,130,50)" fg:x="5314" fg:w="1"/><text x="98.7304%" y="447.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.02%)</title><rect x="98.4804%" y="421" width="0.0185%" height="15" fill="rgb(211,109,4)" fg:x="5314" fg:w="1"/><text x="98.7304%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="98.4804%" y="405" width="0.0185%" height="15" fill="rgb(238,50,21)" fg:x="5314" fg:w="1"/><text x="98.7304%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="98.4804%" y="389" width="0.0185%" height="15" fill="rgb(225,57,45)" fg:x="5314" fg:w="1"/><text x="98.7304%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;lluvia::TableInternal&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;,lluvia::VecContainer&lt;alloc::sync::Arc&lt;lluvia::EntityInternal&gt;&gt;&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="98.4804%" y="501" width="0.0371%" height="15" fill="rgb(209,196,50)" fg:x="5314" fg:w="2"/><text x="98.7304%" y="511.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="98.4804%" y="485" width="0.0371%" height="15" fill="rgb(242,140,13)" fg:x="5314" fg:w="2"/><text x="98.7304%" y="495.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_unlock (1 samples, 0.02%)</title><rect x="98.4989%" y="469" width="0.0185%" height="15" fill="rgb(217,111,7)" fg:x="5315" fg:w="1"/><text x="98.7489%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (1 samples, 0.02%)</title><rect x="98.4989%" y="453" width="0.0185%" height="15" fill="rgb(253,193,51)" fg:x="5315" fg:w="1"/><text x="98.7489%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.02%)</title><rect x="98.4989%" y="437" width="0.0185%" height="15" fill="rgb(252,70,29)" fg:x="5315" fg:w="1"/><text x="98.7489%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.02%)</title><rect x="98.5174%" y="501" width="0.0185%" height="15" fill="rgb(232,127,12)" fg:x="5316" fg:w="1"/><text x="98.7674%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.04%)</title><rect x="98.5545%" y="485" width="0.0371%" height="15" fill="rgb(211,180,21)" fg:x="5318" fg:w="2"/><text x="98.8045%" y="495.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (2 samples, 0.04%)</title><rect x="98.5545%" y="469" width="0.0371%" height="15" fill="rgb(229,72,13)" fg:x="5318" fg:w="2"/><text x="98.8045%" y="479.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.04%)</title><rect x="98.5545%" y="453" width="0.0371%" height="15" fill="rgb(240,211,49)" fg:x="5318" fg:w="2"/><text x="98.8045%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;lluvia::InstanceInternal&gt;&gt; (1 samples, 0.02%)</title><rect x="98.5915%" y="485" width="0.0185%" height="15" fill="rgb(219,149,40)" fg:x="5320" fg:w="1"/><text x="98.8415%" y="495.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="98.5915%" y="469" width="0.0185%" height="15" fill="rgb(210,127,46)" fg:x="5320" fg:w="1"/><text x="98.8415%" y="479.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (1 samples, 0.02%)</title><rect x="98.5915%" y="453" width="0.0185%" height="15" fill="rgb(220,106,7)" fg:x="5320" fg:w="1"/><text x="98.8415%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (1 samples, 0.02%)</title><rect x="98.5915%" y="437" width="0.0185%" height="15" fill="rgb(249,31,22)" fg:x="5320" fg:w="1"/><text x="98.8415%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.02%)</title><rect x="98.5915%" y="421" width="0.0185%" height="15" fill="rgb(253,1,49)" fg:x="5320" fg:w="1"/><text x="98.8415%" y="431.50"></text></g><g><title>lluvia::Instance::id_is_valid (5 samples, 0.09%)</title><rect x="98.5360%" y="501" width="0.0927%" height="15" fill="rgb(227,144,33)" fg:x="5317" fg:w="5"/><text x="98.7860%" y="511.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.02%)</title><rect x="98.6101%" y="485" width="0.0185%" height="15" fill="rgb(249,163,44)" fg:x="5321" fg:w="1"/><text x="98.8601%" y="495.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (1 samples, 0.02%)</title><rect x="98.6101%" y="469" width="0.0185%" height="15" fill="rgb(234,15,39)" fg:x="5321" fg:w="1"/><text x="98.8601%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (1 samples, 0.02%)</title><rect x="98.6101%" y="453" width="0.0185%" height="15" fill="rgb(207,66,16)" fg:x="5321" fg:w="1"/><text x="98.8601%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.02%)</title><rect x="98.6101%" y="437" width="0.0185%" height="15" fill="rgb(233,112,24)" fg:x="5321" fg:w="1"/><text x="98.8601%" y="447.50"></text></g><g><title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (2 samples, 0.04%)</title><rect x="98.6286%" y="485" width="0.0371%" height="15" fill="rgb(230,90,22)" fg:x="5322" fg:w="2"/><text x="98.8786%" y="495.50"></text></g><g><title>std::sync::poison::Flag::guard (2 samples, 0.04%)</title><rect x="98.6286%" y="469" width="0.0371%" height="15" fill="rgb(229,61,13)" fg:x="5322" fg:w="2"/><text x="98.8786%" y="479.50"></text></g><g><title>std::thread::panicking (2 samples, 0.04%)</title><rect x="98.6286%" y="453" width="0.0371%" height="15" fill="rgb(225,57,24)" fg:x="5322" fg:w="2"/><text x="98.8786%" y="463.50"></text></g><g><title>std::panicking::panicking (2 samples, 0.04%)</title><rect x="98.6286%" y="437" width="0.0371%" height="15" fill="rgb(208,169,48)" fg:x="5322" fg:w="2"/><text x="98.8786%" y="447.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (2 samples, 0.04%)</title><rect x="98.6286%" y="421" width="0.0371%" height="15" fill="rgb(244,218,51)" fg:x="5322" fg:w="2"/><text x="98.8786%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="98.6471%" y="405" width="0.0185%" height="15" fill="rgb(214,148,10)" fg:x="5323" fg:w="1"/><text x="98.8971%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="98.6471%" y="389" width="0.0185%" height="15" fill="rgb(225,174,27)" fg:x="5323" fg:w="1"/><text x="98.8971%" y="399.50"></text></g><g><title>__GI___clone (4,438 samples, 82.25%)</title><rect x="16.5678%" y="997" width="82.2461%" height="15" fill="rgb(230,96,26)" fg:x="894" fg:w="4438"/><text x="16.8178%" y="1007.50">__GI___clone</text></g><g><title>start_thread (4,438 samples, 82.25%)</title><rect x="16.5678%" y="981" width="82.2461%" height="15" fill="rgb(232,10,30)" fg:x="894" fg:w="4438"/><text x="16.8178%" y="991.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (4,438 samples, 82.25%)</title><rect x="16.5678%" y="965" width="82.2461%" height="15" fill="rgb(222,8,50)" fg:x="894" fg:w="4438"/><text x="16.8178%" y="975.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4,438 samples, 82.25%)</title><rect x="16.5678%" y="949" width="82.2461%" height="15" fill="rgb(213,81,27)" fg:x="894" fg:w="4438"/><text x="16.8178%" y="959.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4,438 samples, 82.25%)</title><rect x="16.5678%" y="933" width="82.2461%" height="15" fill="rgb(245,50,10)" fg:x="894" fg:w="4438"/><text x="16.8178%" y="943.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (4,438 samples, 82.25%)</title><rect x="16.5678%" y="917" width="82.2461%" height="15" fill="rgb(216,100,18)" fg:x="894" fg:w="4438"/><text x="16.8178%" y="927.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (4,438 samples, 82.25%)</title><rect x="16.5678%" y="901" width="82.2461%" height="15" fill="rgb(236,147,54)" fg:x="894" fg:w="4438"/><text x="16.8178%" y="911.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::panic::catch_unwind (4,438 samples, 82.25%)</title><rect x="16.5678%" y="885" width="82.2461%" height="15" fill="rgb(205,143,26)" fg:x="894" fg:w="4438"/><text x="16.8178%" y="895.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (4,438 samples, 82.25%)</title><rect x="16.5678%" y="869" width="82.2461%" height="15" fill="rgb(236,26,9)" fg:x="894" fg:w="4438"/><text x="16.8178%" y="879.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (4,438 samples, 82.25%)</title><rect x="16.5678%" y="853" width="82.2461%" height="15" fill="rgb(221,165,53)" fg:x="894" fg:w="4438"/><text x="16.8178%" y="863.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,438 samples, 82.25%)</title><rect x="16.5678%" y="837" width="82.2461%" height="15" fill="rgb(214,110,17)" fg:x="894" fg:w="4438"/><text x="16.8178%" y="847.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (4,438 samples, 82.25%)</title><rect x="16.5678%" y="821" width="82.2461%" height="15" fill="rgb(237,197,12)" fg:x="894" fg:w="4438"/><text x="16.8178%" y="831.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4,438 samples, 82.25%)</title><rect x="16.5678%" y="805" width="82.2461%" height="15" fill="rgb(205,84,17)" fg:x="894" fg:w="4438"/><text x="16.8178%" y="815.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>test::run_test::{{closure}} (4,438 samples, 82.25%)</title><rect x="16.5678%" y="789" width="82.2461%" height="15" fill="rgb(237,18,45)" fg:x="894" fg:w="4438"/><text x="16.8178%" y="799.50">test::run_test::{{closure}}</text></g><g><title>test::run_test::{{closure}} (4,438 samples, 82.25%)</title><rect x="16.5678%" y="773" width="82.2461%" height="15" fill="rgb(221,87,14)" fg:x="894" fg:w="4438"/><text x="16.8178%" y="783.50">test::run_test::{{closure}}</text></g><g><title>test::run_test_in_process (4,438 samples, 82.25%)</title><rect x="16.5678%" y="757" width="82.2461%" height="15" fill="rgb(238,186,15)" fg:x="894" fg:w="4438"/><text x="16.8178%" y="767.50">test::run_test_in_process</text></g><g><title>std::panic::catch_unwind (4,438 samples, 82.25%)</title><rect x="16.5678%" y="741" width="82.2461%" height="15" fill="rgb(208,115,11)" fg:x="894" fg:w="4438"/><text x="16.8178%" y="751.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (4,438 samples, 82.25%)</title><rect x="16.5678%" y="725" width="82.2461%" height="15" fill="rgb(254,175,0)" fg:x="894" fg:w="4438"/><text x="16.8178%" y="735.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (4,438 samples, 82.25%)</title><rect x="16.5678%" y="709" width="82.2461%" height="15" fill="rgb(227,24,42)" fg:x="894" fg:w="4438"/><text x="16.8178%" y="719.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,438 samples, 82.25%)</title><rect x="16.5678%" y="693" width="82.2461%" height="15" fill="rgb(223,211,37)" fg:x="894" fg:w="4438"/><text x="16.8178%" y="703.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>test::run_test_in_process::{{closure}} (4,438 samples, 82.25%)</title><rect x="16.5678%" y="677" width="82.2461%" height="15" fill="rgb(235,49,27)" fg:x="894" fg:w="4438"/><text x="16.8178%" y="687.50">test::run_test_in_process::{{closure}}</text></g><g><title>test::__rust_begin_short_backtrace (4,438 samples, 82.25%)</title><rect x="16.5678%" y="661" width="82.2461%" height="15" fill="rgb(254,97,51)" fg:x="894" fg:w="4438"/><text x="16.8178%" y="671.50">test::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (4,438 samples, 82.25%)</title><rect x="16.5678%" y="645" width="82.2461%" height="15" fill="rgb(249,51,40)" fg:x="894" fg:w="4438"/><text x="16.8178%" y="655.50">core::ops::function::FnOnce::call_once</text></g><g><title>core::ops::function::FnOnce::call_once (4,438 samples, 82.25%)</title><rect x="16.5678%" y="629" width="82.2461%" height="15" fill="rgb(210,128,45)" fg:x="894" fg:w="4438"/><text x="16.8178%" y="639.50">core::ops::function::FnOnce::call_once</text></g><g><title>lluvia::tests::torture_test::{{closure}} (4,438 samples, 82.25%)</title><rect x="16.5678%" y="613" width="82.2461%" height="15" fill="rgb(224,137,50)" fg:x="894" fg:w="4438"/><text x="16.8178%" y="623.50">lluvia::tests::torture_test::{{closure}}</text></g><g><title>lluvia::tests::torture_test (4,438 samples, 82.25%)</title><rect x="16.5678%" y="597" width="82.2461%" height="15" fill="rgb(242,15,9)" fg:x="894" fg:w="4438"/><text x="16.8178%" y="607.50">lluvia::tests::torture_test</text></g><g><title>lluvia::tests::snapshot_test (4,437 samples, 82.23%)</title><rect x="16.5864%" y="581" width="82.2276%" height="15" fill="rgb(233,187,41)" fg:x="895" fg:w="4437"/><text x="16.8364%" y="591.50">lluvia::tests::snapshot_test</text></g><g><title>lluvia::Snapshot&lt;T&gt;::take (158 samples, 2.93%)</title><rect x="95.8858%" y="565" width="2.9281%" height="15" fill="rgb(227,2,29)" fg:x="5174" fg:w="158"/><text x="96.1358%" y="575.50">ll..</text></g><g><title>lluvia::Snapshot&lt;T&gt;::ensure_value (122 samples, 2.26%)</title><rect x="96.5530%" y="549" width="2.2609%" height="15" fill="rgb(222,70,3)" fg:x="5210" fg:w="122"/><text x="96.8030%" y="559.50">l..</text></g><g><title>lluvia::Snapshot&lt;T&gt;::mark_entity (38 samples, 0.70%)</title><rect x="98.1097%" y="533" width="0.7042%" height="15" fill="rgb(213,11,42)" fg:x="5294" fg:w="38"/><text x="98.3597%" y="543.50"></text></g><g><title>lluvia::RawComponent&lt;T,C&gt;::set (35 samples, 0.65%)</title><rect x="98.1653%" y="517" width="0.6486%" height="15" fill="rgb(225,150,9)" fg:x="5297" fg:w="35"/><text x="98.4153%" y="527.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (10 samples, 0.19%)</title><rect x="98.6286%" y="501" width="0.1853%" height="15" fill="rgb(230,162,45)" fg:x="5322" fg:w="10"/><text x="98.8786%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write (8 samples, 0.15%)</title><rect x="98.6657%" y="485" width="0.1483%" height="15" fill="rgb(222,14,52)" fg:x="5324" fg:w="8"/><text x="98.9157%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (8 samples, 0.15%)</title><rect x="98.6657%" y="469" width="0.1483%" height="15" fill="rgb(254,198,14)" fg:x="5324" fg:w="8"/><text x="98.9157%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (8 samples, 0.15%)</title><rect x="98.6657%" y="453" width="0.1483%" height="15" fill="rgb(220,217,30)" fg:x="5324" fg:w="8"/><text x="98.9157%" y="463.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="98.8139%" y="997" width="0.0185%" height="15" fill="rgb(215,146,41)" fg:x="5332" fg:w="1"/><text x="99.0639%" y="1007.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="98.8325%" y="997" width="0.0185%" height="15" fill="rgb(217,27,36)" fg:x="5333" fg:w="1"/><text x="99.0825%" y="1007.50"></text></g><g><title>__rust_alloc_error_handler_should_panic (5 samples, 0.09%)</title><rect x="98.8510%" y="997" width="0.0927%" height="15" fill="rgb(219,218,39)" fg:x="5334" fg:w="5"/><text x="99.1010%" y="1007.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.09%)</title><rect x="98.8510%" y="981" width="0.0927%" height="15" fill="rgb(219,4,42)" fg:x="5334" fg:w="5"/><text x="99.1010%" y="991.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.09%)</title><rect x="98.9437%" y="997" width="0.0927%" height="15" fill="rgb(249,119,36)" fg:x="5339" fg:w="5"/><text x="99.1937%" y="1007.50"></text></g><g><title>&lt;lluvia::ComponentIterator&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.30%)</title><rect x="99.0363%" y="981" width="0.2965%" height="15" fill="rgb(209,23,33)" fg:x="5344" fg:w="16"/><text x="99.2863%" y="991.50"></text></g><g><title>lluvia::RawComponent&lt;T,C&gt;::set (9 samples, 0.17%)</title><rect x="99.3328%" y="981" width="0.1668%" height="15" fill="rgb(211,10,0)" fg:x="5360" fg:w="9"/><text x="99.5828%" y="991.50"></text></g><g><title>anon.e2a6da61a22c867629cc2fd8cc7cd33e.15.llvm.2292296395186354698 (40 samples, 0.74%)</title><rect x="99.0363%" y="997" width="0.7413%" height="15" fill="rgb(208,99,37)" fg:x="5344" fg:w="40"/><text x="99.2863%" y="1007.50"></text></g><g><title>lluvia::RawComponent&lt;T,C&gt;::take (15 samples, 0.28%)</title><rect x="99.4996%" y="981" width="0.2780%" height="15" fill="rgb(213,132,31)" fg:x="5369" fg:w="15"/><text x="99.7496%" y="991.50"></text></g><g><title>lluvia::RawComponent&lt;T,C&gt;::take (1 samples, 0.02%)</title><rect x="99.7776%" y="997" width="0.0185%" height="15" fill="rgb(243,129,40)" fg:x="5384" fg:w="1"/><text x="100.0276%" y="1007.50"></text></g><g><title>lluvia::VecContainer&lt;T&gt;::ensure_space_for_id (7 samples, 0.13%)</title><rect x="99.7961%" y="997" width="0.1297%" height="15" fill="rgb(210,66,33)" fg:x="5385" fg:w="7"/><text x="100.0461%" y="1007.50"></text></g><g><title>lluvia::VecContainer&lt;T&gt;::ensure_space_for_id (2 samples, 0.04%)</title><rect x="99.9259%" y="981" width="0.0371%" height="15" fill="rgb(209,189,4)" fg:x="5392" fg:w="2"/><text x="100.1759%" y="991.50"></text></g><g><title>all (5,396 samples, 100%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(214,107,37)" fg:x="0" fg:w="5396"/><text x="0.2500%" y="1039.50"></text></g><g><title>tests::torture_ (5,379 samples, 99.68%)</title><rect x="0.3150%" y="1013" width="99.6850%" height="15" fill="rgb(245,88,54)" fg:x="17" fg:w="5379"/><text x="0.5650%" y="1023.50">tests::torture_</text></g><g><title>std::panicking::HOOK (4 samples, 0.07%)</title><rect x="99.9259%" y="997" width="0.0741%" height="15" fill="rgb(205,146,20)" fg:x="5392" fg:w="4"/><text x="100.1759%" y="1007.50"></text></g><g><title>malloc_consolidate (2 samples, 0.04%)</title><rect x="99.9629%" y="981" width="0.0371%" height="15" fill="rgb(220,161,25)" fg:x="5394" fg:w="2"/><text x="100.2129%" y="991.50"></text></g></svg></svg>